export default Cooperate;
declare class Cooperate {
    constructor(opt: any);
    opt: any;
    mindMap: any;
    ydoc: any;
    ymap: any;
    provider: any;
    awareness: any;
    currentAwarenessData: any[];
    waitNodeUidMap: {};
    currentData: any;
    userInfo: any;
    isSetData: boolean;
    initData(data: any): void;
    onObserve(event: any): void;
    getDoc(): any;
    setProvider(provider: any, webrtcProviderConfig?: {}): void;
    onAwareness(): void;
    bindEvent(): void;
    onDataChange(data: any): void;
    onNodeActive(node: any, nodeList: any): void;
    onNodeTreeRenderEnd(): void;
    onSetData(data: any): void;
    unBindEvent(): void;
    updateChanges(data: any): void;
    /**
     * {
     *    id: '',     // 必传，用户唯一的id
     *    name: '',   // 用户名称。name和avatar两个只传一个即可，如果都传了，会显示avatar
     *    avatar: '', // 用户头像
     *    color: ''   // 如果没有传头像，那么会以一个圆形来显示名称的第一个字，文字的颜色为白色，圆的颜色可以通过该字段设置
     * }
     **/
    setUserInfo(userInfo: any): void;
    beforePluginRemove(): void;
    beforePluginDestroy(): void;
}
declare namespace Cooperate {
    const instanceName: string;
}
