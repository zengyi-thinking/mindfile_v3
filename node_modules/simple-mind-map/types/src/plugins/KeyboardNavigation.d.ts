export default KeyboardNavigation;
declare class KeyboardNavigation {
    constructor(opt: any);
    opt: any;
    mindMap: any;
    addShortcut(): void;
    onLeftKeyUp(): void;
    onUpKeyUp(): void;
    onRightKeyUp(): void;
    onDownKeyUp(): void;
    removeShortcut(): void;
    onKeyup(dir: any): void;
    focus(dir: any): void;
    getFocusNodeBySimpleAlgorithm({ currentActiveNode, currentActiveNodeRect, dir, checkNodeDis }: {
        currentActiveNode: any;
        currentActiveNodeRect: any;
        dir: any;
        checkNodeDis: any;
    }): void;
    getFocusNodeByShadowAlgorithm({ currentActiveNode, currentActiveNodeRect, dir, checkNodeDis }: {
        currentActiveNode: any;
        currentActiveNodeRect: any;
        dir: any;
        checkNodeDis: any;
    }): void;
    getFocusNodeByAreaAlgorithm({ currentActiveNode, currentActiveNodeRect, dir, checkNodeDis }: {
        currentActiveNode: any;
        currentActiveNodeRect: any;
        dir: any;
        checkNodeDis: any;
    }): void;
    getNodeRect(node: any): {
        right: any;
        bottom: any;
        left: any;
        top: any;
    };
    getDistance(node1Rect: any, node2Rect: any): number;
    getCenter({ left, right, top, bottom }: {
        left: any;
        right: any;
        top: any;
        bottom: any;
    }): {
        x: number;
        y: number;
    };
    beforePluginRemove(): void;
    beforePluginDestroy(): void;
}
declare namespace KeyboardNavigation {
    const instanceName: string;
}
