export default Watermark;
declare class Watermark {
    constructor(opt?: {});
    mindMap: any;
    lineSpacing: number;
    textSpacing: number;
    angle: number;
    text: string;
    textStyle: {};
    watermarkDraw: any;
    isInExport: boolean;
    maxLong: number;
    getMaxLong(): number;
    bindEvent(): void;
    onResize(): void;
    unBindEvent(): void;
    createContainer(): void;
    updateLayer(): void;
    removeContainer(): void;
    hasWatermark(): boolean;
    handleConfig({ text, lineSpacing, textSpacing, angle, textStyle }: {
        text: any;
        lineSpacing: any;
        textSpacing: any;
        angle: any;
        textStyle: any;
    }): void;
    clear(): void;
    draw(): void;
    drawText(x: any, y: any): void;
    setTextStyle(text: any): void;
    updateWatermark(config: any): void;
    beforePluginRemove(): void;
    beforePluginDestroy(): void;
}
declare namespace Watermark {
    const instanceName: string;
}
