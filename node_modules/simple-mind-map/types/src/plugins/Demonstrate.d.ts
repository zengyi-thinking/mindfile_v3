export default Demonstrate;
declare class Demonstrate {
    constructor(opt: any);
    mindMap: any;
    isInDemonstrate: boolean;
    stepList: any[];
    currentStepIndex: number;
    currentStepNode: any;
    currentUnderlineTextData: {
        index: number;
        list: any;
        length: any;
    };
    tmpStyleEl: HTMLStyleElement;
    highlightEl: HTMLDivElement;
    transformState: any;
    renderTree: any;
    config: any;
    needRestorePerformanceMode: boolean;
    enter(): void;
    _enter(): void;
    exit(): void;
    pausePerformanceMode(): void;
    restorePerformanceMode(): void;
    addTmpStyles(): void;
    removeTmpStyles(): void;
    createHighlightEl(): void;
    removeHighlightEl(): void;
    updateHighlightEl({ left, top, width, height }: {
        left: any;
        top: any;
        width: any;
        height: any;
    }): void;
    bindEvent(): void;
    onKeydown(e: any): void;
    bindFullscreenEvent(): void;
    onFullscreenChange(): void;
    unBindEvent(): void;
    prev(): void;
    next(): void;
    showNextUnderlineText(): void;
    jump(index: any): void;
    getStepList(): void;
    beforePluginRemove(): void;
    beforePluginDestroy(): void;
}
declare namespace Demonstrate {
    const instanceName: string;
}
