export default NodeImgAdjust;
declare class NodeImgAdjust {
    constructor({ mindMap }: {
        mindMap: any;
    });
    mindMap: any;
    handleEl: HTMLDivElement;
    isShowHandleEl: boolean;
    node: any;
    img: any;
    rect: any;
    isMousedown: boolean;
    mousedownDrawTransform: any;
    mousedownOffset: {
        x: number;
        y: number;
    };
    currentImgWidth: number;
    currentImgHeight: number;
    isAdjusted: boolean;
    bindEvent(): void;
    onNodeImgMouseleave(): void;
    onNodeImgMousemove(node: any, img: any): void;
    onMousemove(e: any): void;
    onMouseup(): void;
    onRenderEnd(): void;
    unBindEvent(): void;
    hideNodeImage(): void;
    showNodeImage(): void;
    showHandleEl(): void;
    hideHandleEl(): void;
    setHandleElRect(): void;
    updateHandleElSize(): void;
    createResizeBtnEl(): void;
    onMousedown(e: any): void;
    beforePluginRemove(): void;
    beforePluginDestroy(): void;
}
declare namespace NodeImgAdjust {
    const instanceName: string;
}
