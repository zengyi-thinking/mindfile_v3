{
  "version": 3,
  "sources": ["../../eventemitter3/index.js", "../../simple-mind-map/src/constants/constant.js", "../../simple-mind-map/src/core/view/View.js", "../../simple-mind-map/src/core/event/Event.js", "../../deepmerge/dist/es.js", "../../uuid/dist/esm-browser/rng.js", "../../uuid/dist/esm-browser/regex.js", "../../uuid/dist/esm-browser/validate.js", "../../uuid/dist/esm-browser/stringify.js", "../../uuid/dist/esm-browser/parse.js", "../../uuid/dist/esm-browser/v35.js", "../../uuid/dist/esm-browser/md5.js", "../../uuid/dist/esm-browser/v3.js", "../../uuid/dist/esm-browser/native.js", "../../uuid/dist/esm-browser/v4.js", "../../uuid/dist/esm-browser/sha1.js", "../../uuid/dist/esm-browser/v5.js", "../../simple-mind-map/src/utils/mersenneTwister.js", "../../@svgdotjs/svg.js/src/utils/methods.js", "../../@svgdotjs/svg.js/src/utils/utils.js", "../../@svgdotjs/svg.js/src/modules/core/namespaces.js", "../../@svgdotjs/svg.js/src/utils/window.js", "../../@svgdotjs/svg.js/src/types/Base.js", "../../@svgdotjs/svg.js/src/utils/adopter.js", "../../@svgdotjs/svg.js/src/modules/optional/arrange.js", "../../@svgdotjs/svg.js/src/modules/core/regex.js", "../../@svgdotjs/svg.js/src/modules/optional/class.js", "../../@svgdotjs/svg.js/src/modules/optional/css.js", "../../@svgdotjs/svg.js/src/modules/optional/data.js", "../../@svgdotjs/svg.js/src/modules/optional/memory.js", "../../@svgdotjs/svg.js/src/types/Color.js", "../../@svgdotjs/svg.js/src/types/Point.js", "../../@svgdotjs/svg.js/src/types/Matrix.js", "../../@svgdotjs/svg.js/src/modules/core/parser.js", "../../@svgdotjs/svg.js/src/types/Box.js", "../../@svgdotjs/svg.js/src/types/List.js", "../../@svgdotjs/svg.js/src/modules/core/selector.js", "../../@svgdotjs/svg.js/src/modules/core/event.js", "../../@svgdotjs/svg.js/src/types/EventTarget.js", "../../@svgdotjs/svg.js/src/modules/core/defaults.js", "../../@svgdotjs/svg.js/src/types/SVGArray.js", "../../@svgdotjs/svg.js/src/types/SVGNumber.js", "../../@svgdotjs/svg.js/src/modules/core/attr.js", "../../@svgdotjs/svg.js/src/elements/Dom.js", "../../@svgdotjs/svg.js/src/elements/Element.js", "../../@svgdotjs/svg.js/src/modules/optional/sugar.js", "../../@svgdotjs/svg.js/src/modules/optional/transform.js", "../../@svgdotjs/svg.js/src/elements/Container.js", "../../@svgdotjs/svg.js/src/elements/Defs.js", "../../@svgdotjs/svg.js/src/elements/Shape.js", "../../@svgdotjs/svg.js/src/modules/core/circled.js", "../../@svgdotjs/svg.js/src/elements/Ellipse.js", "../../@svgdotjs/svg.js/src/elements/Fragment.js", "../../@svgdotjs/svg.js/src/modules/core/gradiented.js", "../../@svgdotjs/svg.js/src/elements/Gradient.js", "../../@svgdotjs/svg.js/src/elements/Pattern.js", "../../@svgdotjs/svg.js/src/elements/Image.js", "../../@svgdotjs/svg.js/src/types/PointArray.js", "../../@svgdotjs/svg.js/src/modules/core/pointed.js", "../../@svgdotjs/svg.js/src/elements/Line.js", "../../@svgdotjs/svg.js/src/elements/Marker.js", "../../@svgdotjs/svg.js/src/animation/Controller.js", "../../@svgdotjs/svg.js/src/utils/pathParser.js", "../../@svgdotjs/svg.js/src/types/PathArray.js", "../../@svgdotjs/svg.js/src/animation/Morphable.js", "../../@svgdotjs/svg.js/src/elements/Path.js", "../../@svgdotjs/svg.js/src/modules/core/poly.js", "../../@svgdotjs/svg.js/src/elements/Polygon.js", "../../@svgdotjs/svg.js/src/elements/Polyline.js", "../../@svgdotjs/svg.js/src/elements/Rect.js", "../../@svgdotjs/svg.js/src/animation/Queue.js", "../../@svgdotjs/svg.js/src/animation/Animator.js", "../../@svgdotjs/svg.js/src/animation/Timeline.js", "../../@svgdotjs/svg.js/src/animation/Runner.js", "../../@svgdotjs/svg.js/src/elements/Svg.js", "../../@svgdotjs/svg.js/src/elements/Symbol.js", "../../@svgdotjs/svg.js/src/modules/core/textable.js", "../../@svgdotjs/svg.js/src/elements/Text.js", "../../@svgdotjs/svg.js/src/elements/Tspan.js", "../../@svgdotjs/svg.js/src/elements/Circle.js", "../../@svgdotjs/svg.js/src/elements/ClipPath.js", "../../@svgdotjs/svg.js/src/elements/ForeignObject.js", "../../@svgdotjs/svg.js/src/modules/core/containerGeometry.js", "../../@svgdotjs/svg.js/src/elements/G.js", "../../@svgdotjs/svg.js/src/elements/A.js", "../../@svgdotjs/svg.js/src/elements/Mask.js", "../../@svgdotjs/svg.js/src/elements/Stop.js", "../../@svgdotjs/svg.js/src/elements/Style.js", "../../@svgdotjs/svg.js/src/elements/TextPath.js", "../../@svgdotjs/svg.js/src/elements/Use.js", "../../@svgdotjs/svg.js/src/main.js", "../../simple-mind-map/src/theme/default.js", "../../simple-mind-map/src/utils/index.js", "../../simple-mind-map/src/core/render/node/Style.js", "../../simple-mind-map/src/core/render/node/Shape.js", "../../simple-mind-map/src/core/render/node/nodeGeneralization.js", "../../simple-mind-map/src/svg/btns.js", "../../simple-mind-map/src/core/render/node/nodeExpandBtn.js", "../../simple-mind-map/src/core/render/node/nodeCommandWraps.js", "../../simple-mind-map/src/svg/icons.js", "../../simple-mind-map/src/core/render/node/nodeCreateContents.js", "../../simple-mind-map/src/core/render/node/nodeExpandBtnPlaceholderRect.js", "../../simple-mind-map/src/core/render/node/nodeModifyWidth.js", "../../simple-mind-map/src/core/render/node/nodeCooperate.js", "../../simple-mind-map/src/core/render/node/quickCreateChildBtn.js", "../../simple-mind-map/src/core/render/node/nodeLayout.js", "../../simple-mind-map/src/core/render/node/MindMapNode.js", "../../simple-mind-map/src/utils/Lru.js", "../../simple-mind-map/src/layouts/Base.js", "../../simple-mind-map/src/layouts/LogicalStructure.js", "../../simple-mind-map/src/layouts/MindMap.js", "../../simple-mind-map/src/layouts/CatalogOrganization.js", "../../simple-mind-map/src/layouts/OrganizationStructure.js", "../../simple-mind-map/src/layouts/Timeline.js", "../../simple-mind-map/src/layouts/VerticalTimeline.js", "../../simple-mind-map/src/layouts/fishboneUtils.js", "../../simple-mind-map/src/layouts/Fishbone.js", "../../simple-mind-map/src/core/render/TextEdit.js", "../../simple-mind-map/src/core/render/Render.js", "../../simple-mind-map/src/theme/index.js", "../../simple-mind-map/src/core/command/keyMap.js", "../../simple-mind-map/src/core/command/KeyCommand.js", "../../simple-mind-map/package.json", "../../simple-mind-map/src/core/command/Command.js", "../../simple-mind-map/src/utils/BatchExecution.js", "../../simple-mind-map/src/constants/defaultOptions.js", "../../simple-mind-map/index.js"],
  "sourcesContent": ["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "// 常量\r\nexport const CONSTANTS = {\r\n  CHANGE_THEME: 'changeTheme',\r\n  CHANGE_LAYOUT: 'changeLayout',\r\n  SET_DATA: 'setData',\r\n  MODE: {\r\n    READONLY: 'readonly',\r\n    EDIT: 'edit'\r\n  },\r\n  LAYOUT: {\r\n    LOGICAL_STRUCTURE: 'logicalStructure',\r\n    LOGICAL_STRUCTURE_LEFT: 'logicalStructureLeft',\r\n    MIND_MAP: 'mindMap',\r\n    ORGANIZATION_STRUCTURE: 'organizationStructure',\r\n    CATALOG_ORGANIZATION: 'catalogOrganization',\r\n    TIMELINE: 'timeline',\r\n    TIMELINE2: 'timeline2',\r\n    FISHBONE: 'fishbone',\r\n    VERTICAL_TIMELINE: 'verticalTimeline'\r\n  },\r\n  DIR: {\r\n    UP: 'up',\r\n    LEFT: 'left',\r\n    DOWN: 'down',\r\n    RIGHT: 'right'\r\n  },\r\n  KEY_DIR: {\r\n    LEFT: 'Left',\r\n    UP: 'Up',\r\n    RIGHT: 'Right',\r\n    DOWN: 'Down'\r\n  },\r\n  SHAPE: {\r\n    RECTANGLE: 'rectangle',\r\n    DIAMOND: 'diamond',\r\n    PARALLELOGRAM: 'parallelogram',\r\n    ROUNDED_RECTANGLE: 'roundedRectangle',\r\n    OCTAGONAL_RECTANGLE: 'octagonalRectangle',\r\n    OUTER_TRIANGULAR_RECTANGLE: 'outerTriangularRectangle',\r\n    INNER_TRIANGULAR_RECTANGLE: 'innerTriangularRectangle',\r\n    ELLIPSE: 'ellipse',\r\n    CIRCLE: 'circle'\r\n  },\r\n  MOUSE_WHEEL_ACTION: {\r\n    ZOOM: 'zoom',\r\n    MOVE: 'move'\r\n  },\r\n  INIT_ROOT_NODE_POSITION: {\r\n    LEFT: 'left',\r\n    TOP: 'top',\r\n    RIGHT: 'right',\r\n    BOTTOM: 'bottom',\r\n    CENTER: 'center'\r\n  },\r\n  LAYOUT_GROW_DIR: {\r\n    LEFT: 'left',\r\n    TOP: 'top',\r\n    RIGHT: 'right',\r\n    BOTTOM: 'bottom'\r\n  },\r\n  PASTE_TYPE: {\r\n    CLIP_BOARD: 'clipBoard',\r\n    CANVAS: 'canvas'\r\n  },\r\n  SCROLL_BAR_DIR: {\r\n    VERTICAL: 'vertical',\r\n    HORIZONTAL: 'horizontal'\r\n  },\r\n  CREATE_NEW_NODE_BEHAVIOR: {\r\n    DEFAULT: 'default',\r\n    NOT_ACTIVE: 'notActive',\r\n    ACTIVE_ONLY: 'activeOnly'\r\n  },\r\n  TAG_PLACEMENT: {\r\n    RIGHT: 'right',\r\n    BOTTOM: 'bottom'\r\n  },\r\n  IMG_PLACEMENT: {\r\n    LEFT: 'left',\r\n    TOP: 'top',\r\n    RIGHT: 'right',\r\n    BOTTOM: 'bottom'\r\n  },\r\n  EDIT_NODE_CLASS: {\r\n    SMM_NODE_EDIT_WRAP: 'smm-node-edit-wrap',\r\n    RICH_TEXT_EDIT_WRAP: 'ql-editor',\r\n    ASSOCIATIVE_LINE_TEXT_EDIT_WRAP: 'associative-line-text-edit-warp'\r\n  }\r\n}\r\n\r\nexport const initRootNodePositionMap = {\r\n  [CONSTANTS.INIT_ROOT_NODE_POSITION.LEFT]: 0,\r\n  [CONSTANTS.INIT_ROOT_NODE_POSITION.TOP]: 0,\r\n  [CONSTANTS.INIT_ROOT_NODE_POSITION.RIGHT]: 1,\r\n  [CONSTANTS.INIT_ROOT_NODE_POSITION.BOTTOM]: 1,\r\n  [CONSTANTS.INIT_ROOT_NODE_POSITION.CENTER]: 0.5\r\n}\r\n\r\n//  布局结构列表\r\nexport const layoutList = [\r\n  {\r\n    name: '逻辑结构图',\r\n    value: CONSTANTS.LAYOUT.LOGICAL_STRUCTURE\r\n  },\r\n  {\r\n    name: '向左逻辑结构图',\r\n    value: CONSTANTS.LAYOUT.LOGICAL_STRUCTURE_LEFT\r\n  },\r\n  {\r\n    name: '思维导图',\r\n    value: CONSTANTS.LAYOUT.MIND_MAP\r\n  },\r\n  {\r\n    name: '组织结构图',\r\n    value: CONSTANTS.LAYOUT.ORGANIZATION_STRUCTURE\r\n  },\r\n  {\r\n    name: '目录组织图',\r\n    value: CONSTANTS.LAYOUT.CATALOG_ORGANIZATION\r\n  },\r\n  {\r\n    name: '时间轴',\r\n    value: CONSTANTS.LAYOUT.TIMELINE\r\n  },\r\n  {\r\n    name: '时间轴2',\r\n    value: CONSTANTS.LAYOUT.TIMELINE2\r\n  },\r\n  {\r\n    name: '竖向时间轴',\r\n    value: CONSTANTS.LAYOUT.VERTICAL_TIMELINE\r\n  },\r\n  {\r\n    name: '鱼骨图',\r\n    value: CONSTANTS.LAYOUT.FISHBONE\r\n  }\r\n]\r\nexport const layoutValueList = [\r\n  CONSTANTS.LAYOUT.LOGICAL_STRUCTURE,\r\n  CONSTANTS.LAYOUT.LOGICAL_STRUCTURE_LEFT,\r\n  CONSTANTS.LAYOUT.MIND_MAP,\r\n  CONSTANTS.LAYOUT.CATALOG_ORGANIZATION,\r\n  CONSTANTS.LAYOUT.ORGANIZATION_STRUCTURE,\r\n  CONSTANTS.LAYOUT.TIMELINE,\r\n  CONSTANTS.LAYOUT.TIMELINE2,\r\n  CONSTANTS.LAYOUT.VERTICAL_TIMELINE,\r\n  CONSTANTS.LAYOUT.FISHBONE\r\n]\r\n\r\n// 节点数据中非样式的字段\r\nexport const nodeDataNoStylePropList = [\r\n  'text',\r\n  'image',\r\n  'imageTitle',\r\n  'imageSize',\r\n  'icon',\r\n  'tag',\r\n  'hyperlink',\r\n  'hyperlinkTitle',\r\n  'note',\r\n  'expand',\r\n  'isActive',\r\n  'generalization',\r\n  'richText',\r\n  'resetRichText',// 重新创建富文本内容，去掉原有样式\r\n  'uid',\r\n  'activeStyle',\r\n  'associativeLineTargets',\r\n  'associativeLineTargetControlOffsets',\r\n  'associativeLinePoint',\r\n  'associativeLineText',\r\n  'attachmentUrl',\r\n  'attachmentName',\r\n  'notation',\r\n  'outerFrame',\r\n  'number',\r\n  'range',\r\n  'customLeft',\r\n  'customTop',\r\n  'customTextWidth',\r\n  'checkbox',\r\n  'dir',\r\n  'needUpdate'// 重新创建节点内容\r\n]\r\n\r\n// 错误类型\r\nexport const ERROR_TYPES = {\r\n  READ_CLIPBOARD_ERROR: 'read_clipboard_error',\r\n  PARSE_PASTE_DATA_ERROR: 'parse_paste_data_error',\r\n  CUSTOM_HANDLE_CLIPBOARD_TEXT_ERROR: 'custom_handle_clipboard_text_error',\r\n  LOAD_CLIPBOARD_IMAGE_ERROR: 'load_clipboard_image_error',\r\n  BEFORE_TEXT_EDIT_ERROR: 'before_text_edit_error',\r\n  EXPORT_ERROR: 'export_error',\r\n  EXPORT_LOAD_IMAGE_ERROR: 'export_load_image_error',\r\n  DATA_CHANGE_DETAIL_EVENT_ERROR: 'data_change_detail_event_error'\r\n}\r\n\r\n// css\r\nexport const cssContent = `\r\n  /* 鼠标hover和激活时渲染的矩形 */\r\n  .smm-hover-node{\r\n    display: none;\r\n    opacity: 0.6;\r\n    stroke-width: 1;\r\n  }\r\n\r\n  .smm-node:not(.smm-node-dragging):hover .smm-hover-node{\r\n    display: block;\r\n  }\r\n\r\n  .smm-node.active .smm-hover-node, .smm-node-highlight .smm-hover-node{\r\n    display: block;\r\n    opacity: 1;\r\n    stroke-width: 2;\r\n  }\r\n\r\n  .smm-text-node-wrap, .smm-expand-btn-text {\r\n    user-select: none;\r\n  }\r\n`\r\n\r\n// html自闭合标签列表\r\nexport const selfCloseTagList = [\r\n  'img',\r\n  'br',\r\n  'hr',\r\n  'input',\r\n  'link',\r\n  'meta',\r\n  'area'\r\n]\r\n\r\n// 非富文本模式下的节点文本行高\r\nexport const noneRichTextNodeLineHeight = 1.2\r\n\r\n// 富文本支持的样式列表\r\nexport const richTextSupportStyleList = [\r\n  'fontFamily',\r\n  'fontSize',\r\n  'fontWeight',\r\n  'fontStyle',\r\n  'textDecoration',\r\n  'color',\r\n  'textAlign'\r\n]\r\n", "import { CONSTANTS } from '../../constants/constant'\r\n\r\n//  视图操作类\r\nclass View {\r\n  //  构造函数\r\n  constructor(opt = {}) {\r\n    this.opt = opt\r\n    this.mindMap = this.opt.mindMap\r\n    this.scale = 1\r\n    this.sx = 0\r\n    this.sy = 0\r\n    this.x = 0\r\n    this.y = 0\r\n    this.firstDrag = true\r\n    this.setTransformData(this.mindMap.opt.viewData)\r\n    this.bind()\r\n  }\r\n\r\n  //  绑定\r\n  bind() {\r\n    // 快捷键\r\n    this.mindMap.keyCommand.addShortcut('Control+=', () => {\r\n      this.enlarge()\r\n    })\r\n    this.mindMap.keyCommand.addShortcut('Control+-', () => {\r\n      this.narrow()\r\n    })\r\n    this.mindMap.keyCommand.addShortcut('Control+i', () => {\r\n      this.fit()\r\n    })\r\n    // 拖动视图\r\n    this.mindMap.event.on('mousedown', e => {\r\n      const { isDisableDrag, mousedownEventPreventDefault } = this.mindMap.opt\r\n      if (isDisableDrag) return\r\n      if (mousedownEventPreventDefault) {\r\n        e.preventDefault()\r\n      }\r\n      this.sx = this.x\r\n      this.sy = this.y\r\n    })\r\n    this.mindMap.event.on('drag', (e, event) => {\r\n      // 按住ctrl键拖动为多选\r\n      // 禁用拖拽\r\n      if (e.ctrlKey || e.metaKey || this.mindMap.opt.isDisableDrag) {\r\n        return\r\n      }\r\n      if (this.firstDrag) {\r\n        this.firstDrag = false\r\n        // 清除激活节点\r\n        if (this.mindMap.renderer.activeNodeList.length > 0) {\r\n          this.mindMap.execCommand('CLEAR_ACTIVE_NODE')\r\n        }\r\n      }\r\n      this.x = this.sx + event.mousemoveOffset.x\r\n      this.y = this.sy + event.mousemoveOffset.y\r\n      this.transform()\r\n    })\r\n    this.mindMap.event.on('mouseup', () => {\r\n      this.firstDrag = true\r\n    })\r\n    // 放大缩小视图\r\n    this.mindMap.event.on('mousewheel', (e, dirs, event, isTouchPad) => {\r\n      const {\r\n        customHandleMousewheel,\r\n        mousewheelAction,\r\n        mouseScaleCenterUseMousePosition,\r\n        mousewheelMoveStep,\r\n        mousewheelZoomActionReverse,\r\n        disableMouseWheelZoom,\r\n        translateRatio\r\n      } = this.mindMap.opt\r\n      // 是否自定义鼠标滚轮事件\r\n      if (\r\n        customHandleMousewheel &&\r\n        typeof customHandleMousewheel === 'function'\r\n      ) {\r\n        return customHandleMousewheel(e)\r\n      }\r\n      // 1.鼠标滚轮事件控制缩放\r\n      if (\r\n        mousewheelAction === CONSTANTS.MOUSE_WHEEL_ACTION.ZOOM ||\r\n        e.ctrlKey ||\r\n        e.metaKey\r\n      ) {\r\n        if (disableMouseWheelZoom) return\r\n        const { x: clientX, y: clientY } = this.mindMap.toPos(\r\n          e.clientX,\r\n          e.clientY\r\n        )\r\n        const cx = mouseScaleCenterUseMousePosition ? clientX : undefined\r\n        const cy = mouseScaleCenterUseMousePosition ? clientY : undefined\r\n        // 如果来自触控板，那么过滤掉左右的移动\r\n        if (\r\n          isTouchPad &&\r\n          (dirs.includes(CONSTANTS.DIR.LEFT) ||\r\n            dirs.includes(CONSTANTS.DIR.RIGHT))\r\n        ) {\r\n          dirs = dirs.filter(dir => {\r\n            return ![CONSTANTS.DIR.LEFT, CONSTANTS.DIR.RIGHT].includes(dir)\r\n          })\r\n        }\r\n        switch (true) {\r\n          // 鼠标滚轮，向上和向左，都是缩小\r\n          case dirs.includes(CONSTANTS.DIR.UP || CONSTANTS.DIR.LEFT):\r\n            mousewheelZoomActionReverse\r\n              ? this.enlarge(cx, cy, isTouchPad)\r\n              : this.narrow(cx, cy, isTouchPad)\r\n            break\r\n          // 鼠标滚轮，向下和向右，都是放大\r\n          case dirs.includes(CONSTANTS.DIR.DOWN || CONSTANTS.DIR.RIGHT):\r\n            mousewheelZoomActionReverse\r\n              ? this.narrow(cx, cy, isTouchPad)\r\n              : this.enlarge(cx, cy, isTouchPad)\r\n            break\r\n        }\r\n      } else {\r\n        // 2.鼠标滚轮事件控制画布移动\r\n        let stepX = 0\r\n        let stepY = 0\r\n        if (isTouchPad) {\r\n          // 如果是触控板，那么直接使用触控板滑动距离\r\n          stepX = Math.abs(e.wheelDeltaX)\r\n          stepY = Math.abs(e.wheelDeltaY)\r\n        } else {\r\n          stepX = stepY = mousewheelMoveStep\r\n        }\r\n        let mx = 0\r\n        let my = 0\r\n        // 上移\r\n        if (dirs.includes(CONSTANTS.DIR.DOWN)) {\r\n          my = -stepY\r\n        }\r\n        // 下移\r\n        if (dirs.includes(CONSTANTS.DIR.UP)) {\r\n          my = stepY\r\n        }\r\n        // 右移\r\n        if (dirs.includes(CONSTANTS.DIR.LEFT)) {\r\n          mx = stepX\r\n        }\r\n        // 左移\r\n        if (dirs.includes(CONSTANTS.DIR.RIGHT)) {\r\n          mx = -stepX\r\n        }\r\n        this.translateXY(mx * translateRatio, my * translateRatio)\r\n      }\r\n    })\r\n    this.mindMap.on('resize', () => {\r\n      if (!this.checkNeedMindMapInCanvas()) return\r\n      this.transform()\r\n    })\r\n  }\r\n\r\n  //  获取当前变换状态数据\r\n  getTransformData() {\r\n    return {\r\n      transform: this.mindMap.draw.transform(),\r\n      state: {\r\n        scale: this.scale,\r\n        x: this.x,\r\n        y: this.y,\r\n        sx: this.sx,\r\n        sy: this.sy\r\n      }\r\n    }\r\n  }\r\n\r\n  //  动态设置变换状态数据\r\n  setTransformData(viewData) {\r\n    if (viewData) {\r\n      Object.keys(viewData.state).forEach(prop => {\r\n        this[prop] = viewData.state[prop]\r\n      })\r\n      this.mindMap.draw.transform({\r\n        ...viewData.transform\r\n      })\r\n      this.mindMap.emit('view_data_change', this.getTransformData())\r\n      this.emitEvent('scale')\r\n      this.emitEvent('translate')\r\n    }\r\n  }\r\n\r\n  //  平移x,y方向\r\n  translateXY(x, y) {\r\n    if (x === 0 && y === 0) return\r\n    this.x += x\r\n    this.y += y\r\n    this.transform()\r\n    this.emitEvent('translate')\r\n  }\r\n\r\n  //  平移x方向\r\n  translateX(step) {\r\n    if (step === 0) return\r\n    this.x += step\r\n    this.transform()\r\n    this.emitEvent('translate')\r\n  }\r\n\r\n  //  平移x方式到\r\n  translateXTo(x) {\r\n    this.x = x\r\n    this.transform()\r\n    this.emitEvent('translate')\r\n  }\r\n\r\n  //  平移y方向\r\n  translateY(step) {\r\n    if (step === 0) return\r\n    this.y += step\r\n    this.transform()\r\n    this.emitEvent('translate')\r\n  }\r\n\r\n  //  平移y方向到\r\n  translateYTo(y) {\r\n    this.y = y\r\n    this.transform()\r\n    this.emitEvent('translate')\r\n  }\r\n\r\n  //   应用变换\r\n  transform() {\r\n    try {\r\n      this.limitMindMapInCanvas()\r\n    } catch (error) {}\r\n    this.mindMap.draw.transform({\r\n      origin: [0, 0],\r\n      scale: this.scale,\r\n      translate: [this.x, this.y]\r\n    })\r\n    this.mindMap.emit('view_data_change', this.getTransformData())\r\n  }\r\n\r\n  //  恢复\r\n  reset() {\r\n    const scaleChange = this.scale !== 1\r\n    const translateChange = this.x !== 0 || this.y !== 0\r\n    this.scale = 1\r\n    this.x = 0\r\n    this.y = 0\r\n    this.transform()\r\n    if (scaleChange) {\r\n      this.emitEvent('scale')\r\n    }\r\n    if (translateChange) {\r\n      this.emitEvent('translate')\r\n    }\r\n  }\r\n\r\n  //  缩小\r\n  narrow(cx, cy, isTouchPad) {\r\n    let { scaleRatio, minZoomRatio } = this.mindMap.opt\r\n    scaleRatio = scaleRatio / (isTouchPad ? 5 : 1)\r\n    const scale = Math.max(this.scale - scaleRatio, minZoomRatio / 100)\r\n    this.scaleInCenter(scale, cx, cy)\r\n    this.transform()\r\n    this.emitEvent('scale')\r\n  }\r\n\r\n  //  放大\r\n  enlarge(cx, cy, isTouchPad) {\r\n    let { scaleRatio, maxZoomRatio } = this.mindMap.opt\r\n    scaleRatio = scaleRatio / (isTouchPad ? 5 : 1)\r\n    let scale = 0\r\n    if (maxZoomRatio === -1) {\r\n      scale = this.scale + scaleRatio\r\n    } else {\r\n      scale = Math.min(this.scale + scaleRatio, maxZoomRatio / 100)\r\n    }\r\n    this.scaleInCenter(scale, cx, cy)\r\n    this.transform()\r\n    this.emitEvent('scale')\r\n  }\r\n\r\n  // 基于指定中心进行缩放，cx，cy 可不指定，此时会使用画布中心点\r\n  scaleInCenter(scale, cx, cy) {\r\n    if (cx === undefined || cy === undefined) {\r\n      cx = this.mindMap.width / 2\r\n      cy = this.mindMap.height / 2\r\n    }\r\n    const prevScale = this.scale\r\n    const ratio = 1 - scale / prevScale\r\n    const dx = (cx - this.x) * ratio\r\n    const dy = (cy - this.y) * ratio\r\n    this.x += dx\r\n    this.y += dy\r\n    this.scale = scale\r\n  }\r\n\r\n  //  设置缩放\r\n  setScale(scale, cx, cy) {\r\n    if (cx !== undefined && cy !== undefined) {\r\n      this.scaleInCenter(scale, cx, cy)\r\n    } else {\r\n      this.scale = scale\r\n    }\r\n    this.transform()\r\n    this.emitEvent('scale')\r\n  }\r\n\r\n  // 适应画布大小\r\n  fit(getRbox = () => {}, enlarge = false, fitPadding) {\r\n    fitPadding =\r\n      fitPadding === undefined ? this.mindMap.opt.fitPadding : fitPadding\r\n    const draw = this.mindMap.draw\r\n    const origTransform = draw.transform()\r\n    const rect = getRbox() || draw.rbox()\r\n    const drawWidth = rect.width / origTransform.scaleX\r\n    const drawHeight = rect.height / origTransform.scaleY\r\n    const drawRatio = drawWidth / drawHeight\r\n    let { width: elWidth, height: elHeight } = this.mindMap.elRect\r\n    elWidth = elWidth - fitPadding * 2\r\n    elHeight = elHeight - fitPadding * 2\r\n    const elRatio = elWidth / elHeight\r\n    let newScale = 0\r\n    let flag = ''\r\n    if (drawWidth <= elWidth && drawHeight <= elHeight && !enlarge) {\r\n      newScale = 1\r\n      flag = 1\r\n    } else {\r\n      let newWidth = 0\r\n      let newHeight = 0\r\n      if (drawRatio > elRatio) {\r\n        newWidth = elWidth\r\n        newHeight = elWidth / drawRatio\r\n        flag = 2\r\n      } else {\r\n        newHeight = elHeight\r\n        newWidth = elHeight * drawRatio\r\n        flag = 3\r\n      }\r\n      newScale = newWidth / drawWidth\r\n    }\r\n    this.setScale(newScale)\r\n    const newRect = getRbox() || draw.rbox()\r\n    // 需要考虑画布容器距浏览器窗口左上角的距离\r\n    newRect.x -= this.mindMap.elRect.left\r\n    newRect.y -= this.mindMap.elRect.top\r\n    let newX = 0\r\n    let newY = 0\r\n    if (flag === 1) {\r\n      newX = -newRect.x + fitPadding + (elWidth - newRect.width) / 2\r\n      newY = -newRect.y + fitPadding + (elHeight - newRect.height) / 2\r\n    } else if (flag === 2) {\r\n      newX = -newRect.x + fitPadding\r\n      newY = -newRect.y + fitPadding + (elHeight - newRect.height) / 2\r\n    } else if (flag === 3) {\r\n      newX = -newRect.x + fitPadding + (elWidth - newRect.width) / 2\r\n      newY = -newRect.y + fitPadding\r\n    }\r\n    this.translateXY(newX, newY)\r\n  }\r\n\r\n  // 判断是否需要将思维导图限制在画布内\r\n  checkNeedMindMapInCanvas() {\r\n    // 如果当前在演示模式，那么不需要限制\r\n    if (this.mindMap.demonstrate && this.mindMap.demonstrate.isInDemonstrate) {\r\n      return false\r\n    }\r\n    const { isLimitMindMapInCanvasWhenHasScrollbar, isLimitMindMapInCanvas } =\r\n      this.mindMap.opt\r\n    // 如果注册了滚动条插件，那么使用isLimitMindMapInCanvasWhenHasScrollbar配置\r\n    if (this.mindMap.scrollbar) {\r\n      return isLimitMindMapInCanvasWhenHasScrollbar\r\n    } else {\r\n      // 否则使用isLimitMindMapInCanvas配置\r\n      return isLimitMindMapInCanvas\r\n    }\r\n  }\r\n\r\n  // 将思维导图限制在画布内\r\n  limitMindMapInCanvas() {\r\n    if (!this.checkNeedMindMapInCanvas()) return\r\n\r\n    let { scale, left, top, right, bottom } = this.getPositionLimit()\r\n\r\n    // 画布宽高改变了，但是思维导图元素变换的中心点依旧是原有位置，所以需要加上中心点变化量\r\n    const centerXChange =\r\n      ((this.mindMap.width - this.mindMap.initWidth) / 2) * scale\r\n    const centerYChange =\r\n      ((this.mindMap.height - this.mindMap.initHeight) / 2) * scale\r\n\r\n    // 如果缩放值改变了\r\n    const scaleRatio = this.scale / scale\r\n    left *= scaleRatio\r\n    right *= scaleRatio\r\n    top *= scaleRatio\r\n    bottom *= scaleRatio\r\n\r\n    // 加上画布中心点距离\r\n    const centerX = this.mindMap.width / 2\r\n    const centerY = this.mindMap.height / 2\r\n    const scaleOffset = this.scale - 1\r\n    left -= scaleOffset * centerX - centerXChange\r\n    right -= scaleOffset * centerX - centerXChange\r\n    top -= scaleOffset * centerY - centerYChange\r\n    bottom -= scaleOffset * centerY - centerYChange\r\n\r\n    // 判断是否超出边界\r\n    if (this.x > left) {\r\n      this.x = left\r\n    }\r\n    if (this.x < right) {\r\n      this.x = right\r\n    }\r\n    if (this.y > top) {\r\n      this.y = top\r\n    }\r\n    if (this.y < bottom) {\r\n      this.y = bottom\r\n    }\r\n  }\r\n\r\n  // 计算图形四个方向的位置边界值\r\n  getPositionLimit() {\r\n    const { scaleX, scaleY } = this.mindMap.draw.transform()\r\n    const drawRect = this.mindMap.draw.rbox()\r\n    const rootRect = this.mindMap.renderer.root.group.rbox()\r\n    const rootCenterOffset = this.mindMap.renderer.layout.getRootCenterOffset(\r\n      rootRect.width,\r\n      rootRect.height\r\n    )\r\n    const left = rootRect.x - drawRect.x - rootCenterOffset.x * scaleX\r\n    const right = rootRect.x - drawRect.x2 - rootCenterOffset.x * scaleX\r\n    const top = rootRect.y - drawRect.y - rootCenterOffset.y * scaleY\r\n    const bottom = rootRect.y - drawRect.y2 - rootCenterOffset.y * scaleY\r\n    return {\r\n      scale: scaleX,\r\n      left,\r\n      right,\r\n      top,\r\n      bottom\r\n    }\r\n  }\r\n\r\n  // 派发事件\r\n  emitEvent(type) {\r\n    switch (type) {\r\n      case 'scale':\r\n        this.mindMap.emit('scale', this.scale)\r\n      case 'translate':\r\n        this.mindMap.emit('translate', this.x, this.y)\r\n    }\r\n  }\r\n}\r\n\r\nexport default View\r\n", "import EventEmitter from 'eventemitter3'\r\nimport { CONSTANTS } from '../../constants/constant'\r\n\r\n//  事件类\r\nclass Event extends EventEmitter {\r\n  //  构造函数\r\n  constructor(opt = {}) {\r\n    super()\r\n    this.opt = opt\r\n    this.mindMap = opt.mindMap\r\n    this.isLeftMousedown = false\r\n    this.isRightMousedown = false\r\n    this.isMiddleMousedown = false\r\n    this.mousedownPos = {\r\n      x: 0,\r\n      y: 0\r\n    }\r\n    this.mousemovePos = {\r\n      x: 0,\r\n      y: 0\r\n    }\r\n    this.mousemoveOffset = {\r\n      x: 0,\r\n      y: 0\r\n    }\r\n    this.bindFn()\r\n    this.bind()\r\n  }\r\n\r\n  //  绑定函数上下文\r\n  bindFn() {\r\n    this.onBodyMousedown = this.onBodyMousedown.bind(this)\r\n    this.onBodyClick = this.onBodyClick.bind(this)\r\n    this.onDrawClick = this.onDrawClick.bind(this)\r\n    this.onMousedown = this.onMousedown.bind(this)\r\n    this.onMousemove = this.onMousemove.bind(this)\r\n    this.onMouseup = this.onMouseup.bind(this)\r\n    this.onNodeMouseup = this.onNodeMouseup.bind(this)\r\n    this.onMousewheel = this.onMousewheel.bind(this)\r\n    this.onContextmenu = this.onContextmenu.bind(this)\r\n    this.onSvgMousedown = this.onSvgMousedown.bind(this)\r\n    this.onKeyup = this.onKeyup.bind(this)\r\n    this.onMouseenter = this.onMouseenter.bind(this)\r\n    this.onMouseleave = this.onMouseleave.bind(this)\r\n  }\r\n\r\n  //  绑定事件\r\n  bind() {\r\n    document.body.addEventListener('mousedown', this.onBodyMousedown)\r\n    document.body.addEventListener('click', this.onBodyClick)\r\n    this.mindMap.svg.on('click', this.onDrawClick)\r\n    this.mindMap.el.addEventListener('mousedown', this.onMousedown)\r\n    this.mindMap.svg.on('mousedown', this.onSvgMousedown)\r\n    window.addEventListener('mousemove', this.onMousemove)\r\n    window.addEventListener('mouseup', this.onMouseup)\r\n    this.on('node_mouseup', this.onNodeMouseup)\r\n    this.mindMap.el.addEventListener('wheel', this.onMousewheel)\r\n    this.mindMap.svg.on('contextmenu', this.onContextmenu)\r\n    this.mindMap.svg.on('mouseenter', this.onMouseenter)\r\n    this.mindMap.svg.on('mouseleave', this.onMouseleave)\r\n    window.addEventListener('keyup', this.onKeyup)\r\n  }\r\n\r\n  //  解绑事件\r\n  unbind() {\r\n    document.body.removeEventListener('mousedown', this.onBodyMousedown)\r\n    document.body.removeEventListener('click', this.onBodyClick)\r\n    this.mindMap.svg.off('click', this.onDrawClick)\r\n    this.mindMap.el.removeEventListener('mousedown', this.onMousedown)\r\n    window.removeEventListener('mousemove', this.onMousemove)\r\n    window.removeEventListener('mouseup', this.onMouseup)\r\n    this.off('node_mouseup', this.onNodeMouseup)\r\n    this.mindMap.el.removeEventListener('wheel', this.onMousewheel)\r\n    this.mindMap.svg.off('contextmenu', this.onContextmenu)\r\n    this.mindMap.svg.off('mouseenter', this.onMouseenter)\r\n    this.mindMap.svg.off('mouseleave', this.onMouseleave)\r\n    window.removeEventListener('keyup', this.onKeyup)\r\n  }\r\n\r\n  //   画布的单击事件\r\n  onDrawClick(e) {\r\n    this.emit('draw_click', e)\r\n  }\r\n\r\n  // 页面的鼠标按下事件\r\n  onBodyMousedown(e) {\r\n    this.emit('body_mousedown', e)\r\n  }\r\n\r\n  // 页面的单击事件\r\n  onBodyClick(e) {\r\n    this.emit('body_click', e)\r\n  }\r\n\r\n  //   svg画布的鼠标按下事件\r\n  onSvgMousedown(e) {\r\n    this.emit('svg_mousedown', e)\r\n  }\r\n\r\n  //  鼠标按下事件\r\n  onMousedown(e) {\r\n    // 鼠标左键\r\n    if (e.which === 1) {\r\n      this.isLeftMousedown = true\r\n    } else if (e.which === 3) {\r\n      this.isRightMousedown = true\r\n    } else if (e.which === 2) {\r\n      this.isMiddleMousedown = true\r\n    }\r\n    this.mousedownPos.x = e.clientX\r\n    this.mousedownPos.y = e.clientY\r\n    this.emit('mousedown', e, this)\r\n  }\r\n\r\n  //  鼠标移动事件\r\n  onMousemove(e) {\r\n    let { useLeftKeySelectionRightKeyDrag } = this.mindMap.opt\r\n    this.mousemovePos.x = e.clientX\r\n    this.mousemovePos.y = e.clientY\r\n    this.mousemoveOffset.x = e.clientX - this.mousedownPos.x\r\n    this.mousemoveOffset.y = e.clientY - this.mousedownPos.y\r\n    this.emit('mousemove', e, this)\r\n    if (\r\n      this.isMiddleMousedown ||\r\n      (useLeftKeySelectionRightKeyDrag\r\n        ? this.isRightMousedown\r\n        : this.isLeftMousedown)\r\n    ) {\r\n      e.preventDefault()\r\n      this.emit('drag', e, this)\r\n    }\r\n  }\r\n\r\n  //  鼠标松开事件\r\n  onMouseup(e) {\r\n    this.onNodeMouseup()\r\n    this.emit('mouseup', e, this)\r\n  }\r\n\r\n  // 节点鼠标松开事件\r\n  onNodeMouseup() {\r\n    this.isLeftMousedown = false\r\n    this.isRightMousedown = false\r\n    this.isMiddleMousedown = false\r\n  }\r\n\r\n  //  鼠标滚动/触控板滑动\r\n  onMousewheel(e) {\r\n    e.stopPropagation()\r\n    e.preventDefault()\r\n    const dirs = []\r\n    if (e.deltaY < 0) dirs.push(CONSTANTS.DIR.UP)\r\n    if (e.deltaY > 0) dirs.push(CONSTANTS.DIR.DOWN)\r\n    if (e.deltaX < 0) dirs.push(CONSTANTS.DIR.LEFT)\r\n    if (e.deltaX > 0) dirs.push(CONSTANTS.DIR.RIGHT)\r\n    // 判断是否是触控板\r\n    let isTouchPad = false\r\n    // mac、windows\r\n    // if (e.wheelDeltaY === e.deltaY * -3 || Math.abs(e.wheelDeltaY) <= 10) {\r\n    //   isTouchPad = true\r\n    // }\r\n    const { customCheckIsTouchPad } = this.mindMap.opt\r\n    if (typeof customCheckIsTouchPad === 'function') {\r\n      isTouchPad = customCheckIsTouchPad(e)\r\n    } else {\r\n      isTouchPad = Math.abs(e.deltaY) <= 10\r\n    }\r\n    this.emit('mousewheel', e, dirs, this, isTouchPad)\r\n  }\r\n\r\n  //  鼠标右键菜单事件\r\n  onContextmenu(e) {\r\n    e.preventDefault()\r\n    // Mac上按住ctrl键点击鼠标左键不知为何触发的是contextmenu事件\r\n    if (e.ctrlKey) return\r\n    this.emit('contextmenu', e)\r\n  }\r\n\r\n  //  按键松开事件\r\n  onKeyup(e) {\r\n    this.emit('keyup', e)\r\n  }\r\n\r\n  // 进入\r\n  onMouseenter(e) {\r\n    this.emit('svg_mouseenter', e)\r\n  }\r\n\r\n  // 离开\r\n  onMouseleave(e) {\r\n    this.emit('svg_mouseleave', e)\r\n  }\r\n}\r\n\r\nexport default Event\r\n", "var isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function(key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function(key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var sourceIsArray = Array.isArray(source);\n    var targetIsArray = Array.isArray(target);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n    if (!sourceAndTargetTypesMatch) {\n        return cloneIfNecessary(source, optionsArgument)\n    } else if (sourceIsArray) {\n        var arrayMerge = options.arrayMerge || defaultArrayMerge;\n        return arrayMerge(target, source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nvar deepmerge_1 = deepmerge;\n\nexport default deepmerge_1;\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;", "/**\r\n * @description 为了保证相同的内容每次生成的随机数都是一样的，我们可以使用一个伪随机数生成器（PRNG），并使用内容的哈希值作为种子。以下是一个使用Mersenne Twister算法的PRNG的实现：\r\n *\r\n * @param {*} seed\r\n */\r\n\r\nexport default function MersenneTwister(seed) {\r\n  this.N = 624\r\n  this.M = 397\r\n  this.MATRIX_A = 0x9908b0df\r\n  this.UPPER_MASK = 0x80000000\r\n  this.LOWER_MASK = 0x7fffffff\r\n\r\n  this.mt = new Array(this.N)\r\n  this.mti = this.N + 1\r\n\r\n  this.init_genrand(seed)\r\n}\r\n\r\nMersenneTwister.prototype.init_genrand = function (s) {\r\n  this.mt[0] = s >>> 0\r\n  for (this.mti = 1; this.mti < this.N; this.mti++) {\r\n    s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30)\r\n    this.mt[this.mti] =\r\n      ((((s & 0xffff0000) >>> 16) * 1812433253) << 16) +\r\n      (s & 0x0000ffff) * 1812433253 +\r\n      this.mti\r\n    this.mt[this.mti] >>>= 0\r\n  }\r\n}\r\n\r\nMersenneTwister.prototype.genrand_int32 = function () {\r\n  var y\r\n  var mag01 = new Array(0x0, this.MATRIX_A)\r\n\r\n  if (this.mti >= this.N) {\r\n    var kk\r\n\r\n    if (this.mti == this.N + 1) this.init_genrand(5489)\r\n\r\n    for (kk = 0; kk < this.N - this.M; kk++) {\r\n      y = (this.mt[kk] & this.UPPER_MASK) | (this.mt[kk + 1] & this.LOWER_MASK)\r\n      this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1]\r\n    }\r\n\r\n    for (; kk < this.N - 1; kk++) {\r\n      y = (this.mt[kk] & this.UPPER_MASK) | (this.mt[kk + 1] & this.LOWER_MASK)\r\n      this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1]\r\n    }\r\n\r\n    y = (this.mt[this.N - 1] & this.UPPER_MASK) | (this.mt[0] & this.LOWER_MASK)\r\n    this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1]\r\n\r\n    this.mti = 0\r\n  }\r\n\r\n  y = this.mt[this.mti++]\r\n\r\n  y ^= y >>> 11\r\n  y ^= (y << 7) & 0x9d2c5680\r\n  y ^= (y << 15) & 0xefc60000\r\n  y ^= y >>> 18\r\n\r\n  return y >>> 0\r\n}\r\n", "const methods = {}\nconst names = []\n\nexport function registerMethods (name, m) {\n  if (Array.isArray(name)) {\n    for (const _name of name) {\n      registerMethods(_name, m)\n    }\n    return\n  }\n\n  if (typeof name === 'object') {\n    for (const _name in name) {\n      registerMethods(_name, name[_name])\n    }\n    return\n  }\n\n  addMethodNames(Object.getOwnPropertyNames(m))\n  methods[name] = Object.assign(methods[name] || {}, m)\n}\n\nexport function getMethodsFor (name) {\n  return methods[name] || {}\n}\n\nexport function getMethodNames () {\n  return [ ...new Set(names) ]\n}\n\nexport function addMethodNames (_names) {\n  names.push(..._names)\n}\n", "// Map function\nexport function map (array, block) {\n  let i\n  const il = array.length\n  const result = []\n\n  for (i = 0; i < il; i++) {\n    result.push(block(array[i]))\n  }\n\n  return result\n}\n\n// Filter function\nexport function filter (array, block) {\n  let i\n  const il = array.length\n  const result = []\n\n  for (i = 0; i < il; i++) {\n    if (block(array[i])) {\n      result.push(array[i])\n    }\n  }\n\n  return result\n}\n\n// Degrees to radians\nexport function radians (d) {\n  return d % 360 * Math.PI / 180\n}\n\n// Radians to degrees\nexport function degrees (r) {\n  return r * 180 / Math.PI % 360\n}\n\n// Convert dash-separated-string to camelCase\nexport function camelCase (s) {\n  return s.toLowerCase().replace(/-(.)/g, function (m, g) {\n    return g.toUpperCase()\n  })\n}\n\n// Convert camel cased string to dash separated\nexport function unCamelCase (s) {\n  return s.replace(/([A-Z])/g, function (m, g) {\n    return '-' + g.toLowerCase()\n  })\n}\n\n// Capitalize first letter of a string\nexport function capitalize (s) {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\n// Calculate proportional width and height values when necessary\nexport function proportionalSize (element, width, height, box) {\n  if (width == null || height == null) {\n    box = box || element.bbox()\n\n    if (width == null) {\n      width = box.width / box.height * height\n    } else if (height == null) {\n      height = box.height / box.width * width\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  }\n}\n\n/**\n * This function adds support for string origins.\n * It searches for an origin in o.origin o.ox and o.originX.\n * This way, origin: {x: 'center', y: 50} can be passed as well as ox: 'center', oy: 50\n**/\nexport function getOrigin (o, element) {\n  const origin = o.origin\n  // First check if origin is in ox or originX\n  let ox = o.ox != null\n    ? o.ox\n    : o.originX != null\n      ? o.originX\n      : 'center'\n  let oy = o.oy != null\n    ? o.oy\n    : o.originY != null\n      ? o.originY\n      : 'center'\n\n  // Then check if origin was used and overwrite in that case\n  if (origin != null) {\n    [ ox, oy ] = Array.isArray(origin)\n      ? origin\n      : typeof origin === 'object'\n        ? [ origin.x, origin.y ]\n        : [ origin, origin ]\n  }\n\n  // Make sure to only call bbox when actually needed\n  const condX = typeof ox === 'string'\n  const condY = typeof oy === 'string'\n  if (condX || condY) {\n    const { height, width, x, y } = element.bbox()\n\n    // And only overwrite if string was passed for this specific axis\n    if (condX) {\n      ox = ox.includes('left')\n        ? x\n        : ox.includes('right')\n          ? x + width\n          : x + width / 2\n    }\n\n    if (condY) {\n      oy = oy.includes('top')\n        ? y\n        : oy.includes('bottom')\n          ? y + height\n          : y + height / 2\n    }\n  }\n\n  // Return the origin as it is if it wasn't a string\n  return [ ox, oy ]\n}\n", "// Default namespaces\nexport const svg = 'http://www.w3.org/2000/svg'\nexport const html = 'http://www.w3.org/1999/xhtml'\nexport const xmlns = 'http://www.w3.org/2000/xmlns/'\nexport const xlink = 'http://www.w3.org/1999/xlink'\nexport const svgjs = 'http://svgjs.dev/svgjs'\n", "export const globals = {\n  window: typeof window === 'undefined' ? null : window,\n  document: typeof document === 'undefined' ? null : document\n}\n\nexport function registerWindow (win = null, doc = null) {\n  globals.window = win\n  globals.document = doc\n}\n\nconst save = {}\n\nexport function saveWindow () {\n  save.window = globals.window\n  save.document = globals.document\n}\n\nexport function restoreWindow () {\n  globals.window = save.window\n  globals.document = save.document\n}\n\nexport function withWindow (win, fn) {\n  saveWindow()\n  registerWindow(win, win.document)\n  fn(win, win.document)\n  restoreWindow()\n}\n\nexport function getWindow () {\n  return globals.window\n}\n", "export default class Base {\n  // constructor (node/*, {extensions = []} */) {\n  //   // this.tags = []\n  //   //\n  //   // for (let extension of extensions) {\n  //   //   extension.setup.call(this, node)\n  //   //   this.tags.push(extension.name)\n  //   // }\n  // }\n}\n", "import { addMethodNames } from './methods.js'\nimport { capitalize } from './utils.js'\nimport { svg } from '../modules/core/namespaces.js'\nimport { globals } from '../utils/window.js'\nimport Base from '../types/Base.js'\n\nconst elements = {}\nexport const root = '___SYMBOL___ROOT___'\n\n// Method for element creation\nexport function create (name, ns = svg) {\n  // create element\n  return globals.document.createElementNS(ns, name)\n}\n\nexport function makeInstance (element, isHTML = false) {\n  if (element instanceof Base) return element\n\n  if (typeof element === 'object') {\n    return adopter(element)\n  }\n\n  if (element == null) {\n    return new elements[root]()\n  }\n\n  if (typeof element === 'string' && element.charAt(0) !== '<') {\n    return adopter(globals.document.querySelector(element))\n  }\n\n  // Make sure, that HTML elements are created with the correct namespace\n  const wrapper = isHTML ? globals.document.createElement('div') : create('svg')\n  wrapper.innerHTML = element\n\n  // We can use firstChild here because we know,\n  // that the first char is < and thus an element\n  element = adopter(wrapper.firstChild)\n\n  // make sure, that element doesn't have its wrapper attached\n  wrapper.removeChild(wrapper.firstChild)\n  return element\n}\n\nexport function nodeOrNew (name, node) {\n  return (node && node.ownerDocument && node instanceof node.ownerDocument.defaultView.Node) ? node : create(name)\n}\n\n// Adopt existing svg elements\nexport function adopt (node) {\n  // check for presence of node\n  if (!node) return null\n\n  // make sure a node isn't already adopted\n  if (node.instance instanceof Base) return node.instance\n\n  if (node.nodeName === '#document-fragment') {\n    return new elements.Fragment(node)\n  }\n\n  // initialize variables\n  let className = capitalize(node.nodeName || 'Dom')\n\n  // Make sure that gradients are adopted correctly\n  if (className === 'LinearGradient' || className === 'RadialGradient') {\n    className = 'Gradient'\n\n  // Fallback to Dom if element is not known\n  } else if (!elements[className]) {\n    className = 'Dom'\n  }\n\n  return new elements[className](node)\n}\n\nlet adopter = adopt\n\nexport function mockAdopt (mock = adopt) {\n  adopter = mock\n}\n\nexport function register (element, name = element.name, asRoot = false) {\n  elements[name] = element\n  if (asRoot) elements[root] = element\n\n  addMethodNames(Object.getOwnPropertyNames(element.prototype))\n\n  return element\n}\n\nexport function getClass (name) {\n  return elements[name]\n}\n\n// Element id sequence\nlet did = 1000\n\n// Get next named element id\nexport function eid (name) {\n  return 'Svgjs' + capitalize(name) + (did++)\n}\n\n// Deep new id assignment\nexport function assignNewId (node) {\n  // do the same for SVG child nodes as well\n  for (let i = node.children.length - 1; i >= 0; i--) {\n    assignNewId(node.children[i])\n  }\n\n  if (node.id) {\n    node.id = eid(node.nodeName)\n    return node\n  }\n\n  return node\n}\n\n// Method for extending objects\nexport function extend (modules, methods) {\n  let key, i\n\n  modules = Array.isArray(modules) ? modules : [ modules ]\n\n  for (i = modules.length - 1; i >= 0; i--) {\n    for (key in methods) {\n      modules[i].prototype[key] = methods[key]\n    }\n  }\n}\n\nexport function wrapWithAttrCheck (fn) {\n  return function (...args) {\n    const o = args[args.length - 1]\n\n    if (o && o.constructor === Object && !(o instanceof Array)) {\n      return fn.apply(this, args.slice(0, -1)).attr(o)\n    } else {\n      return fn.apply(this, args)\n    }\n  }\n}\n", "import { makeInstance } from '../../utils/adopter.js'\nimport { registerMethods } from '../../utils/methods.js'\n\n// Get all siblings, including myself\nexport function siblings () {\n  return this.parent().children()\n}\n\n// Get the current position siblings\nexport function position () {\n  return this.parent().index(this)\n}\n\n// Get the next element (will return null if there is none)\nexport function next () {\n  return this.siblings()[this.position() + 1]\n}\n\n// Get the next element (will return null if there is none)\nexport function prev () {\n  return this.siblings()[this.position() - 1]\n}\n\n// Send given element one step forward\nexport function forward () {\n  const i = this.position()\n  const p = this.parent()\n\n  // move node one step forward\n  p.add(this.remove(), i + 1)\n\n  return this\n}\n\n// Send given element one step backward\nexport function backward () {\n  const i = this.position()\n  const p = this.parent()\n\n  p.add(this.remove(), i ? i - 1 : 0)\n\n  return this\n}\n\n// Send given element all the way to the front\nexport function front () {\n  const p = this.parent()\n\n  // Move node forward\n  p.add(this.remove())\n\n  return this\n}\n\n// Send given element all the way to the back\nexport function back () {\n  const p = this.parent()\n\n  // Move node back\n  p.add(this.remove(), 0)\n\n  return this\n}\n\n// Inserts a given element before the targeted element\nexport function before (element) {\n  element = makeInstance(element)\n  element.remove()\n\n  const i = this.position()\n\n  this.parent().add(element, i)\n\n  return this\n}\n\n// Inserts a given element after the targeted element\nexport function after (element) {\n  element = makeInstance(element)\n  element.remove()\n\n  const i = this.position()\n\n  this.parent().add(element, i + 1)\n\n  return this\n}\n\nexport function insertBefore (element) {\n  element = makeInstance(element)\n  element.before(this)\n  return this\n}\n\nexport function insertAfter (element) {\n  element = makeInstance(element)\n  element.after(this)\n  return this\n}\n\nregisterMethods('Dom', {\n  siblings,\n  position,\n  next,\n  prev,\n  forward,\n  backward,\n  front,\n  back,\n  before,\n  after,\n  insertBefore,\n  insertAfter\n})\n", "// Parse unit value\nexport const numberAndUnit = /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\n\n// Parse hex value\nexport const hex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\n\n// Parse rgb value\nexport const rgb = /rgb\\((\\d+),(\\d+),(\\d+)\\)/\n\n// Parse reference id\nexport const reference = /(#[a-z_][a-z0-9\\-_]*)/i\n\n// splits a transformation chain\nexport const transforms = /\\)\\s*,?\\s*/\n\n// Whitespace\nexport const whitespace = /\\s/g\n\n// Test hex value\nexport const isHex = /^#[a-f0-9]{3}$|^#[a-f0-9]{6}$/i\n\n// Test rgb value\nexport const isRgb = /^rgb\\(/\n\n// Test for blank string\nexport const isBlank = /^(\\s+)?$/\n\n// Test for numeric string\nexport const isNumber = /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\n\n// Test for image url\nexport const isImage = /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\n\n// split at whitespace and comma\nexport const delimiter = /[\\s,]+/\n\n// Test for path letter\nexport const isPathLetter = /[MLHVCSQTAZ]/i\n", "import { delimiter } from '../core/regex.js'\nimport { registerMethods } from '../../utils/methods.js'\n\n// Return array of classes on the node\nexport function classes () {\n  const attr = this.attr('class')\n  return attr == null ? [] : attr.trim().split(delimiter)\n}\n\n// Return true if class exists on the node, false otherwise\nexport function hasClass (name) {\n  return this.classes().indexOf(name) !== -1\n}\n\n// Add class to the node\nexport function addClass (name) {\n  if (!this.hasClass(name)) {\n    const array = this.classes()\n    array.push(name)\n    this.attr('class', array.join(' '))\n  }\n\n  return this\n}\n\n// Remove class from the node\nexport function removeClass (name) {\n  if (this.hasClass(name)) {\n    this.attr('class', this.classes().filter(function (c) {\n      return c !== name\n    }).join(' '))\n  }\n\n  return this\n}\n\n// Toggle the presence of a class on the node\nexport function toggleClass (name) {\n  return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\n}\n\nregisterMethods('Dom', {\n  classes, hasClass, addClass, removeClass, toggleClass\n})\n", "import { camelCase } from '../../utils/utils.js'\nimport { isBlank } from '../core/regex.js'\nimport { registerMethods } from '../../utils/methods.js'\n\n// Dynamic style generator\nexport function css (style, val) {\n  const ret = {}\n  if (arguments.length === 0) {\n    // get full style as object\n    this.node.style.cssText.split(/\\s*;\\s*/)\n      .filter(function (el) {\n        return !!el.length\n      })\n      .forEach(function (el) {\n        const t = el.split(/\\s*:\\s*/)\n        ret[t[0]] = t[1]\n      })\n    return ret\n  }\n\n  if (arguments.length < 2) {\n    // get style properties as array\n    if (Array.isArray(style)) {\n      for (const name of style) {\n        const cased = camelCase(name)\n        ret[name] = this.node.style[cased]\n      }\n      return ret\n    }\n\n    // get style for property\n    if (typeof style === 'string') {\n      return this.node.style[camelCase(style)]\n    }\n\n    // set styles in object\n    if (typeof style === 'object') {\n      for (const name in style) {\n        // set empty string if null/undefined/'' was given\n        this.node.style[camelCase(name)]\n          = (style[name] == null || isBlank.test(style[name])) ? '' : style[name]\n      }\n    }\n  }\n\n  // set style for property\n  if (arguments.length === 2) {\n    this.node.style[camelCase(style)]\n      = (val == null || isBlank.test(val)) ? '' : val\n  }\n\n  return this\n}\n\n// Show element\nexport function show () {\n  return this.css('display', '')\n}\n\n// Hide element\nexport function hide () {\n  return this.css('display', 'none')\n}\n\n// Is element visible?\nexport function visible () {\n  return this.css('display') !== 'none'\n}\n\nregisterMethods('Dom', {\n  css, show, hide, visible\n})\n", "import { registerMethods } from '../../utils/methods.js'\nimport { filter, map } from '../../utils/utils.js'\n\n// Store data values on svg nodes\nexport function data (a, v, r) {\n  if (a == null) {\n    // get an object of attributes\n    return this.data(map(filter(this.node.attributes, (el) => el.nodeName.indexOf('data-') === 0), (el) => el.nodeName.slice(5)))\n  } else if (a instanceof Array) {\n    const data = {}\n    for (const key of a) {\n      data[key] = this.data(key)\n    }\n    return data\n  } else if (typeof a === 'object') {\n    for (v in a) {\n      this.data(v, a[v])\n    }\n  } else if (arguments.length < 2) {\n    try {\n      return JSON.parse(this.attr('data-' + a))\n    } catch (e) {\n      return this.attr('data-' + a)\n    }\n  } else {\n    this.attr('data-' + a,\n      v === null\n        ? null\n        : r === true || typeof v === 'string' || typeof v === 'number'\n          ? v\n          : JSON.stringify(v)\n    )\n  }\n\n  return this\n}\n\nregisterMethods('Dom', { data })\n", "import { registerMethods } from '../../utils/methods.js'\n\n// Remember arbitrary data\nexport function remember (k, v) {\n  // remember every item in an object individually\n  if (typeof arguments[0] === 'object') {\n    for (const key in k) {\n      this.remember(key, k[key])\n    }\n  } else if (arguments.length === 1) {\n    // retrieve memory\n    return this.memory()[k]\n  } else {\n    // store memory\n    this.memory()[k] = v\n  }\n\n  return this\n}\n\n// Erase a given memory\nexport function forget () {\n  if (arguments.length === 0) {\n    this._memory = {}\n  } else {\n    for (let i = arguments.length - 1; i >= 0; i--) {\n      delete this.memory()[arguments[i]]\n    }\n  }\n  return this\n}\n\n// This triggers creation of a new hidden class which is not performant\n// However, this function is not rarely used so it will not happen frequently\n// Return local memory object\nexport function memory () {\n  return (this._memory = this._memory || {})\n}\n\nregisterMethods('Dom', { remember, forget, memory })\n", "\nimport { hex, isHex, isRgb, rgb, whitespace } from '../modules/core/regex.js'\n\nfunction sixDigitHex (hex) {\n  return hex.length === 4\n    ? [ '#',\n      hex.substring(1, 2), hex.substring(1, 2),\n      hex.substring(2, 3), hex.substring(2, 3),\n      hex.substring(3, 4), hex.substring(3, 4)\n    ].join('')\n    : hex\n}\n\nfunction componentHex (component) {\n  const integer = Math.round(component)\n  const bounded = Math.max(0, Math.min(255, integer))\n  const hex = bounded.toString(16)\n  return hex.length === 1 ? '0' + hex : hex\n}\n\nfunction is (object, space) {\n  for (let i = space.length; i--;) {\n    if (object[space[i]] == null) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getParameters (a, b) {\n  const params = is(a, 'rgb')\n    ? { _a: a.r, _b: a.g, _c: a.b, _d: 0, space: 'rgb' }\n    : is(a, 'xyz')\n      ? { _a: a.x, _b: a.y, _c: a.z, _d: 0, space: 'xyz' }\n      : is(a, 'hsl')\n        ? { _a: a.h, _b: a.s, _c: a.l, _d: 0, space: 'hsl' }\n        : is(a, 'lab')\n          ? { _a: a.l, _b: a.a, _c: a.b, _d: 0, space: 'lab' }\n          : is(a, 'lch')\n            ? { _a: a.l, _b: a.c, _c: a.h, _d: 0, space: 'lch' }\n            : is(a, 'cmyk')\n              ? { _a: a.c, _b: a.m, _c: a.y, _d: a.k, space: 'cmyk' }\n              : { _a: 0, _b: 0, _c: 0, space: 'rgb' }\n\n  params.space = b || params.space\n  return params\n}\n\nfunction cieSpace (space) {\n  if (space === 'lab' || space === 'xyz' || space === 'lch') {\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction hueToRgb (p, q, t) {\n  if (t < 0) t += 1\n  if (t > 1) t -= 1\n  if (t < 1 / 6) return p + (q - p) * 6 * t\n  if (t < 1 / 2) return q\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n  return p\n}\n\nexport default class Color {\n  constructor (...inputs) {\n    this.init(...inputs)\n  }\n\n  // Test if given value is a color\n  static isColor (color) {\n    return color && (\n      color instanceof Color\n      || this.isRgb(color)\n      || this.test(color)\n    )\n  }\n\n  // Test if given value is an rgb object\n  static isRgb (color) {\n    return color && typeof color.r === 'number'\n      && typeof color.g === 'number'\n      && typeof color.b === 'number'\n  }\n\n  /*\n  Generating random colors\n  */\n  static random (mode = 'vibrant', t, u) {\n\n    // Get the math modules\n    const { random, round, sin, PI: pi } = Math\n\n    // Run the correct generator\n    if (mode === 'vibrant') {\n\n      const l = (81 - 57) * random() + 57\n      const c = (83 - 45) * random() + 45\n      const h = 360 * random()\n      const color = new Color(l, c, h, 'lch')\n      return color\n\n    } else if (mode === 'sine') {\n\n      t = t == null ? random() : t\n      const r = round(80 * sin(2 * pi * t / 0.5 + 0.01) + 150)\n      const g = round(50 * sin(2 * pi * t / 0.5 + 4.6) + 200)\n      const b = round(100 * sin(2 * pi * t / 0.5 + 2.3) + 150)\n      const color = new Color(r, g, b)\n      return color\n\n    } else if (mode === 'pastel') {\n\n      const l = (94 - 86) * random() + 86\n      const c = (26 - 9) * random() + 9\n      const h = 360 * random()\n      const color = new Color(l, c, h, 'lch')\n      return color\n\n    } else if (mode === 'dark') {\n\n      const l = 10 + 10 * random()\n      const c = (125 - 75) * random() + 86\n      const h = 360 * random()\n      const color = new Color(l, c, h, 'lch')\n      return color\n\n    } else if (mode === 'rgb') {\n\n      const r = 255 * random()\n      const g = 255 * random()\n      const b = 255 * random()\n      const color = new Color(r, g, b)\n      return color\n\n    } else if (mode === 'lab') {\n\n      const l = 100 * random()\n      const a = 256 * random() - 128\n      const b = 256 * random() - 128\n      const color = new Color(l, a, b, 'lab')\n      return color\n\n    } else if (mode === 'grey') {\n\n      const grey = 255 * random()\n      const color = new Color(grey, grey, grey)\n      return color\n\n    } else {\n\n      throw new Error('Unsupported random color mode')\n\n    }\n  }\n\n  // Test if given value is a color string\n  static test (color) {\n    return (typeof color === 'string')\n      && (isHex.test(color) || isRgb.test(color))\n  }\n\n  cmyk () {\n\n    // Get the rgb values for the current color\n    const { _a, _b, _c } = this.rgb()\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\n\n    // Get the cmyk values in an unbounded format\n    const k = Math.min(1 - r, 1 - g, 1 - b)\n\n    if (k === 1) {\n      // Catch the black case\n      return new Color(0, 0, 0, 1, 'cmyk')\n    }\n\n    const c = (1 - r - k) / (1 - k)\n    const m = (1 - g - k) / (1 - k)\n    const y = (1 - b - k) / (1 - k)\n\n    // Construct the new color\n    const color = new Color(c, m, y, k, 'cmyk')\n    return color\n  }\n\n  hsl () {\n\n    // Get the rgb values\n    const { _a, _b, _c } = this.rgb()\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\n\n    // Find the maximum and minimum values to get the lightness\n    const max = Math.max(r, g, b)\n    const min = Math.min(r, g, b)\n    const l = (max + min) / 2\n\n    // If the r, g, v values are identical then we are grey\n    const isGrey = max === min\n\n    // Calculate the hue and saturation\n    const delta = max - min\n    const s = isGrey\n      ? 0\n      : l > 0.5\n        ? delta / (2 - max - min)\n        : delta / (max + min)\n    const h = isGrey\n      ? 0\n      : max === r\n        ? ((g - b) / delta + (g < b ? 6 : 0)) / 6\n        : max === g\n          ? ((b - r) / delta + 2) / 6\n          : max === b\n            ? ((r - g) / delta + 4) / 6\n            : 0\n\n    // Construct and return the new color\n    const color = new Color(360 * h, 100 * s, 100 * l, 'hsl')\n    return color\n  }\n\n  init (a = 0, b = 0, c = 0, d = 0, space = 'rgb') {\n    // This catches the case when a falsy value is passed like ''\n    a = !a ? 0 : a\n\n    // Reset all values in case the init function is rerun with new color space\n    if (this.space) {\n      for (const component in this.space) {\n        delete this[this.space[component]]\n      }\n    }\n\n    if (typeof a === 'number') {\n      // Allow for the case that we don't need d...\n      space = typeof d === 'string' ? d : space\n      d = typeof d === 'string' ? 0 : d\n\n      // Assign the values straight to the color\n      Object.assign(this, { _a: a, _b: b, _c: c, _d: d, space })\n    // If the user gave us an array, make the color from it\n    } else if (a instanceof Array) {\n      this.space = b || (typeof a[3] === 'string' ? a[3] : a[4]) || 'rgb'\n      Object.assign(this, { _a: a[0], _b: a[1], _c: a[2], _d: a[3] || 0 })\n    } else if (a instanceof Object) {\n      // Set the object up and assign its values directly\n      const values = getParameters(a, b)\n      Object.assign(this, values)\n    } else if (typeof a === 'string') {\n      if (isRgb.test(a)) {\n        const noWhitespace = a.replace(whitespace, '')\n        const [ _a, _b, _c ] = rgb.exec(noWhitespace)\n          .slice(1, 4).map(v => parseInt(v))\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\n      } else if (isHex.test(a)) {\n        const hexParse = v => parseInt(v, 16)\n        const [ , _a, _b, _c ] = hex.exec(sixDigitHex(a)).map(hexParse)\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\n      } else throw Error('Unsupported string format, can\\'t construct Color')\n    }\n\n    // Now add the components as a convenience\n    const { _a, _b, _c, _d } = this\n    const components = this.space === 'rgb'\n      ? { r: _a, g: _b, b: _c }\n      : this.space === 'xyz'\n        ? { x: _a, y: _b, z: _c }\n        : this.space === 'hsl'\n          ? { h: _a, s: _b, l: _c }\n          : this.space === 'lab'\n            ? { l: _a, a: _b, b: _c }\n            : this.space === 'lch'\n              ? { l: _a, c: _b, h: _c }\n              : this.space === 'cmyk'\n                ? { c: _a, m: _b, y: _c, k: _d }\n                : {}\n    Object.assign(this, components)\n  }\n\n  lab () {\n    // Get the xyz color\n    const { x, y, z } = this.xyz()\n\n    // Get the lab components\n    const l = (116 * y) - 16\n    const a = 500 * (x - y)\n    const b = 200 * (y - z)\n\n    // Construct and return a new color\n    const color = new Color(l, a, b, 'lab')\n    return color\n  }\n\n  lch () {\n\n    // Get the lab color directly\n    const { l, a, b } = this.lab()\n\n    // Get the chromaticity and the hue using polar coordinates\n    const c = Math.sqrt(a ** 2 + b ** 2)\n    let h = 180 * Math.atan2(b, a) / Math.PI\n    if (h < 0) {\n      h *= -1\n      h = 360 - h\n    }\n\n    // Make a new color and return it\n    const color = new Color(l, c, h, 'lch')\n    return color\n  }\n  /*\n  Conversion Methods\n  */\n\n  rgb () {\n    if (this.space === 'rgb') {\n      return this\n    } else if (cieSpace(this.space)) {\n      // Convert to the xyz color space\n      let { x, y, z } = this\n      if (this.space === 'lab' || this.space === 'lch') {\n        // Get the values in the lab space\n        let { l, a, b } = this\n        if (this.space === 'lch') {\n          const { c, h } = this\n          const dToR = Math.PI / 180\n          a = c * Math.cos(dToR * h)\n          b = c * Math.sin(dToR * h)\n        }\n\n        // Undo the nonlinear function\n        const yL = (l + 16) / 116\n        const xL = a / 500 + yL\n        const zL = yL - b / 200\n\n        // Get the xyz values\n        const ct = 16 / 116\n        const mx = 0.008856\n        const nm = 7.787\n        x = 0.95047 * ((xL ** 3 > mx) ? xL ** 3 : (xL - ct) / nm)\n        y = 1.00000 * ((yL ** 3 > mx) ? yL ** 3 : (yL - ct) / nm)\n        z = 1.08883 * ((zL ** 3 > mx) ? zL ** 3 : (zL - ct) / nm)\n      }\n\n      // Convert xyz to unbounded rgb values\n      const rU = x * 3.2406 + y * -1.5372 + z * -0.4986\n      const gU = x * -0.9689 + y * 1.8758 + z * 0.0415\n      const bU = x * 0.0557 + y * -0.2040 + z * 1.0570\n\n      // Convert the values to true rgb values\n      const pow = Math.pow\n      const bd = 0.0031308\n      const r = (rU > bd) ? (1.055 * pow(rU, 1 / 2.4) - 0.055) : 12.92 * rU\n      const g = (gU > bd) ? (1.055 * pow(gU, 1 / 2.4) - 0.055) : 12.92 * gU\n      const b = (bU > bd) ? (1.055 * pow(bU, 1 / 2.4) - 0.055) : 12.92 * bU\n\n      // Make and return the color\n      const color = new Color(255 * r, 255 * g, 255 * b)\n      return color\n    } else if (this.space === 'hsl') {\n      // https://bgrins.github.io/TinyColor/docs/tinycolor.html\n      // Get the current hsl values\n      let { h, s, l } = this\n      h /= 360\n      s /= 100\n      l /= 100\n\n      // If we are grey, then just make the color directly\n      if (s === 0) {\n        l *= 255\n        const color = new Color(l, l, l)\n        return color\n      }\n\n      // TODO I have no idea what this does :D If you figure it out, tell me!\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s\n      const p = 2 * l - q\n\n      // Get the rgb values\n      const r = 255 * hueToRgb(p, q, h + 1 / 3)\n      const g = 255 * hueToRgb(p, q, h)\n      const b = 255 * hueToRgb(p, q, h - 1 / 3)\n\n      // Make a new color\n      const color = new Color(r, g, b)\n      return color\n    } else if (this.space === 'cmyk') {\n      // https://gist.github.com/felipesabino/5066336\n      // Get the normalised cmyk values\n      const { c, m, y, k } = this\n\n      // Get the rgb values\n      const r = 255 * (1 - Math.min(1, c * (1 - k) + k))\n      const g = 255 * (1 - Math.min(1, m * (1 - k) + k))\n      const b = 255 * (1 - Math.min(1, y * (1 - k) + k))\n\n      // Form the color and return it\n      const color = new Color(r, g, b)\n      return color\n    } else {\n      return this\n    }\n  }\n\n  toArray () {\n    const { _a, _b, _c, _d, space } = this\n    return [ _a, _b, _c, _d, space ]\n  }\n\n  toHex () {\n    const [ r, g, b ] = this._clamped().map(componentHex)\n    return `#${r}${g}${b}`\n  }\n\n  toRgb () {\n    const [ rV, gV, bV ] = this._clamped()\n    const string = `rgb(${rV},${gV},${bV})`\n    return string\n  }\n\n  toString () {\n    return this.toHex()\n  }\n\n  xyz () {\n\n    // Normalise the red, green and blue values\n    const { _a: r255, _b: g255, _c: b255 } = this.rgb()\n    const [ r, g, b ] = [ r255, g255, b255 ].map(v => v / 255)\n\n    // Convert to the lab rgb space\n    const rL = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92\n    const gL = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92\n    const bL = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92\n\n    // Convert to the xyz color space without bounding the values\n    const xU = (rL * 0.4124 + gL * 0.3576 + bL * 0.1805) / 0.95047\n    const yU = (rL * 0.2126 + gL * 0.7152 + bL * 0.0722) / 1.00000\n    const zU = (rL * 0.0193 + gL * 0.1192 + bL * 0.9505) / 1.08883\n\n    // Get the proper xyz values by applying the bounding\n    const x = (xU > 0.008856) ? Math.pow(xU, 1 / 3) : (7.787 * xU) + 16 / 116\n    const y = (yU > 0.008856) ? Math.pow(yU, 1 / 3) : (7.787 * yU) + 16 / 116\n    const z = (zU > 0.008856) ? Math.pow(zU, 1 / 3) : (7.787 * zU) + 16 / 116\n\n    // Make and return the color\n    const color = new Color(x, y, z, 'xyz')\n    return color\n  }\n\n  /*\n  Input and Output methods\n  */\n\n  _clamped () {\n    const { _a, _b, _c } = this.rgb()\n    const { max, min, round } = Math\n    const format = v => max(0, min(round(v), 255))\n    return [ _a, _b, _c ].map(format)\n  }\n\n  /*\n  Constructing colors\n  */\n\n}\n", "import Matrix from './Matrix.js'\n\nexport default class Point {\n  // Initialize\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  // Clone point\n  clone () {\n    return new Point(this)\n  }\n\n  init (x, y) {\n    const base = { x: 0, y: 0 }\n\n    // ensure source as object\n    const source = Array.isArray(x)\n      ? { x: x[0], y: x[1] }\n      : typeof x === 'object'\n        ? { x: x.x, y: x.y }\n        : { x: x, y: y }\n\n    // merge source\n    this.x = source.x == null ? base.x : source.x\n    this.y = source.y == null ? base.y : source.y\n\n    return this\n  }\n\n  toArray () {\n    return [ this.x, this.y ]\n  }\n\n  transform (m) {\n    return this.clone().transformO(m)\n  }\n\n  // Transform point with matrix\n  transformO (m) {\n    if (!Matrix.isMatrixLike(m)) {\n      m = new Matrix(m)\n    }\n\n    const { x, y } = this\n\n    // Perform the matrix multiplication\n    this.x = m.a * x + m.c * y + m.e\n    this.y = m.b * x + m.d * y + m.f\n\n    return this\n  }\n\n}\n\nexport function point (x, y) {\n  return new Point(x, y).transformO(this.screenCTM().inverseO())\n}\n", "import { delimiter } from '../modules/core/regex.js'\nimport { radians } from '../utils/utils.js'\nimport { register } from '../utils/adopter.js'\nimport Element from '../elements/Element.js'\nimport Point from './Point.js'\n\nfunction closeEnough (a, b, threshold) {\n  return Math.abs(b - a) < (threshold || 1e-6)\n}\n\nexport default class Matrix {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  static formatTransforms (o) {\n    // Get all of the parameters required to form the matrix\n    const flipBoth = o.flip === 'both' || o.flip === true\n    const flipX = o.flip && (flipBoth || o.flip === 'x') ? -1 : 1\n    const flipY = o.flip && (flipBoth || o.flip === 'y') ? -1 : 1\n    const skewX = o.skew && o.skew.length\n      ? o.skew[0]\n      : isFinite(o.skew)\n        ? o.skew\n        : isFinite(o.skewX)\n          ? o.skewX\n          : 0\n    const skewY = o.skew && o.skew.length\n      ? o.skew[1]\n      : isFinite(o.skew)\n        ? o.skew\n        : isFinite(o.skewY)\n          ? o.skewY\n          : 0\n    const scaleX = o.scale && o.scale.length\n      ? o.scale[0] * flipX\n      : isFinite(o.scale)\n        ? o.scale * flipX\n        : isFinite(o.scaleX)\n          ? o.scaleX * flipX\n          : flipX\n    const scaleY = o.scale && o.scale.length\n      ? o.scale[1] * flipY\n      : isFinite(o.scale)\n        ? o.scale * flipY\n        : isFinite(o.scaleY)\n          ? o.scaleY * flipY\n          : flipY\n    const shear = o.shear || 0\n    const theta = o.rotate || o.theta || 0\n    const origin = new Point(o.origin || o.around || o.ox || o.originX, o.oy || o.originY)\n    const ox = origin.x\n    const oy = origin.y\n    // We need Point to be invalid if nothing was passed because we cannot default to 0 here. That is why NaN\n    const position = new Point(o.position || o.px || o.positionX || NaN, o.py || o.positionY || NaN)\n    const px = position.x\n    const py = position.y\n    const translate = new Point(o.translate || o.tx || o.translateX, o.ty || o.translateY)\n    const tx = translate.x\n    const ty = translate.y\n    const relative = new Point(o.relative || o.rx || o.relativeX, o.ry || o.relativeY)\n    const rx = relative.x\n    const ry = relative.y\n\n    // Populate all of the values\n    return {\n      scaleX, scaleY, skewX, skewY, shear, theta, rx, ry, tx, ty, ox, oy, px, py\n    }\n  }\n\n  static fromArray (a) {\n    return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\n  }\n\n  static isMatrixLike (o) {\n    return (\n      o.a != null\n      || o.b != null\n      || o.c != null\n      || o.d != null\n      || o.e != null\n      || o.f != null\n    )\n  }\n\n  // left matrix, right matrix, target matrix which is overwritten\n  static matrixMultiply (l, r, o) {\n    // Work out the product directly\n    const a = l.a * r.a + l.c * r.b\n    const b = l.b * r.a + l.d * r.b\n    const c = l.a * r.c + l.c * r.d\n    const d = l.b * r.c + l.d * r.d\n    const e = l.e + l.a * r.e + l.c * r.f\n    const f = l.f + l.b * r.e + l.d * r.f\n\n    // make sure to use local variables because l/r and o could be the same\n    o.a = a\n    o.b = b\n    o.c = c\n    o.d = d\n    o.e = e\n    o.f = f\n\n    return o\n  }\n\n  around (cx, cy, matrix) {\n    return this.clone().aroundO(cx, cy, matrix)\n  }\n\n  // Transform around a center point\n  aroundO (cx, cy, matrix) {\n    const dx = cx || 0\n    const dy = cy || 0\n    return this.translateO(-dx, -dy).lmultiplyO(matrix).translateO(dx, dy)\n  }\n\n  // Clones this matrix\n  clone () {\n    return new Matrix(this)\n  }\n\n  // Decomposes this matrix into its affine parameters\n  decompose (cx = 0, cy = 0) {\n    // Get the parameters from the matrix\n    const a = this.a\n    const b = this.b\n    const c = this.c\n    const d = this.d\n    const e = this.e\n    const f = this.f\n\n    // Figure out if the winding direction is clockwise or counterclockwise\n    const determinant = a * d - b * c\n    const ccw = determinant > 0 ? 1 : -1\n\n    // Since we only shear in x, we can use the x basis to get the x scale\n    // and the rotation of the resulting matrix\n    const sx = ccw * Math.sqrt(a * a + b * b)\n    const thetaRad = Math.atan2(ccw * b, ccw * a)\n    const theta = 180 / Math.PI * thetaRad\n    const ct = Math.cos(thetaRad)\n    const st = Math.sin(thetaRad)\n\n    // We can then solve the y basis vector simultaneously to get the other\n    // two affine parameters directly from these parameters\n    const lam = (a * c + b * d) / determinant\n    const sy = ((c * sx) / (lam * a - b)) || ((d * sx) / (lam * b + a))\n\n    // Use the translations\n    const tx = e - cx + cx * ct * sx + cy * (lam * ct * sx - st * sy)\n    const ty = f - cy + cx * st * sx + cy * (lam * st * sx + ct * sy)\n\n    // Construct the decomposition and return it\n    return {\n      // Return the affine parameters\n      scaleX: sx,\n      scaleY: sy,\n      shear: lam,\n      rotate: theta,\n      translateX: tx,\n      translateY: ty,\n      originX: cx,\n      originY: cy,\n\n      // Return the matrix parameters\n      a: this.a,\n      b: this.b,\n      c: this.c,\n      d: this.d,\n      e: this.e,\n      f: this.f\n    }\n  }\n\n  // Check if two matrices are equal\n  equals (other) {\n    if (other === this) return true\n    const comp = new Matrix(other)\n    return closeEnough(this.a, comp.a) && closeEnough(this.b, comp.b)\n      && closeEnough(this.c, comp.c) && closeEnough(this.d, comp.d)\n      && closeEnough(this.e, comp.e) && closeEnough(this.f, comp.f)\n  }\n\n  // Flip matrix on x or y, at a given offset\n  flip (axis, around) {\n    return this.clone().flipO(axis, around)\n  }\n\n  flipO (axis, around) {\n    return axis === 'x'\n      ? this.scaleO(-1, 1, around, 0)\n      : axis === 'y'\n        ? this.scaleO(1, -1, 0, around)\n        : this.scaleO(-1, -1, axis, around || axis) // Define an x, y flip point\n  }\n\n  // Initialize\n  init (source) {\n    const base = Matrix.fromArray([ 1, 0, 0, 1, 0, 0 ])\n\n    // ensure source as object\n    source = source instanceof Element\n      ? source.matrixify()\n      : typeof source === 'string'\n        ? Matrix.fromArray(source.split(delimiter).map(parseFloat))\n        : Array.isArray(source)\n          ? Matrix.fromArray(source)\n          : (typeof source === 'object' && Matrix.isMatrixLike(source))\n            ? source\n            : (typeof source === 'object')\n              ? new Matrix().transform(source)\n              : arguments.length === 6\n                ? Matrix.fromArray([].slice.call(arguments))\n                : base\n\n    // Merge the source matrix with the base matrix\n    this.a = source.a != null ? source.a : base.a\n    this.b = source.b != null ? source.b : base.b\n    this.c = source.c != null ? source.c : base.c\n    this.d = source.d != null ? source.d : base.d\n    this.e = source.e != null ? source.e : base.e\n    this.f = source.f != null ? source.f : base.f\n\n    return this\n  }\n\n  inverse () {\n    return this.clone().inverseO()\n  }\n\n  // Inverses matrix\n  inverseO () {\n    // Get the current parameters out of the matrix\n    const a = this.a\n    const b = this.b\n    const c = this.c\n    const d = this.d\n    const e = this.e\n    const f = this.f\n\n    // Invert the 2x2 matrix in the top left\n    const det = a * d - b * c\n    if (!det) throw new Error('Cannot invert ' + this)\n\n    // Calculate the top 2x2 matrix\n    const na = d / det\n    const nb = -b / det\n    const nc = -c / det\n    const nd = a / det\n\n    // Apply the inverted matrix to the top right\n    const ne = -(na * e + nc * f)\n    const nf = -(nb * e + nd * f)\n\n    // Construct the inverted matrix\n    this.a = na\n    this.b = nb\n    this.c = nc\n    this.d = nd\n    this.e = ne\n    this.f = nf\n\n    return this\n  }\n\n  lmultiply (matrix) {\n    return this.clone().lmultiplyO(matrix)\n  }\n\n  lmultiplyO (matrix) {\n    const r = this\n    const l = matrix instanceof Matrix\n      ? matrix\n      : new Matrix(matrix)\n\n    return Matrix.matrixMultiply(l, r, this)\n  }\n\n  // Left multiplies by the given matrix\n  multiply (matrix) {\n    return this.clone().multiplyO(matrix)\n  }\n\n  multiplyO (matrix) {\n    // Get the matrices\n    const l = this\n    const r = matrix instanceof Matrix\n      ? matrix\n      : new Matrix(matrix)\n\n    return Matrix.matrixMultiply(l, r, this)\n  }\n\n  // Rotate matrix\n  rotate (r, cx, cy) {\n    return this.clone().rotateO(r, cx, cy)\n  }\n\n  rotateO (r, cx = 0, cy = 0) {\n    // Convert degrees to radians\n    r = radians(r)\n\n    const cos = Math.cos(r)\n    const sin = Math.sin(r)\n\n    const { a, b, c, d, e, f } = this\n\n    this.a = a * cos - b * sin\n    this.b = b * cos + a * sin\n    this.c = c * cos - d * sin\n    this.d = d * cos + c * sin\n    this.e = e * cos - f * sin + cy * sin - cx * cos + cx\n    this.f = f * cos + e * sin - cx * sin - cy * cos + cy\n\n    return this\n  }\n\n  // Scale matrix\n  scale (x, y, cx, cy) {\n    return this.clone().scaleO(...arguments)\n  }\n\n  scaleO (x, y = x, cx = 0, cy = 0) {\n    // Support uniform scaling\n    if (arguments.length === 3) {\n      cy = cx\n      cx = y\n      y = x\n    }\n\n    const { a, b, c, d, e, f } = this\n\n    this.a = a * x\n    this.b = b * y\n    this.c = c * x\n    this.d = d * y\n    this.e = e * x - cx * x + cx\n    this.f = f * y - cy * y + cy\n\n    return this\n  }\n\n  // Shear matrix\n  shear (a, cx, cy) {\n    return this.clone().shearO(a, cx, cy)\n  }\n\n  shearO (lx, cx = 0, cy = 0) {\n    const { a, b, c, d, e, f } = this\n\n    this.a = a + b * lx\n    this.c = c + d * lx\n    this.e = e + f * lx - cy * lx\n\n    return this\n  }\n\n  // Skew Matrix\n  skew (x, y, cx, cy) {\n    return this.clone().skewO(...arguments)\n  }\n\n  skewO (x, y = x, cx = 0, cy = 0) {\n    // support uniformal skew\n    if (arguments.length === 3) {\n      cy = cx\n      cx = y\n      y = x\n    }\n\n    // Convert degrees to radians\n    x = radians(x)\n    y = radians(y)\n\n    const lx = Math.tan(x)\n    const ly = Math.tan(y)\n\n    const { a, b, c, d, e, f } = this\n\n    this.a = a + b * lx\n    this.b = b + a * ly\n    this.c = c + d * lx\n    this.d = d + c * ly\n    this.e = e + f * lx - cy * lx\n    this.f = f + e * ly - cx * ly\n\n    return this\n  }\n\n  // SkewX\n  skewX (x, cx, cy) {\n    return this.skew(x, 0, cx, cy)\n  }\n\n  // SkewY\n  skewY (y, cx, cy) {\n    return this.skew(0, y, cx, cy)\n  }\n\n  toArray () {\n    return [ this.a, this.b, this.c, this.d, this.e, this.f ]\n  }\n\n  // Convert matrix to string\n  toString () {\n    return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\n  }\n\n  // Transform a matrix into another matrix by manipulating the space\n  transform (o) {\n    // Check if o is a matrix and then left multiply it directly\n    if (Matrix.isMatrixLike(o)) {\n      const matrix = new Matrix(o)\n      return matrix.multiplyO(this)\n    }\n\n    // Get the proposed transformations and the current transformations\n    const t = Matrix.formatTransforms(o)\n    const current = this\n    const { x: ox, y: oy } = new Point(t.ox, t.oy).transform(current)\n\n    // Construct the resulting matrix\n    const transformer = new Matrix()\n      .translateO(t.rx, t.ry)\n      .lmultiplyO(current)\n      .translateO(-ox, -oy)\n      .scaleO(t.scaleX, t.scaleY)\n      .skewO(t.skewX, t.skewY)\n      .shearO(t.shear)\n      .rotateO(t.theta)\n      .translateO(ox, oy)\n\n    // If we want the origin at a particular place, we force it there\n    if (isFinite(t.px) || isFinite(t.py)) {\n      const origin = new Point(ox, oy).transform(transformer)\n      // TODO: Replace t.px with isFinite(t.px)\n      // Doesn't work because t.px is also 0 if it wasn't passed\n      const dx = isFinite(t.px) ? t.px - origin.x : 0\n      const dy = isFinite(t.py) ? t.py - origin.y : 0\n      transformer.translateO(dx, dy)\n    }\n\n    // Translate now after positioning\n    transformer.translateO(t.tx, t.ty)\n    return transformer\n  }\n\n  // Translate matrix\n  translate (x, y) {\n    return this.clone().translateO(x, y)\n  }\n\n  translateO (x, y) {\n    this.e += x || 0\n    this.f += y || 0\n    return this\n  }\n\n  valueOf () {\n    return {\n      a: this.a,\n      b: this.b,\n      c: this.c,\n      d: this.d,\n      e: this.e,\n      f: this.f\n    }\n  }\n\n}\n\nexport function ctm () {\n  return new Matrix(this.node.getCTM())\n}\n\nexport function screenCTM () {\n  /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\n     This is needed because FF does not return the transformation matrix\n     for the inner coordinate system when getScreenCTM() is called on nested svgs.\n     However all other Browsers do that */\n  if (typeof this.isRoot === 'function' && !this.isRoot()) {\n    const rect = this.rect(1, 1)\n    const m = rect.node.getScreenCTM()\n    rect.remove()\n    return new Matrix(m)\n  }\n  return new Matrix(this.node.getScreenCTM())\n}\n\nregister(Matrix, 'Matrix')\n", "import { globals } from '../../utils/window.js'\nimport { makeInstance } from '../../utils/adopter.js'\n\nexport default function parser () {\n  // Reuse cached element if possible\n  if (!parser.nodes) {\n    const svg = makeInstance().size(2, 0)\n    svg.node.style.cssText = [\n      'opacity: 0',\n      'position: absolute',\n      'left: -100%',\n      'top: -100%',\n      'overflow: hidden'\n    ].join(';')\n\n    svg.attr('focusable', 'false')\n    svg.attr('aria-hidden', 'true')\n\n    const path = svg.path().node\n\n    parser.nodes = { svg, path }\n  }\n\n  if (!parser.nodes.svg.node.parentNode) {\n    const b = globals.document.body || globals.document.documentElement\n    parser.nodes.svg.addTo(b)\n  }\n\n  return parser.nodes\n}\n", "import { delimiter } from '../modules/core/regex.js'\nimport { globals } from '../utils/window.js'\nimport { register } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Matrix from './Matrix.js'\nimport Point from './Point.js'\nimport parser from '../modules/core/parser.js'\n\nexport function isNulledBox (box) {\n  return !box.width && !box.height && !box.x && !box.y\n}\n\nexport function domContains (node) {\n  return node === globals.document\n    || (globals.document.documentElement.contains || function (node) {\n      // This is IE - it does not support contains() for top-level SVGs\n      while (node.parentNode) {\n        node = node.parentNode\n      }\n      return node === globals.document\n    }).call(globals.document.documentElement, node)\n}\n\nexport default class Box {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  addOffset () {\n    // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\n    this.x += globals.window.pageXOffset\n    this.y += globals.window.pageYOffset\n    return new Box(this)\n  }\n\n  init (source) {\n    const base = [ 0, 0, 0, 0 ]\n    source = typeof source === 'string'\n      ? source.split(delimiter).map(parseFloat)\n      : Array.isArray(source)\n        ? source\n        : typeof source === 'object'\n          ? [ source.left != null\n            ? source.left\n            : source.x, source.top != null ? source.top : source.y, source.width, source.height ]\n          : arguments.length === 4\n            ? [].slice.call(arguments)\n            : base\n\n    this.x = source[0] || 0\n    this.y = source[1] || 0\n    this.width = this.w = source[2] || 0\n    this.height = this.h = source[3] || 0\n\n    // Add more bounding box properties\n    this.x2 = this.x + this.w\n    this.y2 = this.y + this.h\n    this.cx = this.x + this.w / 2\n    this.cy = this.y + this.h / 2\n\n    return this\n  }\n\n  isNulled () {\n    return isNulledBox(this)\n  }\n\n  // Merge rect box with another, return a new instance\n  merge (box) {\n    const x = Math.min(this.x, box.x)\n    const y = Math.min(this.y, box.y)\n    const width = Math.max(this.x + this.width, box.x + box.width) - x\n    const height = Math.max(this.y + this.height, box.y + box.height) - y\n\n    return new Box(x, y, width, height)\n  }\n\n  toArray () {\n    return [ this.x, this.y, this.width, this.height ]\n  }\n\n  toString () {\n    return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\n  }\n\n  transform (m) {\n    if (!(m instanceof Matrix)) {\n      m = new Matrix(m)\n    }\n\n    let xMin = Infinity\n    let xMax = -Infinity\n    let yMin = Infinity\n    let yMax = -Infinity\n\n    const pts = [\n      new Point(this.x, this.y),\n      new Point(this.x2, this.y),\n      new Point(this.x, this.y2),\n      new Point(this.x2, this.y2)\n    ]\n\n    pts.forEach(function (p) {\n      p = p.transform(m)\n      xMin = Math.min(xMin, p.x)\n      xMax = Math.max(xMax, p.x)\n      yMin = Math.min(yMin, p.y)\n      yMax = Math.max(yMax, p.y)\n    })\n\n    return new Box(\n      xMin, yMin,\n      xMax - xMin,\n      yMax - yMin\n    )\n  }\n\n}\n\nfunction getBox (el, getBBoxFn, retry) {\n  let box\n\n  try {\n    // Try to get the box with the provided function\n    box = getBBoxFn(el.node)\n\n    // If the box is worthless and not even in the dom, retry\n    // by throwing an error here...\n    if (isNulledBox(box) && !domContains(el.node)) {\n      throw new Error('Element not in the dom')\n    }\n  } catch (e) {\n    // ... and calling the retry handler here\n    box = retry(el)\n  }\n\n  return box\n}\n\nexport function bbox () {\n  // Function to get bbox is getBBox()\n  const getBBox = (node) => node.getBBox()\n\n  // Take all measures so that a stupid browser renders the element\n  // so we can get the bbox from it when we try again\n  const retry = (el) => {\n    try {\n      const clone = el.clone().addTo(parser().svg).show()\n      const box = clone.node.getBBox()\n      clone.remove()\n      return box\n    } catch (e) {\n      // We give up...\n      throw new Error(`Getting bbox of element \"${el.node.nodeName}\" is not possible: ${e.toString()}`)\n    }\n  }\n\n  const box = getBox(this, getBBox, retry)\n  const bbox = new Box(box)\n\n  return bbox\n}\n\nexport function rbox (el) {\n  const getRBox = (node) => node.getBoundingClientRect()\n  const retry = (el) => {\n    // There is no point in trying tricks here because if we insert the element into the dom ourselves\n    // it obviously will be at the wrong position\n    throw new Error(`Getting rbox of element \"${el.node.nodeName}\" is not possible`)\n  }\n\n  const box = getBox(this, getRBox, retry)\n  const rbox = new Box(box)\n\n  // If an element was passed, we want the bbox in the coordinate system of that element\n  if (el) {\n    return rbox.transform(el.screenCTM().inverseO())\n  }\n\n  // Else we want it in absolute screen coordinates\n  // Therefore we need to add the scrollOffset\n  return rbox.addOffset()\n}\n\n// Checks whether the given point is inside the bounding box\nexport function inside (x, y) {\n  const box = this.bbox()\n\n  return x > box.x\n    && y > box.y\n    && x < box.x + box.width\n    && y < box.y + box.height\n}\n\nregisterMethods({\n  viewbox: {\n    viewbox (x, y, width, height) {\n      // act as getter\n      if (x == null) return new Box(this.attr('viewBox'))\n\n      // act as setter\n      return this.attr('viewBox', new Box(x, y, width, height))\n    },\n\n    zoom (level, point) {\n      // Its best to rely on the attributes here and here is why:\n      // clientXYZ: Doesn't work on non-root svgs because they dont have a CSSBox (silly!)\n      // getBoundingClientRect: Doesn't work because Chrome just ignores width and height of nested svgs completely\n      //                        that means, their clientRect is always as big as the content.\n      //                        Furthermore this size is incorrect if the element is further transformed by its parents\n      // computedStyle: Only returns meaningful values if css was used with px. We dont go this route here!\n      // getBBox: returns the bounding box of its content - that doesn't help!\n      let { width, height } = this.attr([ 'width', 'height' ])\n\n      // Width and height is a string when a number with a unit is present which we can't use\n      // So we try clientXYZ\n      if ((!width && !height) || (typeof width === 'string' || typeof height === 'string')) {\n        width = this.node.clientWidth\n        height = this.node.clientHeight\n      }\n\n      // Giving up...\n      if (!width || !height) {\n        throw new Error('Impossible to get absolute width and height. Please provide an absolute width and height attribute on the zooming element')\n      }\n\n      const v = this.viewbox()\n\n      const zoomX = width / v.width\n      const zoomY = height / v.height\n      const zoom = Math.min(zoomX, zoomY)\n\n      if (level == null) {\n        return zoom\n      }\n\n      let zoomAmount = zoom / level\n\n      // Set the zoomAmount to the highest value which is safe to process and recover from\n      // The * 100 is a bit of wiggle room for the matrix transformation\n      if (zoomAmount === Infinity) zoomAmount = Number.MAX_SAFE_INTEGER / 100\n\n      point = point || new Point(width / 2 / zoomX + v.x, height / 2 / zoomY + v.y)\n\n      const box = new Box(v).transform(\n        new Matrix({ scale: zoomAmount, origin: point })\n      )\n\n      return this.viewbox(box)\n    }\n  }\n})\n\nregister(Box, 'Box')\n", "import { extend } from '../utils/adopter.js'\n// import { subClassArray } from './ArrayPolyfill.js'\n\nclass List extends Array {\n  constructor (arr = [], ...args) {\n    super(arr, ...args)\n    if (typeof arr === 'number') return this\n    this.length = 0\n    this.push(...arr)\n  }\n}\n\n/* = subClassArray('List', Array, function (arr = []) {\n  // This catches the case, that native map tries to create an array with new Array(1)\n  if (typeof arr === 'number') return this\n  this.length = 0\n  this.push(...arr)\n}) */\n\nexport default List\n\nextend([ List ], {\n  each (fnOrMethodName, ...args) {\n    if (typeof fnOrMethodName === 'function') {\n      return this.map((el, i, arr) => {\n        return fnOrMethodName.call(el, el, i, arr)\n      })\n    } else {\n      return this.map(el => {\n        return el[fnOrMethodName](...args)\n      })\n    }\n  },\n\n  toArray () {\n    return Array.prototype.concat.apply([], this)\n  }\n})\n\nconst reserved = [ 'toArray', 'constructor', 'each' ]\n\nList.extend = function (methods) {\n  methods = methods.reduce((obj, name) => {\n    // Don't overwrite own methods\n    if (reserved.includes(name)) return obj\n\n    // Don't add private methods\n    if (name[0] === '_') return obj\n\n    // Relay every call to each()\n    obj[name] = function (...attrs) {\n      return this.each(name, ...attrs)\n    }\n    return obj\n  }, {})\n\n  extend([ List ], methods)\n}\n", "import { adopt } from '../../utils/adopter.js'\nimport { globals } from '../../utils/window.js'\nimport { map } from '../../utils/utils.js'\nimport List from '../../types/List.js'\n\nexport default function baseFind (query, parent) {\n  return new List(map((parent || globals.document).querySelectorAll(query), function (node) {\n    return adopt(node)\n  }))\n}\n\n// Scoped find method\nexport function find (query) {\n  return baseFind(query, this.node)\n}\n\nexport function findOne (query) {\n  return adopt(this.node.querySelector(query))\n}\n", "import { delimiter } from './regex.js'\nimport { makeInstance } from '../../utils/adopter.js'\nimport { globals } from '../../utils/window.js'\n\nlet listenerId = 0\nexport const windowEvents = {}\n\nexport function getEvents (instance) {\n  let n = instance.getEventHolder()\n\n  // We dont want to save events in global space\n  if (n === globals.window) n = windowEvents\n  if (!n.events) n.events = {}\n  return n.events\n}\n\nexport function getEventTarget (instance) {\n  return instance.getEventTarget()\n}\n\nexport function clearEvents (instance) {\n  let n = instance.getEventHolder()\n  if (n === globals.window) n = windowEvents\n  if (n.events) n.events = {}\n}\n\n// Add event binder in the SVG namespace\nexport function on (node, events, listener, binding, options) {\n  const l = listener.bind(binding || node)\n  const instance = makeInstance(node)\n  const bag = getEvents(instance)\n  const n = getEventTarget(instance)\n\n  // events can be an array of events or a string of events\n  events = Array.isArray(events) ? events : events.split(delimiter)\n\n  // add id to listener\n  if (!listener._svgjsListenerId) {\n    listener._svgjsListenerId = ++listenerId\n  }\n\n  events.forEach(function (event) {\n    const ev = event.split('.')[0]\n    const ns = event.split('.')[1] || '*'\n\n    // ensure valid object\n    bag[ev] = bag[ev] || {}\n    bag[ev][ns] = bag[ev][ns] || {}\n\n    // reference listener\n    bag[ev][ns][listener._svgjsListenerId] = l\n\n    // add listener\n    n.addEventListener(ev, l, options || false)\n  })\n}\n\n// Add event unbinder in the SVG namespace\nexport function off (node, events, listener, options) {\n  const instance = makeInstance(node)\n  const bag = getEvents(instance)\n  const n = getEventTarget(instance)\n\n  // listener can be a function or a number\n  if (typeof listener === 'function') {\n    listener = listener._svgjsListenerId\n    if (!listener) return\n  }\n\n  // events can be an array of events or a string or undefined\n  events = Array.isArray(events) ? events : (events || '').split(delimiter)\n\n  events.forEach(function (event) {\n    const ev = event && event.split('.')[0]\n    const ns = event && event.split('.')[1]\n    let namespace, l\n\n    if (listener) {\n      // remove listener reference\n      if (bag[ev] && bag[ev][ns || '*']) {\n        // removeListener\n        n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false)\n\n        delete bag[ev][ns || '*'][listener]\n      }\n    } else if (ev && ns) {\n      // remove all listeners for a namespaced event\n      if (bag[ev] && bag[ev][ns]) {\n        for (l in bag[ev][ns]) {\n          off(n, [ ev, ns ].join('.'), l)\n        }\n\n        delete bag[ev][ns]\n      }\n    } else if (ns) {\n      // remove all listeners for a specific namespace\n      for (event in bag) {\n        for (namespace in bag[event]) {\n          if (ns === namespace) {\n            off(n, [ event, ns ].join('.'))\n          }\n        }\n      }\n    } else if (ev) {\n      // remove all listeners for the event\n      if (bag[ev]) {\n        for (namespace in bag[ev]) {\n          off(n, [ ev, namespace ].join('.'))\n        }\n\n        delete bag[ev]\n      }\n    } else {\n      // remove all listeners on a given node\n      for (event in bag) {\n        off(n, event)\n      }\n\n      clearEvents(instance)\n    }\n  })\n}\n\nexport function dispatch (node, event, data, options) {\n  const n = getEventTarget(node)\n\n  // Dispatch event\n  if (event instanceof globals.window.Event) {\n    n.dispatchEvent(event)\n  } else {\n    event = new globals.window.CustomEvent(event, { detail: data, cancelable: true, ...options })\n    n.dispatchEvent(event)\n  }\n  return event\n}\n", "import { dispatch, off, on } from '../modules/core/event.js'\nimport { register } from '../utils/adopter.js'\nimport Base from './Base.js'\n\nexport default class EventTarget extends Base {\n  addEventListener () {}\n\n  dispatch (event, data, options) {\n    return dispatch(this, event, data, options)\n  }\n\n  dispatchEvent (event) {\n    const bag = this.getEventHolder().events\n    if (!bag) return true\n\n    const events = bag[event.type]\n\n    for (const i in events) {\n      for (const j in events[i]) {\n        events[i][j](event)\n      }\n    }\n\n    return !event.defaultPrevented\n  }\n\n  // Fire given event\n  fire (event, data, options) {\n    this.dispatch(event, data, options)\n    return this\n  }\n\n  getEventHolder () {\n    return this\n  }\n\n  getEventTarget () {\n    return this\n  }\n\n  // Unbind event from listener\n  off (event, listener, options) {\n    off(this, event, listener, options)\n    return this\n  }\n\n  // Bind given event to listener\n  on (event, listener, binding, options) {\n    on(this, event, listener, binding, options)\n    return this\n  }\n\n  removeEventListener () {}\n}\n\nregister(EventTarget, 'EventTarget')\n", "\nexport function noop () {}\n\n// Default animation values\nexport const timeline = {\n  duration: 400,\n  ease: '>',\n  delay: 0\n}\n\n// Default attribute values\nexport const attrs = {\n\n  // fill and stroke\n  'fill-opacity': 1,\n  'stroke-opacity': 1,\n  'stroke-width': 0,\n  'stroke-linejoin': 'miter',\n  'stroke-linecap': 'butt',\n  fill: '#000000',\n  stroke: '#000000',\n  opacity: 1,\n\n  // position\n  x: 0,\n  y: 0,\n  cx: 0,\n  cy: 0,\n\n  // size\n  width: 0,\n  height: 0,\n\n  // radius\n  r: 0,\n  rx: 0,\n  ry: 0,\n\n  // gradient\n  offset: 0,\n  'stop-opacity': 1,\n  'stop-color': '#000000',\n\n  // text\n  'text-anchor': 'start'\n}\n", "import { delimiter } from '../modules/core/regex.js'\n\nexport default class SVGArray extends Array {\n  constructor (...args) {\n    super(...args)\n    this.init(...args)\n  }\n\n  clone () {\n    return new this.constructor(this)\n  }\n\n  init (arr) {\n    // This catches the case, that native map tries to create an array with new Array(1)\n    if (typeof arr === 'number') return this\n    this.length = 0\n    this.push(...this.parse(arr))\n    return this\n  }\n\n  // Parse whitespace separated string\n  parse (array = []) {\n    // If already is an array, no need to parse it\n    if (array instanceof Array) return array\n\n    return array.trim().split(delimiter).map(parseFloat)\n  }\n\n  toArray () {\n    return Array.prototype.concat.apply([], this)\n  }\n\n  toSet () {\n    return new Set(this)\n  }\n\n  toString () {\n    return this.join(' ')\n  }\n\n  // Flattens the array if needed\n  valueOf () {\n    const ret = []\n    ret.push(...this)\n    return ret\n  }\n\n}\n", "import { numberAndUnit } from '../modules/core/regex.js'\n\n// Module for unit conversions\nexport default class SVGNumber {\n  // Initialize\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  convert (unit) {\n    return new SVGNumber(this.value, unit)\n  }\n\n  // Divide number\n  divide (number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this / number, this.unit || number.unit)\n  }\n\n  init (value, unit) {\n    unit = Array.isArray(value) ? value[1] : unit\n    value = Array.isArray(value) ? value[0] : value\n\n    // initialize defaults\n    this.value = 0\n    this.unit = unit || ''\n\n    // parse value\n    if (typeof value === 'number') {\n      // ensure a valid numeric value\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\n    } else if (typeof value === 'string') {\n      unit = value.match(numberAndUnit)\n\n      if (unit) {\n        // make value numeric\n        this.value = parseFloat(unit[1])\n\n        // normalize\n        if (unit[5] === '%') {\n          this.value /= 100\n        } else if (unit[5] === 's') {\n          this.value *= 1000\n        }\n\n        // store unit\n        this.unit = unit[5]\n      }\n    } else {\n      if (value instanceof SVGNumber) {\n        this.value = value.valueOf()\n        this.unit = value.unit\n      }\n    }\n\n    return this\n  }\n\n  // Subtract number\n  minus (number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this - number, this.unit || number.unit)\n  }\n\n  // Add number\n  plus (number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this + number, this.unit || number.unit)\n  }\n\n  // Multiply number\n  times (number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this * number, this.unit || number.unit)\n  }\n\n  toArray () {\n    return [ this.value, this.unit ]\n  }\n\n  toJSON () {\n    return this.toString()\n  }\n\n  toString () {\n    return (this.unit === '%'\n      ? ~~(this.value * 1e8) / 1e6\n      : this.unit === 's'\n        ? this.value / 1e3\n        : this.value\n    ) + this.unit\n  }\n\n  valueOf () {\n    return this.value\n  }\n\n}\n", "import { attrs as defaults } from './defaults.js'\nimport { isNumber } from './regex.js'\nimport Color from '../../types/Color.js'\nimport SVGArray from '../../types/SVGArray.js'\nimport SVGNumber from '../../types/SVGNumber.js'\n\nconst hooks = []\nexport function registerAttrHook (fn) {\n  hooks.push(fn)\n}\n\n// Set svg element attribute\nexport default function attr (attr, val, ns) {\n  // act as full getter\n  if (attr == null) {\n    // get an object of attributes\n    attr = {}\n    val = this.node.attributes\n\n    for (const node of val) {\n      attr[node.nodeName] = isNumber.test(node.nodeValue)\n        ? parseFloat(node.nodeValue)\n        : node.nodeValue\n    }\n\n    return attr\n  } else if (attr instanceof Array) {\n    // loop through array and get all values\n    return attr.reduce((last, curr) => {\n      last[curr] = this.attr(curr)\n      return last\n    }, {})\n  } else if (typeof attr === 'object' && attr.constructor === Object) {\n    // apply every attribute individually if an object is passed\n    for (val in attr) this.attr(val, attr[val])\n  } else if (val === null) {\n    // remove value\n    this.node.removeAttribute(attr)\n  } else if (val == null) {\n    // act as a getter if the first and only argument is not an object\n    val = this.node.getAttribute(attr)\n    return val == null\n      ? defaults[attr]\n      : isNumber.test(val)\n        ? parseFloat(val)\n        : val\n  } else {\n    // Loop through hooks and execute them to convert value\n    val = hooks.reduce((_val, hook) => {\n      return hook(attr, _val, this)\n    }, val)\n\n    // ensure correct numeric values (also accepts NaN and Infinity)\n    if (typeof val === 'number') {\n      val = new SVGNumber(val)\n    } else if (Color.isColor(val)) {\n      // ensure full hex color\n      val = new Color(val)\n    } else if (val.constructor === Array) {\n      // Check for plain arrays and parse array values\n      val = new SVGArray(val)\n    }\n\n    // if the passed attribute is leading...\n    if (attr === 'leading') {\n      // ... call the leading method instead\n      if (this.leading) {\n        this.leading(val)\n      }\n    } else {\n      // set given attribute on node\n      typeof ns === 'string'\n        ? this.node.setAttributeNS(ns, attr, val.toString())\n        : this.node.setAttribute(attr, val.toString())\n    }\n\n    // rebuild if required\n    if (this.rebuild && (attr === 'font-size' || attr === 'x')) {\n      this.rebuild()\n    }\n  }\n\n  return this\n}\n", "import {\n  adopt,\n  assignNewId,\n  eid,\n  extend,\n  makeInstance,\n  create,\n  register\n} from '../utils/adopter.js'\nimport { find, findOne } from '../modules/core/selector.js'\nimport { globals } from '../utils/window.js'\nimport { map } from '../utils/utils.js'\nimport { svg, html } from '../modules/core/namespaces.js'\nimport EventTarget from '../types/EventTarget.js'\nimport List from '../types/List.js'\nimport attr from '../modules/core/attr.js'\n\nexport default class Dom extends EventTarget {\n  constructor (node, attrs) {\n    super()\n    this.node = node\n    this.type = node.nodeName\n\n    if (attrs && node !== attrs) {\n      this.attr(attrs)\n    }\n  }\n\n  // Add given element at a position\n  add (element, i) {\n    element = makeInstance(element)\n\n    // If non-root svg nodes are added we have to remove their namespaces\n    if (element.removeNamespace && this.node instanceof globals.window.SVGElement) {\n      element.removeNamespace()\n    }\n\n    if (i == null) {\n      this.node.appendChild(element.node)\n    } else if (element.node !== this.node.childNodes[i]) {\n      this.node.insertBefore(element.node, this.node.childNodes[i])\n    }\n\n    return this\n  }\n\n  // Add element to given container and return self\n  addTo (parent, i) {\n    return makeInstance(parent).put(this, i)\n  }\n\n  // Returns all child elements\n  children () {\n    return new List(map(this.node.children, function (node) {\n      return adopt(node)\n    }))\n  }\n\n  // Remove all elements in this container\n  clear () {\n    // remove children\n    while (this.node.hasChildNodes()) {\n      this.node.removeChild(this.node.lastChild)\n    }\n\n    return this\n  }\n\n  // Clone element\n  clone (deep = true, assignNewIds = true) {\n    // write dom data to the dom so the clone can pickup the data\n    this.writeDataToDom()\n\n    // clone element\n    let nodeClone = this.node.cloneNode(deep)\n    if (assignNewIds) {\n      // assign new id\n      nodeClone = assignNewId(nodeClone)\n    }\n    return new this.constructor(nodeClone)\n  }\n\n  // Iterates over all children and invokes a given block\n  each (block, deep) {\n    const children = this.children()\n    let i, il\n\n    for (i = 0, il = children.length; i < il; i++) {\n      block.apply(children[i], [ i, children ])\n\n      if (deep) {\n        children[i].each(block, deep)\n      }\n    }\n\n    return this\n  }\n\n  element (nodeName, attrs) {\n    return this.put(new Dom(create(nodeName), attrs))\n  }\n\n  // Get first child\n  first () {\n    return adopt(this.node.firstChild)\n  }\n\n  // Get a element at the given index\n  get (i) {\n    return adopt(this.node.childNodes[i])\n  }\n\n  getEventHolder () {\n    return this.node\n  }\n\n  getEventTarget () {\n    return this.node\n  }\n\n  // Checks if the given element is a child\n  has (element) {\n    return this.index(element) >= 0\n  }\n\n  html (htmlOrFn, outerHTML) {\n    return this.xml(htmlOrFn, outerHTML, html)\n  }\n\n  // Get / set id\n  id (id) {\n    // generate new id if no id set\n    if (typeof id === 'undefined' && !this.node.id) {\n      this.node.id = eid(this.type)\n    }\n\n    // don't set directly with this.node.id to make `null` work correctly\n    return this.attr('id', id)\n  }\n\n  // Gets index of given element\n  index (element) {\n    return [].slice.call(this.node.childNodes).indexOf(element.node)\n  }\n\n  // Get the last child\n  last () {\n    return adopt(this.node.lastChild)\n  }\n\n  // matches the element vs a css selector\n  matches (selector) {\n    const el = this.node\n    const matcher = el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector || null\n    return matcher && matcher.call(el, selector)\n  }\n\n  // Returns the parent element instance\n  parent (type) {\n    let parent = this\n\n    // check for parent\n    if (!parent.node.parentNode) return null\n\n    // get parent element\n    parent = adopt(parent.node.parentNode)\n\n    if (!type) return parent\n\n    // loop through ancestors if type is given\n    do {\n      if (typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\n    } while ((parent = adopt(parent.node.parentNode)))\n\n    return parent\n  }\n\n  // Basically does the same as `add()` but returns the added element instead\n  put (element, i) {\n    element = makeInstance(element)\n    this.add(element, i)\n    return element\n  }\n\n  // Add element to given container and return container\n  putIn (parent, i) {\n    return makeInstance(parent).add(this, i)\n  }\n\n  // Remove element\n  remove () {\n    if (this.parent()) {\n      this.parent().removeElement(this)\n    }\n\n    return this\n  }\n\n  // Remove a given child\n  removeElement (element) {\n    this.node.removeChild(element.node)\n\n    return this\n  }\n\n  // Replace this with element\n  replace (element) {\n    element = makeInstance(element)\n\n    if (this.node.parentNode) {\n      this.node.parentNode.replaceChild(element.node, this.node)\n    }\n\n    return element\n  }\n\n  round (precision = 2, map = null) {\n    const factor = 10 ** precision\n    const attrs = this.attr(map)\n\n    for (const i in attrs) {\n      if (typeof attrs[i] === 'number') {\n        attrs[i] = Math.round(attrs[i] * factor) / factor\n      }\n    }\n\n    this.attr(attrs)\n    return this\n  }\n\n  // Import / Export raw svg\n  svg (svgOrFn, outerSVG) {\n    return this.xml(svgOrFn, outerSVG, svg)\n  }\n\n  // Return id on string conversion\n  toString () {\n    return this.id()\n  }\n\n  words (text) {\n    // This is faster than removing all children and adding a new one\n    this.node.textContent = text\n    return this\n  }\n\n  wrap (node) {\n    const parent = this.parent()\n\n    if (!parent) {\n      return this.addTo(node)\n    }\n\n    const position = parent.index(this)\n    return parent.put(node, position).put(this)\n  }\n\n  // write svgjs data to the dom\n  writeDataToDom () {\n    // dump variables recursively\n    this.each(function () {\n      this.writeDataToDom()\n    })\n\n    return this\n  }\n\n  // Import / Export raw svg\n  xml (xmlOrFn, outerXML, ns) {\n    if (typeof xmlOrFn === 'boolean') {\n      ns = outerXML\n      outerXML = xmlOrFn\n      xmlOrFn = null\n    }\n\n    // act as getter if no svg string is given\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\n      // The default for exports is, that the outerNode is included\n      outerXML = outerXML == null ? true : outerXML\n\n      // write svgjs data to the dom\n      this.writeDataToDom()\n      let current = this\n\n      // An export modifier was passed\n      if (xmlOrFn != null) {\n        current = adopt(current.node.cloneNode(true))\n\n        // If the user wants outerHTML we need to process this node, too\n        if (outerXML) {\n          const result = xmlOrFn(current)\n          current = result || current\n\n          // The user does not want this node? Well, then he gets nothing\n          if (result === false) return ''\n        }\n\n        // Deep loop through all children and apply modifier\n        current.each(function () {\n          const result = xmlOrFn(this)\n          const _this = result || this\n\n          // If modifier returns false, discard node\n          if (result === false) {\n            this.remove()\n\n            // If modifier returns new node, use it\n          } else if (result && this !== _this) {\n            this.replace(_this)\n          }\n        }, true)\n      }\n\n      // Return outer or inner content\n      return outerXML\n        ? current.node.outerHTML\n        : current.node.innerHTML\n    }\n\n    // Act as setter if we got a string\n\n    // The default for import is, that the current node is not replaced\n    outerXML = outerXML == null ? false : outerXML\n\n    // Create temporary holder\n    const well = create('wrapper', ns)\n    const fragment = globals.document.createDocumentFragment()\n\n    // Dump raw svg\n    well.innerHTML = xmlOrFn\n\n    // Transplant nodes into the fragment\n    for (let len = well.children.length; len--;) {\n      fragment.appendChild(well.firstElementChild)\n    }\n\n    const parent = this.parent()\n\n    // Add the whole fragment at once\n    return outerXML\n      ? this.replace(fragment) && parent\n      : this.add(fragment)\n  }\n}\n\nextend(Dom, { attr, find, findOne })\nregister(Dom, 'Dom')\n", "import { bbox, rbox, inside } from '../types/Box.js'\nimport { ctm, screenCTM } from '../types/Matrix.js'\nimport {\n  extend,\n  getClass,\n  makeInstance,\n  register,\n  root\n} from '../utils/adopter.js'\nimport { globals } from '../utils/window.js'\nimport { point } from '../types/Point.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { reference } from '../modules/core/regex.js'\nimport Dom from './Dom.js'\nimport List from '../types/List.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nexport default class Element extends Dom {\n  constructor (node, attrs) {\n    super(node, attrs)\n\n    // initialize data object\n    this.dom = {}\n\n    // create circular reference\n    this.node.instance = this\n\n    if (node.hasAttribute('svgjs:data')) {\n      // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\n      this.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\n    }\n  }\n\n  // Move element by its center\n  center (x, y) {\n    return this.cx(x).cy(y)\n  }\n\n  // Move by center over x-axis\n  cx (x) {\n    return x == null\n      ? this.x() + this.width() / 2\n      : this.x(x - this.width() / 2)\n  }\n\n  // Move by center over y-axis\n  cy (y) {\n    return y == null\n      ? this.y() + this.height() / 2\n      : this.y(y - this.height() / 2)\n  }\n\n  // Get defs\n  defs () {\n    const root = this.root()\n    return root && root.defs()\n  }\n\n  // Relative move over x and y axes\n  dmove (x, y) {\n    return this.dx(x).dy(y)\n  }\n\n  // Relative move over x axis\n  dx (x = 0) {\n    return this.x(new SVGNumber(x).plus(this.x()))\n  }\n\n  // Relative move over y axis\n  dy (y = 0) {\n    return this.y(new SVGNumber(y).plus(this.y()))\n  }\n\n  getEventHolder () {\n    return this\n  }\n\n  // Set height of element\n  height (height) {\n    return this.attr('height', height)\n  }\n\n  // Move element to given x and y values\n  move (x, y) {\n    return this.x(x).y(y)\n  }\n\n  // return array of all ancestors of given type up to the root svg\n  parents (until = this.root()) {\n    const isSelector = typeof until === 'string'\n    if (!isSelector) {\n      until = makeInstance(until)\n    }\n    const parents = new List()\n    let parent = this\n\n    while (\n      (parent = parent.parent())\n      && parent.node !== globals.document\n      && parent.nodeName !== '#document-fragment') {\n\n      parents.push(parent)\n\n      if (!isSelector && (parent.node === until.node)) {\n        break\n      }\n      if (isSelector && parent.matches(until)) {\n        break\n      }\n      if (parent.node === this.root().node) {\n        // We worked our way to the root and didn't match `until`\n        return null\n      }\n    }\n\n    return parents\n  }\n\n  // Get referenced element form attribute value\n  reference (attr) {\n    attr = this.attr(attr)\n    if (!attr) return null\n\n    const m = (attr + '').match(reference)\n    return m ? makeInstance(m[1]) : null\n  }\n\n  // Get parent document\n  root () {\n    const p = this.parent(getClass(root))\n    return p && p.root()\n  }\n\n  // set given data to the elements data property\n  setData (o) {\n    this.dom = o\n    return this\n  }\n\n  // Set element size to given width and height\n  size (width, height) {\n    const p = proportionalSize(this, width, height)\n\n    return this\n      .width(new SVGNumber(p.width))\n      .height(new SVGNumber(p.height))\n  }\n\n  // Set width of element\n  width (width) {\n    return this.attr('width', width)\n  }\n\n  // write svgjs data to the dom\n  writeDataToDom () {\n    // remove previously set data\n    this.node.removeAttribute('svgjs:data')\n\n    if (Object.keys(this.dom).length) {\n      this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\n    }\n\n    return super.writeDataToDom()\n  }\n\n  // Move over x-axis\n  x (x) {\n    return this.attr('x', x)\n  }\n\n  // Move over y-axis\n  y (y) {\n    return this.attr('y', y)\n  }\n}\n\nextend(Element, {\n  bbox, rbox, inside, point, ctm, screenCTM\n})\n\nregister(Element, 'Element')\n", "import { registerMethods } from '../../utils/methods.js'\nimport Color from '../../types/Color.js'\nimport Element from '../../elements/Element.js'\nimport Matrix from '../../types/Matrix.js'\nimport Point from '../../types/Point.js'\nimport SVGNumber from '../../types/SVGNumber.js'\n\n// Define list of available attributes for stroke and fill\nconst sugar = {\n  stroke: [ 'color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset' ],\n  fill: [ 'color', 'opacity', 'rule' ],\n  prefix: function (t, a) {\n    return a === 'color' ? t : t + '-' + a\n  }\n}\n\n// Add sugar for fill and stroke\n;[ 'fill', 'stroke' ].forEach(function (m) {\n  const extension = {}\n  let i\n\n  extension[m] = function (o) {\n    if (typeof o === 'undefined') {\n      return this.attr(m)\n    }\n    if (typeof o === 'string' || o instanceof Color || Color.isRgb(o) || (o instanceof Element)) {\n      this.attr(m, o)\n    } else {\n      // set all attributes from sugar.fill and sugar.stroke list\n      for (i = sugar[m].length - 1; i >= 0; i--) {\n        if (o[sugar[m][i]] != null) {\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\n        }\n      }\n    }\n\n    return this\n  }\n\n  registerMethods([ 'Element', 'Runner' ], extension)\n})\n\nregisterMethods([ 'Element', 'Runner' ], {\n  // Let the user set the matrix directly\n  matrix: function (mat, b, c, d, e, f) {\n    // Act as a getter\n    if (mat == null) {\n      return new Matrix(this)\n    }\n\n    // Act as a setter, the user can pass a matrix or a set of numbers\n    return this.attr('transform', new Matrix(mat, b, c, d, e, f))\n  },\n\n  // Map rotation to transform\n  rotate: function (angle, cx, cy) {\n    return this.transform({ rotate: angle, ox: cx, oy: cy }, true)\n  },\n\n  // Map skew to transform\n  skew: function (x, y, cx, cy) {\n    return arguments.length === 1 || arguments.length === 3\n      ? this.transform({ skew: x, ox: y, oy: cx }, true)\n      : this.transform({ skew: [ x, y ], ox: cx, oy: cy }, true)\n  },\n\n  shear: function (lam, cx, cy) {\n    return this.transform({ shear: lam, ox: cx, oy: cy }, true)\n  },\n\n  // Map scale to transform\n  scale: function (x, y, cx, cy) {\n    return arguments.length === 1 || arguments.length === 3\n      ? this.transform({ scale: x, ox: y, oy: cx }, true)\n      : this.transform({ scale: [ x, y ], ox: cx, oy: cy }, true)\n  },\n\n  // Map translate to transform\n  translate: function (x, y) {\n    return this.transform({ translate: [ x, y ] }, true)\n  },\n\n  // Map relative translations to transform\n  relative: function (x, y) {\n    return this.transform({ relative: [ x, y ] }, true)\n  },\n\n  // Map flip to transform\n  flip: function (direction = 'both', origin = 'center') {\n    if ('xybothtrue'.indexOf(direction) === -1) {\n      origin = direction\n      direction = 'both'\n    }\n\n    return this.transform({ flip: direction, origin: origin }, true)\n  },\n\n  // Opacity\n  opacity: function (value) {\n    return this.attr('opacity', value)\n  }\n})\n\nregisterMethods('radius', {\n  // Add x and y radius\n  radius: function (x, y = x) {\n    const type = (this._element || this).type\n    return type === 'radialGradient'\n      ? this.attr('r', new SVGNumber(x))\n      : this.rx(x).ry(y)\n  }\n})\n\nregisterMethods('Path', {\n  // Get path length\n  length: function () {\n    return this.node.getTotalLength()\n  },\n  // Get point at length\n  pointAt: function (length) {\n    return new Point(this.node.getPointAtLength(length))\n  }\n})\n\nregisterMethods([ 'Element', 'Runner' ], {\n  // Set font\n  font: function (a, v) {\n    if (typeof a === 'object') {\n      for (v in a) this.font(v, a[v])\n      return this\n    }\n\n    return a === 'leading'\n      ? this.leading(v)\n      : a === 'anchor'\n        ? this.attr('text-anchor', v)\n        : a === 'size' || a === 'family' || a === 'weight' || a === 'stretch' || a === 'variant' || a === 'style'\n          ? this.attr('font-' + a, v)\n          : this.attr(a, v)\n  }\n})\n\n// Add events to elements\nconst methods = [ 'click',\n  'dblclick',\n  'mousedown',\n  'mouseup',\n  'mouseover',\n  'mouseout',\n  'mousemove',\n  'mouseenter',\n  'mouseleave',\n  'touchstart',\n  'touchmove',\n  'touchleave',\n  'touchend',\n  'touchcancel' ].reduce(function (last, event) {\n  // add event to Element\n  const fn = function (f) {\n    if (f === null) {\n      this.off(event)\n    } else {\n      this.on(event, f)\n    }\n    return this\n  }\n\n  last[event] = fn\n  return last\n}, {})\n\nregisterMethods('Element', methods)\n", "import { getOrigin } from '../../utils/utils.js'\nimport { delimiter, transforms } from '../core/regex.js'\nimport { registerMethods } from '../../utils/methods.js'\nimport Matrix from '../../types/Matrix.js'\n\n// Reset all transformations\nexport function untransform () {\n  return this.attr('transform', null)\n}\n\n// merge the whole transformation chain into one matrix and returns it\nexport function matrixify () {\n  const matrix = (this.attr('transform') || '')\n    // split transformations\n    .split(transforms).slice(0, -1).map(function (str) {\n      // generate key => value pairs\n      const kv = str.trim().split('(')\n      return [ kv[0],\n        kv[1].split(delimiter)\n          .map(function (str) {\n            return parseFloat(str)\n          })\n      ]\n    })\n    .reverse()\n    // merge every transformation into one matrix\n    .reduce(function (matrix, transform) {\n      if (transform[0] === 'matrix') {\n        return matrix.lmultiply(Matrix.fromArray(transform[1]))\n      }\n      return matrix[transform[0]].apply(matrix, transform[1])\n    }, new Matrix())\n\n  return matrix\n}\n\n// add an element to another parent without changing the visual representation on the screen\nexport function toParent (parent, i) {\n  if (this === parent) return this\n  const ctm = this.screenCTM()\n  const pCtm = parent.screenCTM().inverse()\n\n  this.addTo(parent, i).untransform().transform(pCtm.multiply(ctm))\n\n  return this\n}\n\n// same as above with parent equals root-svg\nexport function toRoot (i) {\n  return this.toParent(this.root(), i)\n}\n\n// Add transformations\nexport function transform (o, relative) {\n  // Act as a getter if no object was passed\n  if (o == null || typeof o === 'string') {\n    const decomposed = new Matrix(this).decompose()\n    return o == null ? decomposed : decomposed[o]\n  }\n\n  if (!Matrix.isMatrixLike(o)) {\n    // Set the origin according to the defined transform\n    o = { ...o, origin: getOrigin(o, this) }\n  }\n\n  // The user can pass a boolean, an Element or an Matrix or nothing\n  const cleanRelative = relative === true ? this : (relative || false)\n  const result = new Matrix(cleanRelative).transform(o)\n  return this.attr('transform', result)\n}\n\nregisterMethods('Element', {\n  untransform, matrixify, toParent, toRoot, transform\n})\n", "import { register } from '../utils/adopter.js'\nimport Element from './Element.js'\n\nexport default class Container extends Element {\n  flatten (parent = this, index) {\n    this.each(function () {\n      if (this instanceof Container) {\n        return this.flatten().ungroup()\n      }\n    })\n\n    return this\n  }\n\n  ungroup (parent = this.parent(), index = parent.index(this)) {\n    // when parent != this, we want append all elements to the end\n    index = index === -1 ? parent.children().length : index\n\n    this.each(function (i, children) {\n      // reverse each\n      return children[children.length - i - 1].toParent(parent, index)\n    })\n\n    return this.remove()\n  }\n}\n\nregister(Container, 'Container')\n", "import { nodeOrNew, register } from '../utils/adopter.js'\nimport Container from './Container.js'\n\nexport default class Defs extends Container {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('defs', node), attrs)\n  }\n\n  flatten () {\n    return this\n  }\n\n  ungroup () {\n    return this\n  }\n}\n\nregister(Defs, 'Defs')\n", "import { register } from '../utils/adopter.js'\nimport Element from './Element.js'\n\nexport default class Shape extends Element {}\n\nregister(Shape, 'Shape')\n", "import SVGNumber from '../../types/SVGNumber.js'\n\n// Radius x value\nexport function rx (rx) {\n  return this.attr('rx', rx)\n}\n\n// Radius y value\nexport function ry (ry) {\n  return this.attr('ry', ry)\n}\n\n// Move over x-axis\nexport function x (x) {\n  return x == null\n    ? this.cx() - this.rx()\n    : this.cx(x + this.rx())\n}\n\n// Move over y-axis\nexport function y (y) {\n  return y == null\n    ? this.cy() - this.ry()\n    : this.cy(y + this.ry())\n}\n\n// Move by center over x-axis\nexport function cx (x) {\n  return this.attr('cx', x)\n}\n\n// Move by center over y-axis\nexport function cy (y) {\n  return this.attr('cy', y)\n}\n\n// Set width of element\nexport function width (width) {\n  return width == null\n    ? this.rx() * 2\n    : this.rx(new SVGNumber(width).divide(2))\n}\n\n// Set height of element\nexport function height (height) {\n  return height == null\n    ? this.ry() * 2\n    : this.ry(new SVGNumber(height).divide(2))\n}\n", "import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { registerMethods } from '../utils/methods.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Shape from './Shape.js'\nimport * as circled from '../modules/core/circled.js'\n\nexport default class Ellipse extends Shape {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('ellipse', node), attrs)\n  }\n\n  size (width, height) {\n    const p = proportionalSize(this, width, height)\n\n    return this\n      .rx(new SVGNumber(p.width).divide(2))\n      .ry(new SVGNumber(p.height).divide(2))\n  }\n}\n\nextend(Ellipse, circled)\n\nregisterMethods('Container', {\n  // Create an ellipse\n  ellipse: wrapWithAttrCheck(function (width = 0, height = width) {\n    return this.put(new Ellipse()).size(width, height).move(0, 0)\n  })\n})\n\nregister(Ellipse, 'Ellipse')\n", "import Dom from './Dom.js'\nimport { globals } from '../utils/window.js'\nimport { register, create } from '../utils/adopter.js'\n\nclass Fragment extends Dom {\n  constructor (node = globals.document.createDocumentFragment()) {\n    super(node)\n  }\n\n  // Import / Export raw xml\n  xml (xmlOrFn, outerXML, ns) {\n    if (typeof xmlOrFn === 'boolean') {\n      ns = outerXML\n      outerXML = xmlOrFn\n      xmlOrFn = null\n    }\n\n    // because this is a fragment we have to put all elements into a wrapper first\n    // before we can get the innerXML from it\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\n      const wrapper = new Dom(create('wrapper', ns))\n      wrapper.add(this.node.cloneNode(true))\n\n      return wrapper.xml(false, ns)\n    }\n\n    // Act as setter if we got a string\n    return super.xml(xmlOrFn, false, ns)\n  }\n\n}\n\nregister(Fragment, 'Fragment')\n\nexport default Fragment\n", "import SVGNumber from '../../types/SVGNumber.js'\n\nexport function from (x, y) {\n  return (this._element || this).type === 'radialGradient'\n    ? this.attr({ fx: new SVGNumber(x), fy: new SVGNumber(y) })\n    : this.attr({ x1: new SVGNumber(x), y1: new SVGNumber(y) })\n}\n\nexport function to (x, y) {\n  return (this._element || this).type === 'radialGradient'\n    ? this.attr({ cx: new SVGNumber(x), cy: new SVGNumber(y) })\n    : this.attr({ x2: new SVGNumber(x), y2: new SVGNumber(y) })\n}\n", "import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Box from '../types/Box.js'\nimport Container from './Container.js'\nimport baseFind from '../modules/core/selector.js'\nimport * as gradiented from '../modules/core/gradiented.js'\n\nexport default class Gradient extends Container {\n  constructor (type, attrs) {\n    super(\n      nodeOrNew(type + 'Gradient', typeof type === 'string' ? null : type),\n      attrs\n    )\n  }\n\n  // custom attr to handle transform\n  attr (a, b, c) {\n    if (a === 'transform') a = 'gradientTransform'\n    return super.attr(a, b, c)\n  }\n\n  bbox () {\n    return new Box()\n  }\n\n  targets () {\n    return baseFind('svg [fill*=' + this.id() + ']')\n  }\n\n  // Alias string conversion to fill\n  toString () {\n    return this.url()\n  }\n\n  // Update gradient\n  update (block) {\n    // remove all stops\n    this.clear()\n\n    // invoke passed block\n    if (typeof block === 'function') {\n      block.call(this, this)\n    }\n\n    return this\n  }\n\n  // Return the fill id\n  url () {\n    return 'url(#' + this.id() + ')'\n  }\n}\n\nextend(Gradient, gradiented)\n\nregisterMethods({\n  Container: {\n    // Create gradient element in defs\n    gradient (...args) {\n      return this.defs().gradient(...args)\n    }\n  },\n  // define gradient\n  Defs: {\n    gradient: wrapWithAttrCheck(function (type, block) {\n      return this.put(new Gradient(type)).update(block)\n    })\n  }\n})\n\nregister(Gradient, 'Gradient')\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Box from '../types/Box.js'\nimport Container from './Container.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class Pattern extends Container {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('pattern', node), attrs)\n  }\n\n  // custom attr to handle transform\n  attr (a, b, c) {\n    if (a === 'transform') a = 'patternTransform'\n    return super.attr(a, b, c)\n  }\n\n  bbox () {\n    return new Box()\n  }\n\n  targets () {\n    return baseFind('svg [fill*=' + this.id() + ']')\n  }\n\n  // Alias string conversion to fill\n  toString () {\n    return this.url()\n  }\n\n  // Update pattern by rebuilding\n  update (block) {\n    // remove content\n    this.clear()\n\n    // invoke passed block\n    if (typeof block === 'function') {\n      block.call(this, this)\n    }\n\n    return this\n  }\n\n  // Return the fill id\n  url () {\n    return 'url(#' + this.id() + ')'\n  }\n\n}\n\nregisterMethods({\n  Container: {\n    // Create pattern element in defs\n    pattern (...args) {\n      return this.defs().pattern(...args)\n    }\n  },\n  Defs: {\n    pattern: wrapWithAttrCheck(function (width, height, block) {\n      return this.put(new Pattern()).update(block).attr({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        patternUnits: 'userSpaceOnUse'\n      })\n    })\n  }\n})\n\nregister(Pattern, 'Pattern')\n", "import { isImage } from '../modules/core/regex.js'\nimport { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { off, on } from '../modules/core/event.js'\nimport { registerAttrHook } from '../modules/core/attr.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { xlink } from '../modules/core/namespaces.js'\nimport Pattern from './Pattern.js'\nimport Shape from './Shape.js'\nimport { globals } from '../utils/window.js'\n\nexport default class Image extends Shape {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('image', node), attrs)\n  }\n\n  // (re)load image\n  load (url, callback) {\n    if (!url) return this\n\n    const img = new globals.window.Image()\n\n    on(img, 'load', function (e) {\n      const p = this.parent(Pattern)\n\n      // ensure image size\n      if (this.width() === 0 && this.height() === 0) {\n        this.size(img.width, img.height)\n      }\n\n      if (p instanceof Pattern) {\n        // ensure pattern size if not set\n        if (p.width() === 0 && p.height() === 0) {\n          p.size(this.width(), this.height())\n        }\n      }\n\n      if (typeof callback === 'function') {\n        callback.call(this, e)\n      }\n    }, this)\n\n    on(img, 'load error', function () {\n      // dont forget to unbind memory leaking events\n      off(img)\n    })\n\n    return this.attr('href', (img.src = url), xlink)\n  }\n}\n\nregisterAttrHook(function (attr, val, _this) {\n  // convert image fill and stroke to patterns\n  if (attr === 'fill' || attr === 'stroke') {\n    if (isImage.test(val)) {\n      val = _this.root().defs().image(val)\n    }\n  }\n\n  if (val instanceof Image) {\n    val = _this.root().defs().pattern(0, 0, (pattern) => {\n      pattern.add(val)\n    })\n  }\n\n  return val\n})\n\nregisterMethods({\n  Container: {\n    // create image element, load image and set its size\n    image: wrapWithAttrCheck(function (source, callback) {\n      return this.put(new Image()).size(0, 0).load(source, callback)\n    })\n  }\n})\n\nregister(Image, 'Image')\n", "import { delimiter } from '../modules/core/regex.js'\nimport SVGArray from './SVGArray.js'\nimport Box from './Box.js'\nimport Matrix from './Matrix.js'\n\nexport default class PointArray extends SVGArray {\n  // Get bounding box of points\n  bbox () {\n    let maxX = -Infinity\n    let maxY = -Infinity\n    let minX = Infinity\n    let minY = Infinity\n    this.forEach(function (el) {\n      maxX = Math.max(el[0], maxX)\n      maxY = Math.max(el[1], maxY)\n      minX = Math.min(el[0], minX)\n      minY = Math.min(el[1], minY)\n    })\n    return new Box(minX, minY, maxX - minX, maxY - minY)\n  }\n\n  // Move point string\n  move (x, y) {\n    const box = this.bbox()\n\n    // get relative offset\n    x -= box.x\n    y -= box.y\n\n    // move every point\n    if (!isNaN(x) && !isNaN(y)) {\n      for (let i = this.length - 1; i >= 0; i--) {\n        this[i] = [ this[i][0] + x, this[i][1] + y ]\n      }\n    }\n\n    return this\n  }\n\n  // Parse point string and flat array\n  parse (array = [ 0, 0 ]) {\n    const points = []\n\n    // if it is an array, we flatten it and therefore clone it to 1 depths\n    if (array instanceof Array) {\n      array = Array.prototype.concat.apply([], array)\n    } else { // Else, it is considered as a string\n      // parse points\n      array = array.trim().split(delimiter).map(parseFloat)\n    }\n\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\n    if (array.length % 2 !== 0) array.pop()\n\n    // wrap points in two-tuples\n    for (let i = 0, len = array.length; i < len; i = i + 2) {\n      points.push([ array[i], array[i + 1] ])\n    }\n\n    return points\n  }\n\n  // Resize poly string\n  size (width, height) {\n    let i\n    const box = this.bbox()\n\n    // recalculate position of all points according to new size\n    for (i = this.length - 1; i >= 0; i--) {\n      if (box.width) this[i][0] = ((this[i][0] - box.x) * width) / box.width + box.x\n      if (box.height) this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\n    }\n\n    return this\n  }\n\n  // Convert array to line object\n  toLine () {\n    return {\n      x1: this[0][0],\n      y1: this[0][1],\n      x2: this[1][0],\n      y2: this[1][1]\n    }\n  }\n\n  // Convert array to string\n  toString () {\n    const array = []\n    // convert to a poly point string\n    for (let i = 0, il = this.length; i < il; i++) {\n      array.push(this[i].join(','))\n    }\n\n    return array.join(' ')\n  }\n\n  transform (m) {\n    return this.clone().transformO(m)\n  }\n\n  // transform points with matrix (similar to Point.transform)\n  transformO (m) {\n    if (!Matrix.isMatrixLike(m)) {\n      m = new Matrix(m)\n    }\n\n    for (let i = this.length; i--;) {\n      // Perform the matrix multiplication\n      const [ x, y ] = this[i]\n      this[i][0] = m.a * x + m.c * y + m.e\n      this[i][1] = m.b * x + m.d * y + m.f\n    }\n\n    return this\n  }\n\n}\n", "import PointArray from '../../types/PointArray.js'\n\nexport const MorphArray = PointArray\n\n// Move by left top corner over x-axis\nexport function x (x) {\n  return x == null ? this.bbox().x : this.move(x, this.bbox().y)\n}\n\n// Move by left top corner over y-axis\nexport function y (y) {\n  return y == null ? this.bbox().y : this.move(this.bbox().x, y)\n}\n\n// Set width of element\nexport function width (width) {\n  const b = this.bbox()\n  return width == null ? b.width : this.size(width, b.height)\n}\n\n// Set height of element\nexport function height (height) {\n  const b = this.bbox()\n  return height == null ? b.height : this.size(b.width, height)\n}\n", "import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { registerMethods } from '../utils/methods.js'\nimport PointArray from '../types/PointArray.js'\nimport Shape from './Shape.js'\nimport * as pointed from '../modules/core/pointed.js'\n\nexport default class Line extends Shape {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('line', node), attrs)\n  }\n\n  // Get array\n  array () {\n    return new PointArray([\n      [ this.attr('x1'), this.attr('y1') ],\n      [ this.attr('x2'), this.attr('y2') ]\n    ])\n  }\n\n  // Move by left top corner\n  move (x, y) {\n    return this.attr(this.array().move(x, y).toLine())\n  }\n\n  // Overwrite native plot() method\n  plot (x1, y1, x2, y2) {\n    if (x1 == null) {\n      return this.array()\n    } else if (typeof y1 !== 'undefined') {\n      x1 = { x1, y1, x2, y2 }\n    } else {\n      x1 = new PointArray(x1).toLine()\n    }\n\n    return this.attr(x1)\n  }\n\n  // Set element size to given width and height\n  size (width, height) {\n    const p = proportionalSize(this, width, height)\n    return this.attr(this.array().size(p.width, p.height).toLine())\n  }\n}\n\nextend(Line, pointed)\n\nregisterMethods({\n  Container: {\n    // Create a line element\n    line: wrapWithAttrCheck(function (...args) {\n      // make sure plot is called as a setter\n      // x1 is not necessarily a number, it can also be an array, a string and a PointArray\n      return Line.prototype.plot.apply(\n        this.put(new Line())\n        , args[0] != null ? args : [ 0, 0, 0, 0 ]\n      )\n    })\n  }\n})\n\nregister(Line, 'Line')\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\n\nexport default class Marker extends Container {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('marker', node), attrs)\n  }\n\n  // Set height of element\n  height (height) {\n    return this.attr('markerHeight', height)\n  }\n\n  orient (orient) {\n    return this.attr('orient', orient)\n  }\n\n  // Set marker refX and refY\n  ref (x, y) {\n    return this.attr('refX', x).attr('refY', y)\n  }\n\n  // Return the fill id\n  toString () {\n    return 'url(#' + this.id() + ')'\n  }\n\n  // Update marker\n  update (block) {\n    // remove all content\n    this.clear()\n\n    // invoke passed block\n    if (typeof block === 'function') {\n      block.call(this, this)\n    }\n\n    return this\n  }\n\n  // Set width of element\n  width (width) {\n    return this.attr('markerWidth', width)\n  }\n\n}\n\nregisterMethods({\n  Container: {\n    marker (...args) {\n      // Create marker element in defs\n      return this.defs().marker(...args)\n    }\n  },\n  Defs: {\n    // Create marker\n    marker: wrapWithAttrCheck(function (width, height, block) {\n      // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\n      return this.put(new Marker())\n        .size(width, height)\n        .ref(width / 2, height / 2)\n        .viewbox(0, 0, width, height)\n        .attr('orient', 'auto')\n        .update(block)\n    })\n  },\n  marker: {\n    // Create and attach markers\n    marker (marker, width, height, block) {\n      let attr = [ 'marker' ]\n\n      // Build attribute name\n      if (marker !== 'all') attr.push(marker)\n      attr = attr.join('-')\n\n      // Set marker attribute\n      marker = arguments[1] instanceof Marker\n        ? arguments[1]\n        : this.defs().marker(width, height, block)\n\n      return this.attr(attr, marker)\n    }\n  }\n})\n\nregister(Marker, 'Marker')\n", "import { timeline } from '../modules/core/defaults.js'\nimport { extend } from '../utils/adopter.js'\n\n/***\nBase Class\n==========\nThe base stepper class that will be\n***/\n\nfunction makeSetterGetter (k, f) {\n  return function (v) {\n    if (v == null) return this[k]\n    this[k] = v\n    if (f) f.call(this)\n    return this\n  }\n}\n\nexport const easing = {\n  '-': function (pos) {\n    return pos\n  },\n  '<>': function (pos) {\n    return -Math.cos(pos * Math.PI) / 2 + 0.5\n  },\n  '>': function (pos) {\n    return Math.sin(pos * Math.PI / 2)\n  },\n  '<': function (pos) {\n    return -Math.cos(pos * Math.PI / 2) + 1\n  },\n  bezier: function (x1, y1, x2, y2) {\n    // see https://www.w3.org/TR/css-easing-1/#cubic-bezier-algo\n    return function (t) {\n      if (t < 0) {\n        if (x1 > 0) {\n          return y1 / x1 * t\n        } else if (x2 > 0) {\n          return y2 / x2 * t\n        } else {\n          return 0\n        }\n      } else if (t > 1) {\n        if (x2 < 1) {\n          return (1 - y2) / (1 - x2) * t + (y2 - x2) / (1 - x2)\n        } else if (x1 < 1) {\n          return (1 - y1) / (1 - x1) * t + (y1 - x1) / (1 - x1)\n        } else {\n          return 1\n        }\n      } else {\n        return 3 * t * (1 - t) ** 2 * y1 + 3 * t ** 2 * (1 - t) * y2 + t ** 3\n      }\n    }\n  },\n  // see https://www.w3.org/TR/css-easing-1/#step-timing-function-algo\n  steps: function (steps, stepPosition = 'end') {\n    // deal with \"jump-\" prefix\n    stepPosition = stepPosition.split('-').reverse()[0]\n\n    let jumps = steps\n    if (stepPosition === 'none') {\n      --jumps\n    } else if (stepPosition === 'both') {\n      ++jumps\n    }\n\n    // The beforeFlag is essentially useless\n    return (t, beforeFlag = false) => {\n      // Step is called currentStep in referenced url\n      let step = Math.floor(t * steps)\n      const jumping = (t * step) % 1 === 0\n\n      if (stepPosition === 'start' || stepPosition === 'both') {\n        ++step\n      }\n\n      if (beforeFlag && jumping) {\n        --step\n      }\n\n      if (t >= 0 && step < 0) {\n        step = 0\n      }\n\n      if (t <= 1 && step > jumps) {\n        step = jumps\n      }\n\n      return step / jumps\n    }\n  }\n}\n\nexport class Stepper {\n  done () {\n    return false\n  }\n}\n\n/***\nEasing Functions\n================\n***/\n\nexport class Ease extends Stepper {\n  constructor (fn = timeline.ease) {\n    super()\n    this.ease = easing[fn] || fn\n  }\n\n  step (from, to, pos) {\n    if (typeof from !== 'number') {\n      return pos < 1 ? from : to\n    }\n    return from + (to - from) * this.ease(pos)\n  }\n}\n\n/***\nController Types\n================\n***/\n\nexport class Controller extends Stepper {\n  constructor (fn) {\n    super()\n    this.stepper = fn\n  }\n\n  done (c) {\n    return c.done\n  }\n\n  step (current, target, dt, c) {\n    return this.stepper(current, target, dt, c)\n  }\n\n}\n\nfunction recalculate () {\n  // Apply the default parameters\n  const duration = (this._duration || 500) / 1000\n  const overshoot = this._overshoot || 0\n\n  // Calculate the PID natural response\n  const eps = 1e-10\n  const pi = Math.PI\n  const os = Math.log(overshoot / 100 + eps)\n  const zeta = -os / Math.sqrt(pi * pi + os * os)\n  const wn = 3.9 / (zeta * duration)\n\n  // Calculate the Spring values\n  this.d = 2 * zeta * wn\n  this.k = wn * wn\n}\n\nexport class Spring extends Controller {\n  constructor (duration = 500, overshoot = 0) {\n    super()\n    this.duration(duration)\n      .overshoot(overshoot)\n  }\n\n  step (current, target, dt, c) {\n    if (typeof current === 'string') return current\n    c.done = dt === Infinity\n    if (dt === Infinity) return target\n    if (dt === 0) return current\n\n    if (dt > 100) dt = 16\n\n    dt /= 1000\n\n    // Get the previous velocity\n    const velocity = c.velocity || 0\n\n    // Apply the control to get the new position and store it\n    const acceleration = -this.d * velocity - this.k * (current - target)\n    const newPosition = current\n      + velocity * dt\n      + acceleration * dt * dt / 2\n\n    // Store the velocity\n    c.velocity = velocity + acceleration * dt\n\n    // Figure out if we have converged, and if so, pass the value\n    c.done = Math.abs(target - newPosition) + Math.abs(velocity) < 0.002\n    return c.done ? target : newPosition\n  }\n}\n\nextend(Spring, {\n  duration: makeSetterGetter('_duration', recalculate),\n  overshoot: makeSetterGetter('_overshoot', recalculate)\n})\n\nexport class PID extends Controller {\n  constructor (p = 0.1, i = 0.01, d = 0, windup = 1000) {\n    super()\n    this.p(p).i(i).d(d).windup(windup)\n  }\n\n  step (current, target, dt, c) {\n    if (typeof current === 'string') return current\n    c.done = dt === Infinity\n\n    if (dt === Infinity) return target\n    if (dt === 0) return current\n\n    const p = target - current\n    let i = (c.integral || 0) + p * dt\n    const d = (p - (c.error || 0)) / dt\n    const windup = this._windup\n\n    // antiwindup\n    if (windup !== false) {\n      i = Math.max(-windup, Math.min(i, windup))\n    }\n\n    c.error = p\n    c.integral = i\n\n    c.done = Math.abs(p) < 0.001\n\n    return c.done ? target : current + (this.P * p + this.I * i + this.D * d)\n  }\n}\n\nextend(PID, {\n  windup: makeSetterGetter('_windup'),\n  p: makeSetterGetter('P'),\n  i: makeSetterGetter('I'),\n  d: makeSetterGetter('D')\n})\n", "import { isPathLetter } from '../modules/core/regex.js'\nimport Point from '../types/Point.js'\n\nconst segmentParameters = { M: 2, L: 2, H: 1, V: 1, C: 6, S: 4, Q: 4, T: 2, A: 7, Z: 0 }\n\nconst pathHandlers = {\n  M: function (c, p, p0) {\n    p.x = p0.x = c[0]\n    p.y = p0.y = c[1]\n\n    return [ 'M', p.x, p.y ]\n  },\n  L: function (c, p) {\n    p.x = c[0]\n    p.y = c[1]\n    return [ 'L', c[0], c[1] ]\n  },\n  H: function (c, p) {\n    p.x = c[0]\n    return [ 'H', c[0] ]\n  },\n  V: function (c, p) {\n    p.y = c[0]\n    return [ 'V', c[0] ]\n  },\n  C: function (c, p) {\n    p.x = c[4]\n    p.y = c[5]\n    return [ 'C', c[0], c[1], c[2], c[3], c[4], c[5] ]\n  },\n  S: function (c, p) {\n    p.x = c[2]\n    p.y = c[3]\n    return [ 'S', c[0], c[1], c[2], c[3] ]\n  },\n  Q: function (c, p) {\n    p.x = c[2]\n    p.y = c[3]\n    return [ 'Q', c[0], c[1], c[2], c[3] ]\n  },\n  T: function (c, p) {\n    p.x = c[0]\n    p.y = c[1]\n    return [ 'T', c[0], c[1] ]\n  },\n  Z: function (c, p, p0) {\n    p.x = p0.x\n    p.y = p0.y\n    return [ 'Z' ]\n  },\n  A: function (c, p) {\n    p.x = c[5]\n    p.y = c[6]\n    return [ 'A', c[0], c[1], c[2], c[3], c[4], c[5], c[6] ]\n  }\n}\n\nconst mlhvqtcsaz = 'mlhvqtcsaz'.split('')\n\nfor (let i = 0, il = mlhvqtcsaz.length; i < il; ++i) {\n  pathHandlers[mlhvqtcsaz[i]] = (function (i) {\n    return function (c, p, p0) {\n      if (i === 'H') c[0] = c[0] + p.x\n      else if (i === 'V') c[0] = c[0] + p.y\n      else if (i === 'A') {\n        c[5] = c[5] + p.x\n        c[6] = c[6] + p.y\n      } else {\n        for (let j = 0, jl = c.length; j < jl; ++j) {\n          c[j] = c[j] + (j % 2 ? p.y : p.x)\n        }\n      }\n\n      return pathHandlers[i](c, p, p0)\n    }\n  })(mlhvqtcsaz[i].toUpperCase())\n}\n\nfunction makeAbsolut (parser) {\n  const command = parser.segment[0]\n  return pathHandlers[command](parser.segment.slice(1), parser.p, parser.p0)\n}\n\nfunction segmentComplete (parser) {\n  return parser.segment.length && parser.segment.length - 1 === segmentParameters[parser.segment[0].toUpperCase()]\n}\n\nfunction startNewSegment (parser, token) {\n  parser.inNumber && finalizeNumber(parser, false)\n  const pathLetter = isPathLetter.test(token)\n\n  if (pathLetter) {\n    parser.segment = [ token ]\n  } else {\n    const lastCommand = parser.lastCommand\n    const small = lastCommand.toLowerCase()\n    const isSmall = lastCommand === small\n    parser.segment = [ small === 'm' ? (isSmall ? 'l' : 'L') : lastCommand ]\n  }\n\n  parser.inSegment = true\n  parser.lastCommand = parser.segment[0]\n\n  return pathLetter\n}\n\nfunction finalizeNumber (parser, inNumber) {\n  if (!parser.inNumber) throw new Error('Parser Error')\n  parser.number && parser.segment.push(parseFloat(parser.number))\n  parser.inNumber = inNumber\n  parser.number = ''\n  parser.pointSeen = false\n  parser.hasExponent = false\n\n  if (segmentComplete(parser)) {\n    finalizeSegment(parser)\n  }\n}\n\nfunction finalizeSegment (parser) {\n  parser.inSegment = false\n  if (parser.absolute) {\n    parser.segment = makeAbsolut(parser)\n  }\n  parser.segments.push(parser.segment)\n}\n\nfunction isArcFlag (parser) {\n  if (!parser.segment.length) return false\n  const isArc = parser.segment[0].toUpperCase() === 'A'\n  const length = parser.segment.length\n\n  return isArc && (length === 4 || length === 5)\n}\n\nfunction isExponential (parser) {\n  return parser.lastToken.toUpperCase() === 'E'\n}\n\nexport function pathParser (d, toAbsolute = true) {\n\n  let index = 0\n  let token = ''\n  const parser = {\n    segment: [],\n    inNumber: false,\n    number: '',\n    lastToken: '',\n    inSegment: false,\n    segments: [],\n    pointSeen: false,\n    hasExponent: false,\n    absolute: toAbsolute,\n    p0: new Point(),\n    p: new Point()\n  }\n\n  while ((parser.lastToken = token, token = d.charAt(index++))) {\n    if (!parser.inSegment) {\n      if (startNewSegment(parser, token)) {\n        continue\n      }\n    }\n\n    if (token === '.') {\n      if (parser.pointSeen || parser.hasExponent) {\n        finalizeNumber(parser, false)\n        --index\n        continue\n      }\n      parser.inNumber = true\n      parser.pointSeen = true\n      parser.number += token\n      continue\n    }\n\n    if (!isNaN(parseInt(token))) {\n\n      if (parser.number === '0' || isArcFlag(parser)) {\n        parser.inNumber = true\n        parser.number = token\n        finalizeNumber(parser, true)\n        continue\n      }\n\n      parser.inNumber = true\n      parser.number += token\n      continue\n    }\n\n    if (token === ' ' || token === ',') {\n      if (parser.inNumber) {\n        finalizeNumber(parser, false)\n      }\n      continue\n    }\n\n    if (token === '-') {\n      if (parser.inNumber && !isExponential(parser)) {\n        finalizeNumber(parser, false)\n        --index\n        continue\n      }\n      parser.number += token\n      parser.inNumber = true\n      continue\n    }\n\n    if (token.toUpperCase() === 'E') {\n      parser.number += token\n      parser.hasExponent = true\n      continue\n    }\n\n    if (isPathLetter.test(token)) {\n      if (parser.inNumber) {\n        finalizeNumber(parser, false)\n      } else if (!segmentComplete(parser)) {\n        throw new Error('parser Error')\n      } else {\n        finalizeSegment(parser)\n      }\n      --index\n    }\n  }\n\n  if (parser.inNumber) {\n    finalizeNumber(parser, false)\n  }\n\n  if (parser.inSegment && segmentComplete(parser)) {\n    finalizeSegment(parser)\n  }\n\n  return parser.segments\n\n}\n", "import SVGArray from './SVGArray.js'\nimport parser from '../modules/core/parser.js'\nimport Box from './Box.js'\nimport { pathParser } from '../utils/pathParser.js'\n\nfunction arrayToString (a) {\n  let s = ''\n  for (let i = 0, il = a.length; i < il; i++) {\n    s += a[i][0]\n\n    if (a[i][1] != null) {\n      s += a[i][1]\n\n      if (a[i][2] != null) {\n        s += ' '\n        s += a[i][2]\n\n        if (a[i][3] != null) {\n          s += ' '\n          s += a[i][3]\n          s += ' '\n          s += a[i][4]\n\n          if (a[i][5] != null) {\n            s += ' '\n            s += a[i][5]\n            s += ' '\n            s += a[i][6]\n\n            if (a[i][7] != null) {\n              s += ' '\n              s += a[i][7]\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return s + ' '\n}\n\nexport default class PathArray extends SVGArray {\n  // Get bounding box of path\n  bbox () {\n    parser().path.setAttribute('d', this.toString())\n    return new Box(parser.nodes.path.getBBox())\n  }\n\n  // Move path string\n  move (x, y) {\n    // get bounding box of current situation\n    const box = this.bbox()\n\n    // get relative offset\n    x -= box.x\n    y -= box.y\n\n    if (!isNaN(x) && !isNaN(y)) {\n      // move every point\n      for (let l, i = this.length - 1; i >= 0; i--) {\n        l = this[i][0]\n\n        if (l === 'M' || l === 'L' || l === 'T') {\n          this[i][1] += x\n          this[i][2] += y\n        } else if (l === 'H') {\n          this[i][1] += x\n        } else if (l === 'V') {\n          this[i][1] += y\n        } else if (l === 'C' || l === 'S' || l === 'Q') {\n          this[i][1] += x\n          this[i][2] += y\n          this[i][3] += x\n          this[i][4] += y\n\n          if (l === 'C') {\n            this[i][5] += x\n            this[i][6] += y\n          }\n        } else if (l === 'A') {\n          this[i][6] += x\n          this[i][7] += y\n        }\n      }\n    }\n\n    return this\n  }\n\n  // Absolutize and parse path to array\n  parse (d = 'M0 0') {\n    if (Array.isArray(d)) {\n      d = Array.prototype.concat.apply([], d).toString()\n    }\n\n    return pathParser(d)\n  }\n\n  // Resize path string\n  size (width, height) {\n    // get bounding box of current situation\n    const box = this.bbox()\n    let i, l\n\n    // If the box width or height is 0 then we ignore\n    // transformations on the respective axis\n    box.width = box.width === 0 ? 1 : box.width\n    box.height = box.height === 0 ? 1 : box.height\n\n    // recalculate position of all points according to new size\n    for (i = this.length - 1; i >= 0; i--) {\n      l = this[i][0]\n\n      if (l === 'M' || l === 'L' || l === 'T') {\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\n      } else if (l === 'H') {\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\n      } else if (l === 'V') {\n        this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\n      } else if (l === 'C' || l === 'S' || l === 'Q') {\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\n        this[i][3] = ((this[i][3] - box.x) * width) / box.width + box.x\n        this[i][4] = ((this[i][4] - box.y) * height) / box.height + box.y\n\n        if (l === 'C') {\n          this[i][5] = ((this[i][5] - box.x) * width) / box.width + box.x\n          this[i][6] = ((this[i][6] - box.y) * height) / box.height + box.y\n        }\n      } else if (l === 'A') {\n        // resize radii\n        this[i][1] = (this[i][1] * width) / box.width\n        this[i][2] = (this[i][2] * height) / box.height\n\n        // move position values\n        this[i][6] = ((this[i][6] - box.x) * width) / box.width + box.x\n        this[i][7] = ((this[i][7] - box.y) * height) / box.height + box.y\n      }\n    }\n\n    return this\n  }\n\n  // Convert array to string\n  toString () {\n    return arrayToString(this)\n  }\n\n}\n", "import { Ease } from './Controller.js'\nimport {\n  delimiter,\n  numberAndUnit,\n  isPathLetter\n} from '../modules/core/regex.js'\nimport { extend } from '../utils/adopter.js'\nimport Color from '../types/Color.js'\nimport PathArray from '../types/PathArray.js'\nimport SVGArray from '../types/SVGArray.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nconst getClassForType = (value) => {\n  const type = typeof value\n\n  if (type === 'number') {\n    return SVGNumber\n  } else if (type === 'string') {\n    if (Color.isColor(value)) {\n      return Color\n    } else if (delimiter.test(value)) {\n      return isPathLetter.test(value)\n        ? PathArray\n        : SVGArray\n    } else if (numberAndUnit.test(value)) {\n      return SVGNumber\n    } else {\n      return NonMorphable\n    }\n  } else if (morphableTypes.indexOf(value.constructor) > -1) {\n    return value.constructor\n  } else if (Array.isArray(value)) {\n    return SVGArray\n  } else if (type === 'object') {\n    return ObjectBag\n  } else {\n    return NonMorphable\n  }\n}\n\nexport default class Morphable {\n  constructor (stepper) {\n    this._stepper = stepper || new Ease('-')\n\n    this._from = null\n    this._to = null\n    this._type = null\n    this._context = null\n    this._morphObj = null\n  }\n\n  at (pos) {\n    return this._morphObj.morph(this._from, this._to, pos, this._stepper, this._context)\n\n  }\n\n  done () {\n    const complete = this._context\n      .map(this._stepper.done)\n      .reduce(function (last, curr) {\n        return last && curr\n      }, true)\n    return complete\n  }\n\n  from (val) {\n    if (val == null) {\n      return this._from\n    }\n\n    this._from = this._set(val)\n    return this\n  }\n\n  stepper (stepper) {\n    if (stepper == null) return this._stepper\n    this._stepper = stepper\n    return this\n  }\n\n  to (val) {\n    if (val == null) {\n      return this._to\n    }\n\n    this._to = this._set(val)\n    return this\n  }\n\n  type (type) {\n    // getter\n    if (type == null) {\n      return this._type\n    }\n\n    // setter\n    this._type = type\n    return this\n  }\n\n  _set (value) {\n    if (!this._type) {\n      this.type(getClassForType(value))\n    }\n\n    let result = (new this._type(value))\n    if (this._type === Color) {\n      result = this._to\n        ? result[this._to[4]]()\n        : this._from\n          ? result[this._from[4]]()\n          : result\n    }\n\n    if (this._type === ObjectBag) {\n      result = this._to\n        ? result.align(this._to)\n        : this._from\n          ? result.align(this._from)\n          : result\n    }\n\n    result = result.toConsumable()\n\n    this._morphObj = this._morphObj || new this._type()\n    this._context = this._context\n      || Array.apply(null, Array(result.length))\n        .map(Object)\n        .map(function (o) {\n          o.done = true\n          return o\n        })\n    return result\n  }\n\n}\n\nexport class NonMorphable {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  init (val) {\n    val = Array.isArray(val) ? val[0] : val\n    this.value = val\n    return this\n  }\n\n  toArray () {\n    return [ this.value ]\n  }\n\n  valueOf () {\n    return this.value\n  }\n\n}\n\nexport class TransformBag {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  init (obj) {\n    if (Array.isArray(obj)) {\n      obj = {\n        scaleX: obj[0],\n        scaleY: obj[1],\n        shear: obj[2],\n        rotate: obj[3],\n        translateX: obj[4],\n        translateY: obj[5],\n        originX: obj[6],\n        originY: obj[7]\n      }\n    }\n\n    Object.assign(this, TransformBag.defaults, obj)\n    return this\n  }\n\n  toArray () {\n    const v = this\n\n    return [\n      v.scaleX,\n      v.scaleY,\n      v.shear,\n      v.rotate,\n      v.translateX,\n      v.translateY,\n      v.originX,\n      v.originY\n    ]\n  }\n}\n\nTransformBag.defaults = {\n  scaleX: 1,\n  scaleY: 1,\n  shear: 0,\n  rotate: 0,\n  translateX: 0,\n  translateY: 0,\n  originX: 0,\n  originY: 0\n}\n\nconst sortByKey = (a, b) => {\n  return (a[0] < b[0] ? -1 : (a[0] > b[0] ? 1 : 0))\n}\n\nexport class ObjectBag {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  align (other) {\n    const values = this.values\n    for (let i = 0, il = values.length; i < il; ++i) {\n\n      // If the type is the same we only need to check if the color is in the correct format\n      if (values[i + 1] === other[i + 1]) {\n        if (values[i + 1] === Color && other[i + 7] !== values[i + 7]) {\n          const space = other[i + 7]\n          const color = new Color(this.values.splice(i + 3, 5))[space]().toArray()\n          this.values.splice(i + 3, 0, ...color)\n        }\n\n        i += values[i + 2] + 2\n        continue\n      }\n\n      if (!other[i + 1]) {\n        return this\n      }\n\n      // The types differ, so we overwrite the new type with the old one\n      // And initialize it with the types default (e.g. black for color or 0 for number)\n      const defaultObject = new (other[i + 1])().toArray()\n\n      // Than we fix the values array\n      const toDelete = (values[i + 2]) + 3\n\n      values.splice(i, toDelete, other[i], other[i + 1], other[i + 2], ...defaultObject)\n\n      i += values[i + 2] + 2\n    }\n    return this\n  }\n\n  init (objOrArr) {\n    this.values = []\n\n    if (Array.isArray(objOrArr)) {\n      this.values = objOrArr.slice()\n      return\n    }\n\n    objOrArr = objOrArr || {}\n    const entries = []\n\n    for (const i in objOrArr) {\n      const Type = getClassForType(objOrArr[i])\n      const val = new Type(objOrArr[i]).toArray()\n      entries.push([ i, Type, val.length, ...val ])\n    }\n\n    entries.sort(sortByKey)\n\n    this.values = entries.reduce((last, curr) => last.concat(curr), [])\n    return this\n  }\n\n  toArray () {\n    return this.values\n  }\n\n  valueOf () {\n    const obj = {}\n    const arr = this.values\n\n    // for (var i = 0, len = arr.length; i < len; i += 2) {\n    while (arr.length) {\n      const key = arr.shift()\n      const Type = arr.shift()\n      const num = arr.shift()\n      const values = arr.splice(0, num)\n      obj[key] = new Type(values)// .valueOf()\n    }\n\n    return obj\n  }\n\n}\n\nconst morphableTypes = [\n  NonMorphable,\n  TransformBag,\n  ObjectBag\n]\n\nexport function registerMorphableType (type = []) {\n  morphableTypes.push(...[].concat(type))\n}\n\nexport function makeMorphable () {\n  extend(morphableTypes, {\n    to (val) {\n      return new Morphable()\n        .type(this.constructor)\n        .from(this.toArray())// this.valueOf())\n        .to(val)\n    },\n    fromArray (arr) {\n      this.init(arr)\n      return this\n    },\n    toConsumable () {\n      return this.toArray()\n    },\n    morph (from, to, pos, stepper, context) {\n      const mapper = function (i, index) {\n        return stepper.step(i, to[index], pos, context[index], context)\n      }\n\n      return this.fromArray(from.map(mapper))\n    }\n  })\n}\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { registerMethods } from '../utils/methods.js'\nimport PathArray from '../types/PathArray.js'\nimport Shape from './Shape.js'\n\nexport default class Path extends Shape {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('path', node), attrs)\n  }\n\n  // Get array\n  array () {\n    return this._array || (this._array = new PathArray(this.attr('d')))\n  }\n\n  // Clear array cache\n  clear () {\n    delete this._array\n    return this\n  }\n\n  // Set height of element\n  height (height) {\n    return height == null ? this.bbox().height : this.size(this.bbox().width, height)\n  }\n\n  // Move by left top corner\n  move (x, y) {\n    return this.attr('d', this.array().move(x, y))\n  }\n\n  // Plot new path\n  plot (d) {\n    return (d == null)\n      ? this.array()\n      : this.clear().attr('d', typeof d === 'string' ? d : (this._array = new PathArray(d)))\n  }\n\n  // Set element size to given width and height\n  size (width, height) {\n    const p = proportionalSize(this, width, height)\n    return this.attr('d', this.array().size(p.width, p.height))\n  }\n\n  // Set width of element\n  width (width) {\n    return width == null ? this.bbox().width : this.size(width, this.bbox().height)\n  }\n\n  // Move by left top corner over x-axis\n  x (x) {\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\n  }\n\n  // Move by left top corner over y-axis\n  y (y) {\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\n  }\n\n}\n\n// Define morphable array\nPath.prototype.MorphArray = PathArray\n\n// Add parent method\nregisterMethods({\n  Container: {\n    // Create a wrapped path element\n    path: wrapWithAttrCheck(function (d) {\n      // make sure plot is called as a setter\n      return this.put(new Path()).plot(d || new PathArray())\n    })\n  }\n})\n\nregister(Path, 'Path')\n", "import { proportionalSize } from '../../utils/utils.js'\nimport PointArray from '../../types/PointArray.js'\n\n// Get array\nexport function array () {\n  return this._array || (this._array = new PointArray(this.attr('points')))\n}\n\n// Clear array cache\nexport function clear () {\n  delete this._array\n  return this\n}\n\n// Move by left top corner\nexport function move (x, y) {\n  return this.attr('points', this.array().move(x, y))\n}\n\n// Plot new path\nexport function plot (p) {\n  return (p == null)\n    ? this.array()\n    : this.clear().attr('points', typeof p === 'string'\n      ? p\n      : (this._array = new PointArray(p)))\n}\n\n// Set element size to given width and height\nexport function size (width, height) {\n  const p = proportionalSize(this, width, height)\n  return this.attr('points', this.array().size(p.width, p.height))\n}\n", "import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport PointArray from '../types/PointArray.js'\nimport Shape from './Shape.js'\nimport * as pointed from '../modules/core/pointed.js'\nimport * as poly from '../modules/core/poly.js'\n\nexport default class Polygon extends Shape {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('polygon', node), attrs)\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create a wrapped polygon element\n    polygon: wrapWithAttrCheck(function (p) {\n      // make sure plot is called as a setter\n      return this.put(new Polygon()).plot(p || new PointArray())\n    })\n  }\n})\n\nextend(Polygon, pointed)\nextend(Polygon, poly)\nregister(Polygon, 'Polygon')\n", "import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport PointArray from '../types/PointArray.js'\nimport Shape from './Shape.js'\nimport * as pointed from '../modules/core/pointed.js'\nimport * as poly from '../modules/core/poly.js'\n\nexport default class Polyline extends Shape {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('polyline', node), attrs)\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create a wrapped polygon element\n    polyline: wrapWithAttrCheck(function (p) {\n      // make sure plot is called as a setter\n      return this.put(new Polyline()).plot(p || new PointArray())\n    })\n  }\n})\n\nextend(Polyline, pointed)\nextend(Polyline, poly)\nregister(Polyline, 'Polyline')\n", "import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { rx, ry } from '../modules/core/circled.js'\nimport Shape from './Shape.js'\n\nexport default class Rect extends Shape {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('rect', node), attrs)\n  }\n}\n\nextend(Rect, { rx, ry })\n\nregisterMethods({\n  Container: {\n    // Create a rect element\n    rect: wrapWithAttrCheck(function (width, height) {\n      return this.put(new Rect()).size(width, height)\n    })\n  }\n})\n\nregister(Rect, 'Rect')\n", "export default class Queue {\n  constructor () {\n    this._first = null\n    this._last = null\n  }\n\n  // Shows us the first item in the list\n  first () {\n    return this._first && this._first.value\n  }\n\n  // Shows us the last item in the list\n  last () {\n    return this._last && this._last.value\n  }\n\n  push (value) {\n    // An item stores an id and the provided value\n    const item = typeof value.next !== 'undefined' ? value : { value: value, next: null, prev: null }\n\n    // Deal with the queue being empty or populated\n    if (this._last) {\n      item.prev = this._last\n      this._last.next = item\n      this._last = item\n    } else {\n      this._last = item\n      this._first = item\n    }\n\n    // Return the current item\n    return item\n  }\n\n  // Removes the item that was returned from the push\n  remove (item) {\n    // Relink the previous item\n    if (item.prev) item.prev.next = item.next\n    if (item.next) item.next.prev = item.prev\n    if (item === this._last) this._last = item.prev\n    if (item === this._first) this._first = item.next\n\n    // Invalidate item\n    item.prev = null\n    item.next = null\n  }\n\n  shift () {\n    // Check if we have a value\n    const remove = this._first\n    if (!remove) return null\n\n    // If we do, remove it and relink things\n    this._first = remove.next\n    if (this._first) this._first.prev = null\n    this._last = this._first ? this._last : null\n    return remove.value\n  }\n\n}\n", "import { globals } from '../utils/window.js'\nimport Queue from './Queue.js'\n\nconst Animator = {\n  nextDraw: null,\n  frames: new Queue(),\n  timeouts: new Queue(),\n  immediates: new Queue(),\n  timer: () => globals.window.performance || globals.window.Date,\n  transforms: [],\n\n  frame (fn) {\n    // Store the node\n    const node = Animator.frames.push({ run: fn })\n\n    // Request an animation frame if we don't have one\n    if (Animator.nextDraw === null) {\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\n    }\n\n    // Return the node so we can remove it easily\n    return node\n  },\n\n  timeout (fn, delay) {\n    delay = delay || 0\n\n    // Work out when the event should fire\n    const time = Animator.timer().now() + delay\n\n    // Add the timeout to the end of the queue\n    const node = Animator.timeouts.push({ run: fn, time: time })\n\n    // Request another animation frame if we need one\n    if (Animator.nextDraw === null) {\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\n    }\n\n    return node\n  },\n\n  immediate (fn) {\n    // Add the immediate fn to the end of the queue\n    const node = Animator.immediates.push(fn)\n    // Request another animation frame if we need one\n    if (Animator.nextDraw === null) {\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\n    }\n\n    return node\n  },\n\n  cancelFrame (node) {\n    node != null && Animator.frames.remove(node)\n  },\n\n  clearTimeout (node) {\n    node != null && Animator.timeouts.remove(node)\n  },\n\n  cancelImmediate (node) {\n    node != null && Animator.immediates.remove(node)\n  },\n\n  _draw (now) {\n    // Run all the timeouts we can run, if they are not ready yet, add them\n    // to the end of the queue immediately! (bad timeouts!!! [sarcasm])\n    let nextTimeout = null\n    const lastTimeout = Animator.timeouts.last()\n    while ((nextTimeout = Animator.timeouts.shift())) {\n      // Run the timeout if its time, or push it to the end\n      if (now >= nextTimeout.time) {\n        nextTimeout.run()\n      } else {\n        Animator.timeouts.push(nextTimeout)\n      }\n\n      // If we hit the last item, we should stop shifting out more items\n      if (nextTimeout === lastTimeout) break\n    }\n\n    // Run all of the animation frames\n    let nextFrame = null\n    const lastFrame = Animator.frames.last()\n    while ((nextFrame !== lastFrame) && (nextFrame = Animator.frames.shift())) {\n      nextFrame.run(now)\n    }\n\n    let nextImmediate = null\n    while ((nextImmediate = Animator.immediates.shift())) {\n      nextImmediate()\n    }\n\n    // If we have remaining timeouts or frames, draw until we don't anymore\n    Animator.nextDraw = Animator.timeouts.first() || Animator.frames.first()\n      ? globals.window.requestAnimationFrame(Animator._draw)\n      : null\n  }\n}\n\nexport default Animator\n", "import { globals } from '../utils/window.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Animator from './Animator.js'\nimport EventTarget from '../types/EventTarget.js'\n\nconst makeSchedule = function (runnerInfo) {\n  const start = runnerInfo.start\n  const duration = runnerInfo.runner.duration()\n  const end = start + duration\n  return { start: start, duration: duration, end: end, runner: runnerInfo.runner }\n}\n\nconst defaultSource = function () {\n  const w = globals.window\n  return (w.performance || w.Date).now()\n}\n\nexport default class Timeline extends EventTarget {\n  // Construct a new timeline on the given element\n  constructor (timeSource = defaultSource) {\n    super()\n\n    this._timeSource = timeSource\n\n    // Store the timing variables\n    this._startTime = 0\n    this._speed = 1.0\n\n    // Determines how long a runner is hold in memory. Can be a dt or true/false\n    this._persist = 0\n\n    // Keep track of the running animations and their starting parameters\n    this._nextFrame = null\n    this._paused = true\n    this._runners = []\n    this._runnerIds = []\n    this._lastRunnerId = -1\n    this._time = 0\n    this._lastSourceTime = 0\n    this._lastStepTime = 0\n\n    // Make sure that step is always called in class context\n    this._step = this._stepFn.bind(this, false)\n    this._stepImmediate = this._stepFn.bind(this, true)\n  }\n\n  active () {\n    return !!this._nextFrame\n  }\n\n  finish () {\n    // Go to end and pause\n    this.time(this.getEndTimeOfTimeline() + 1)\n    return this.pause()\n  }\n\n  // Calculates the end of the timeline\n  getEndTime () {\n    const lastRunnerInfo = this.getLastRunnerInfo()\n    const lastDuration = lastRunnerInfo ? lastRunnerInfo.runner.duration() : 0\n    const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\n    return lastStartTime + lastDuration\n  }\n\n  getEndTimeOfTimeline () {\n    const endTimes = this._runners.map((i) => i.start + i.runner.duration())\n    return Math.max(0, ...endTimes)\n  }\n\n  getLastRunnerInfo () {\n    return this.getRunnerInfoById(this._lastRunnerId)\n  }\n\n  getRunnerInfoById (id) {\n    return this._runners[this._runnerIds.indexOf(id)] || null\n  }\n\n  pause () {\n    this._paused = true\n    return this._continue()\n  }\n\n  persist (dtOrForever) {\n    if (dtOrForever == null) return this._persist\n    this._persist = dtOrForever\n    return this\n  }\n\n  play () {\n    // Now make sure we are not paused and continue the animation\n    this._paused = false\n    return this.updateTime()._continue()\n  }\n\n  reverse (yes) {\n    const currentSpeed = this.speed()\n    if (yes == null) return this.speed(-currentSpeed)\n\n    const positive = Math.abs(currentSpeed)\n    return this.speed(yes ? -positive : positive)\n  }\n\n  // schedules a runner on the timeline\n  schedule (runner, delay, when) {\n    if (runner == null) {\n      return this._runners.map(makeSchedule)\n    }\n\n    // The start time for the next animation can either be given explicitly,\n    // derived from the current timeline time or it can be relative to the\n    // last start time to chain animations directly\n\n    let absoluteStartTime = 0\n    const endTime = this.getEndTime()\n    delay = delay || 0\n\n    // Work out when to start the animation\n    if (when == null || when === 'last' || when === 'after') {\n      // Take the last time and increment\n      absoluteStartTime = endTime\n    } else if (when === 'absolute' || when === 'start') {\n      absoluteStartTime = delay\n      delay = 0\n    } else if (when === 'now') {\n      absoluteStartTime = this._time\n    } else if (when === 'relative') {\n      const runnerInfo = this.getRunnerInfoById(runner.id)\n      if (runnerInfo) {\n        absoluteStartTime = runnerInfo.start + delay\n        delay = 0\n      }\n    } else if (when === 'with-last') {\n      const lastRunnerInfo = this.getLastRunnerInfo()\n      const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\n      absoluteStartTime = lastStartTime\n    } else {\n      throw new Error('Invalid value for the \"when\" parameter')\n    }\n\n    // Manage runner\n    runner.unschedule()\n    runner.timeline(this)\n\n    const persist = runner.persist()\n    const runnerInfo = {\n      persist: persist === null ? this._persist : persist,\n      start: absoluteStartTime + delay,\n      runner\n    }\n\n    this._lastRunnerId = runner.id\n\n    this._runners.push(runnerInfo)\n    this._runners.sort((a, b) => a.start - b.start)\n    this._runnerIds = this._runners.map(info => info.runner.id)\n\n    this.updateTime()._continue()\n    return this\n  }\n\n  seek (dt) {\n    return this.time(this._time + dt)\n  }\n\n  source (fn) {\n    if (fn == null) return this._timeSource\n    this._timeSource = fn\n    return this\n  }\n\n  speed (speed) {\n    if (speed == null) return this._speed\n    this._speed = speed\n    return this\n  }\n\n  stop () {\n    // Go to start and pause\n    this.time(0)\n    return this.pause()\n  }\n\n  time (time) {\n    if (time == null) return this._time\n    this._time = time\n    return this._continue(true)\n  }\n\n  // Remove the runner from this timeline\n  unschedule (runner) {\n    const index = this._runnerIds.indexOf(runner.id)\n    if (index < 0) return this\n\n    this._runners.splice(index, 1)\n    this._runnerIds.splice(index, 1)\n\n    runner.timeline(null)\n    return this\n  }\n\n  // Makes sure, that after pausing the time doesn't jump\n  updateTime () {\n    if (!this.active()) {\n      this._lastSourceTime = this._timeSource()\n    }\n    return this\n  }\n\n  // Checks if we are running and continues the animation\n  _continue (immediateStep = false) {\n    Animator.cancelFrame(this._nextFrame)\n    this._nextFrame = null\n\n    if (immediateStep) return this._stepImmediate()\n    if (this._paused) return this\n\n    this._nextFrame = Animator.frame(this._step)\n    return this\n  }\n\n  _stepFn (immediateStep = false) {\n    // Get the time delta from the last time and update the time\n    const time = this._timeSource()\n    let dtSource = time - this._lastSourceTime\n\n    if (immediateStep) dtSource = 0\n\n    const dtTime = this._speed * dtSource + (this._time - this._lastStepTime)\n    this._lastSourceTime = time\n\n    // Only update the time if we use the timeSource.\n    // Otherwise use the current time\n    if (!immediateStep) {\n      // Update the time\n      this._time += dtTime\n      this._time = this._time < 0 ? 0 : this._time\n    }\n    this._lastStepTime = this._time\n    this.fire('time', this._time)\n\n    // This is for the case that the timeline was seeked so that the time\n    // is now before the startTime of the runner. That is why we need to set\n    // the runner to position 0\n\n    // FIXME:\n    // However, resetting in insertion order leads to bugs. Considering the case,\n    // where 2 runners change the same attribute but in different times,\n    // resetting both of them will lead to the case where the later defined\n    // runner always wins the reset even if the other runner started earlier\n    // and therefore should win the attribute battle\n    // this can be solved by resetting them backwards\n    for (let k = this._runners.length; k--;) {\n      // Get and run the current runner and ignore it if its inactive\n      const runnerInfo = this._runners[k]\n      const runner = runnerInfo.runner\n\n      // Make sure that we give the actual difference\n      // between runner start time and now\n      const dtToStart = this._time - runnerInfo.start\n\n      // Dont run runner if not started yet\n      // and try to reset it\n      if (dtToStart <= 0) {\n        runner.reset()\n      }\n    }\n\n    // Run all of the runners directly\n    let runnersLeft = false\n    for (let i = 0, len = this._runners.length; i < len; i++) {\n      // Get and run the current runner and ignore it if its inactive\n      const runnerInfo = this._runners[i]\n      const runner = runnerInfo.runner\n      let dt = dtTime\n\n      // Make sure that we give the actual difference\n      // between runner start time and now\n      const dtToStart = this._time - runnerInfo.start\n\n      // Dont run runner if not started yet\n      if (dtToStart <= 0) {\n        runnersLeft = true\n        continue\n      } else if (dtToStart < dt) {\n        // Adjust dt to make sure that animation is on point\n        dt = dtToStart\n      }\n\n      if (!runner.active()) continue\n\n      // If this runner is still going, signal that we need another animation\n      // frame, otherwise, remove the completed runner\n      const finished = runner.step(dt).done\n      if (!finished) {\n        runnersLeft = true\n        // continue\n      } else if (runnerInfo.persist !== true) {\n        // runner is finished. And runner might get removed\n        const endTime = runner.duration() - runner.time() + this._time\n\n        if (endTime + runnerInfo.persist < this._time) {\n          // Delete runner and correct index\n          runner.unschedule()\n          --i\n          --len\n        }\n      }\n    }\n\n    // Basically: we continue when there are runners right from us in time\n    // when -->, and when runners are left from us when <--\n    if ((runnersLeft && !(this._speed < 0 && this._time === 0)) || (this._runnerIds.length && this._speed < 0 && this._time > 0)) {\n      this._continue()\n    } else {\n      this.pause()\n      this.fire('finished')\n    }\n\n    return this\n  }\n\n}\n\nregisterMethods({\n  Element: {\n    timeline: function (timeline) {\n      if (timeline == null) {\n        this._timeline = (this._timeline || new Timeline())\n        return this._timeline\n      } else {\n        this._timeline = timeline\n        return this\n      }\n    }\n  }\n})\n", "import { Controller, Ease, Stepper } from './Controller.js'\nimport { extend, register } from '../utils/adopter.js'\nimport { from, to } from '../modules/core/gradiented.js'\nimport { getOrigin } from '../utils/utils.js'\nimport { noop, timeline } from '../modules/core/defaults.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { rx, ry } from '../modules/core/circled.js'\nimport Animator from './Animator.js'\nimport Box from '../types/Box.js'\nimport EventTarget from '../types/EventTarget.js'\nimport Matrix from '../types/Matrix.js'\nimport Morphable, { TransformBag, ObjectBag } from './Morphable.js'\nimport Point from '../types/Point.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Timeline from './Timeline.js'\n\nexport default class Runner extends EventTarget {\n  constructor (options) {\n    super()\n\n    // Store a unique id on the runner, so that we can identify it later\n    this.id = Runner.id++\n\n    // Ensure a default value\n    options = options == null\n      ? timeline.duration\n      : options\n\n    // Ensure that we get a controller\n    options = typeof options === 'function'\n      ? new Controller(options)\n      : options\n\n    // Declare all of the variables\n    this._element = null\n    this._timeline = null\n    this.done = false\n    this._queue = []\n\n    // Work out the stepper and the duration\n    this._duration = typeof options === 'number' && options\n    this._isDeclarative = options instanceof Controller\n    this._stepper = this._isDeclarative ? options : new Ease()\n\n    // We copy the current values from the timeline because they can change\n    this._history = {}\n\n    // Store the state of the runner\n    this.enabled = true\n    this._time = 0\n    this._lastTime = 0\n\n    // At creation, the runner is in reset state\n    this._reseted = true\n\n    // Save transforms applied to this runner\n    this.transforms = new Matrix()\n    this.transformId = 1\n\n    // Looping variables\n    this._haveReversed = false\n    this._reverse = false\n    this._loopsDone = 0\n    this._swing = false\n    this._wait = 0\n    this._times = 1\n\n    this._frameId = null\n\n    // Stores how long a runner is stored after being done\n    this._persist = this._isDeclarative ? true : null\n  }\n\n  static sanitise (duration, delay, when) {\n    // Initialise the default parameters\n    let times = 1\n    let swing = false\n    let wait = 0\n    duration = duration || timeline.duration\n    delay = delay || timeline.delay\n    when = when || 'last'\n\n    // If we have an object, unpack the values\n    if (typeof duration === 'object' && !(duration instanceof Stepper)) {\n      delay = duration.delay || delay\n      when = duration.when || when\n      swing = duration.swing || swing\n      times = duration.times || times\n      wait = duration.wait || wait\n      duration = duration.duration || timeline.duration\n    }\n\n    return {\n      duration: duration,\n      delay: delay,\n      swing: swing,\n      times: times,\n      wait: wait,\n      when: when\n    }\n  }\n\n  active (enabled) {\n    if (enabled == null) return this.enabled\n    this.enabled = enabled\n    return this\n  }\n\n  /*\n  Private Methods\n  ===============\n  Methods that shouldn't be used externally\n  */\n  addTransform (transform, index) {\n    this.transforms.lmultiplyO(transform)\n    return this\n  }\n\n  after (fn) {\n    return this.on('finished', fn)\n  }\n\n  animate (duration, delay, when) {\n    const o = Runner.sanitise(duration, delay, when)\n    const runner = new Runner(o.duration)\n    if (this._timeline) runner.timeline(this._timeline)\n    if (this._element) runner.element(this._element)\n    return runner.loop(o).schedule(o.delay, o.when)\n  }\n\n  clearTransform () {\n    this.transforms = new Matrix()\n    return this\n  }\n\n  // TODO: Keep track of all transformations so that deletion is faster\n  clearTransformsFromQueue () {\n    if (!this.done || !this._timeline || !this._timeline._runnerIds.includes(this.id)) {\n      this._queue = this._queue.filter((item) => {\n        return !item.isTransform\n      })\n    }\n  }\n\n  delay (delay) {\n    return this.animate(0, delay)\n  }\n\n  duration () {\n    return this._times * (this._wait + this._duration) - this._wait\n  }\n\n  during (fn) {\n    return this.queue(null, fn)\n  }\n\n  ease (fn) {\n    this._stepper = new Ease(fn)\n    return this\n  }\n  /*\n  Runner Definitions\n  ==================\n  These methods help us define the runtime behaviour of the Runner or they\n  help us make new runners from the current runner\n  */\n\n  element (element) {\n    if (element == null) return this._element\n    this._element = element\n    element._prepareRunner()\n    return this\n  }\n\n  finish () {\n    return this.step(Infinity)\n  }\n\n  loop (times, swing, wait) {\n    // Deal with the user passing in an object\n    if (typeof times === 'object') {\n      swing = times.swing\n      wait = times.wait\n      times = times.times\n    }\n\n    // Sanitise the values and store them\n    this._times = times || Infinity\n    this._swing = swing || false\n    this._wait = wait || 0\n\n    // Allow true to be passed\n    if (this._times === true) { this._times = Infinity }\n\n    return this\n  }\n\n  loops (p) {\n    const loopDuration = this._duration + this._wait\n    if (p == null) {\n      const loopsDone = Math.floor(this._time / loopDuration)\n      const relativeTime = (this._time - loopsDone * loopDuration)\n      const position = relativeTime / this._duration\n      return Math.min(loopsDone + position, this._times)\n    }\n    const whole = Math.floor(p)\n    const partial = p % 1\n    const time = loopDuration * whole + this._duration * partial\n    return this.time(time)\n  }\n\n  persist (dtOrForever) {\n    if (dtOrForever == null) return this._persist\n    this._persist = dtOrForever\n    return this\n  }\n\n  position (p) {\n    // Get all of the variables we need\n    const x = this._time\n    const d = this._duration\n    const w = this._wait\n    const t = this._times\n    const s = this._swing\n    const r = this._reverse\n    let position\n\n    if (p == null) {\n      /*\n      This function converts a time to a position in the range [0, 1]\n      The full explanation can be found in this desmos demonstration\n        https://www.desmos.com/calculator/u4fbavgche\n      The logic is slightly simplified here because we can use booleans\n      */\n\n      // Figure out the value without thinking about the start or end time\n      const f = function (x) {\n        const swinging = s * Math.floor(x % (2 * (w + d)) / (w + d))\n        const backwards = (swinging && !r) || (!swinging && r)\n        const uncliped = Math.pow(-1, backwards) * (x % (w + d)) / d + backwards\n        const clipped = Math.max(Math.min(uncliped, 1), 0)\n        return clipped\n      }\n\n      // Figure out the value by incorporating the start time\n      const endTime = t * (w + d) - w\n      position = x <= 0\n        ? Math.round(f(1e-5))\n        : x < endTime\n          ? f(x)\n          : Math.round(f(endTime - 1e-5))\n      return position\n    }\n\n    // Work out the loops done and add the position to the loops done\n    const loopsDone = Math.floor(this.loops())\n    const swingForward = s && (loopsDone % 2 === 0)\n    const forwards = (swingForward && !r) || (r && swingForward)\n    position = loopsDone + (forwards ? p : 1 - p)\n    return this.loops(position)\n  }\n\n  progress (p) {\n    if (p == null) {\n      return Math.min(1, this._time / this.duration())\n    }\n    return this.time(p * this.duration())\n  }\n\n  /*\n  Basic Functionality\n  ===================\n  These methods allow us to attach basic functions to the runner directly\n  */\n  queue (initFn, runFn, retargetFn, isTransform) {\n    this._queue.push({\n      initialiser: initFn || noop,\n      runner: runFn || noop,\n      retarget: retargetFn,\n      isTransform: isTransform,\n      initialised: false,\n      finished: false\n    })\n    const timeline = this.timeline()\n    timeline && this.timeline()._continue()\n    return this\n  }\n\n  reset () {\n    if (this._reseted) return this\n    this.time(0)\n    this._reseted = true\n    return this\n  }\n\n  reverse (reverse) {\n    this._reverse = reverse == null ? !this._reverse : reverse\n    return this\n  }\n\n  schedule (timeline, delay, when) {\n    // The user doesn't need to pass a timeline if we already have one\n    if (!(timeline instanceof Timeline)) {\n      when = delay\n      delay = timeline\n      timeline = this.timeline()\n    }\n\n    // If there is no timeline, yell at the user...\n    if (!timeline) {\n      throw Error('Runner cannot be scheduled without timeline')\n    }\n\n    // Schedule the runner on the timeline provided\n    timeline.schedule(this, delay, when)\n    return this\n  }\n\n  step (dt) {\n    // If we are inactive, this stepper just gets skipped\n    if (!this.enabled) return this\n\n    // Update the time and get the new position\n    dt = dt == null ? 16 : dt\n    this._time += dt\n    const position = this.position()\n\n    // Figure out if we need to run the stepper in this frame\n    const running = this._lastPosition !== position && this._time >= 0\n    this._lastPosition = position\n\n    // Figure out if we just started\n    const duration = this.duration()\n    const justStarted = this._lastTime <= 0 && this._time > 0\n    const justFinished = this._lastTime < duration && this._time >= duration\n\n    this._lastTime = this._time\n    if (justStarted) {\n      this.fire('start', this)\n    }\n\n    // Work out if the runner is finished set the done flag here so animations\n    // know, that they are running in the last step (this is good for\n    // transformations which can be merged)\n    const declarative = this._isDeclarative\n    this.done = !declarative && !justFinished && this._time >= duration\n\n    // Runner is running. So its not in reset state anymore\n    this._reseted = false\n\n    let converged = false\n    // Call initialise and the run function\n    if (running || declarative) {\n      this._initialise(running)\n\n      // clear the transforms on this runner so they dont get added again and again\n      this.transforms = new Matrix()\n      converged = this._run(declarative ? dt : position)\n\n      this.fire('step', this)\n    }\n    // correct the done flag here\n    // declarative animations itself know when they converged\n    this.done = this.done || (converged && declarative)\n    if (justFinished) {\n      this.fire('finished', this)\n    }\n    return this\n  }\n\n  /*\n  Runner animation methods\n  ========================\n  Control how the animation plays\n  */\n  time (time) {\n    if (time == null) {\n      return this._time\n    }\n    const dt = time - this._time\n    this.step(dt)\n    return this\n  }\n\n  timeline (timeline) {\n    // check explicitly for undefined so we can set the timeline to null\n    if (typeof timeline === 'undefined') return this._timeline\n    this._timeline = timeline\n    return this\n  }\n\n  unschedule () {\n    const timeline = this.timeline()\n    timeline && timeline.unschedule(this)\n    return this\n  }\n\n  // Run each initialise function in the runner if required\n  _initialise (running) {\n    // If we aren't running, we shouldn't initialise when not declarative\n    if (!running && !this._isDeclarative) return\n\n    // Loop through all of the initialisers\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\n      // Get the current initialiser\n      const current = this._queue[i]\n\n      // Determine whether we need to initialise\n      const needsIt = this._isDeclarative || (!current.initialised && running)\n      running = !current.finished\n\n      // Call the initialiser if we need to\n      if (needsIt && running) {\n        current.initialiser.call(this)\n        current.initialised = true\n      }\n    }\n  }\n\n  // Save a morpher to the morpher list so that we can retarget it later\n  _rememberMorpher (method, morpher) {\n    this._history[method] = {\n      morpher: morpher,\n      caller: this._queue[this._queue.length - 1]\n    }\n\n    // We have to resume the timeline in case a controller\n    // is already done without being ever run\n    // This can happen when e.g. this is done:\n    //    anim = el.animate(new SVG.Spring)\n    // and later\n    //    anim.move(...)\n    if (this._isDeclarative) {\n      const timeline = this.timeline()\n      timeline && timeline.play()\n    }\n  }\n\n  // Try to set the target for a morpher if the morpher exists, otherwise\n  // Run each run function for the position or dt given\n  _run (positionOrDt) {\n    // Run all of the _queue directly\n    let allfinished = true\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\n      // Get the current function to run\n      const current = this._queue[i]\n\n      // Run the function if its not finished, we keep track of the finished\n      // flag for the sake of declarative _queue\n      const converged = current.runner.call(this, positionOrDt)\n      current.finished = current.finished || (converged === true)\n      allfinished = allfinished && current.finished\n    }\n\n    // We report when all of the constructors are finished\n    return allfinished\n  }\n\n  // do nothing and return false\n  _tryRetarget (method, target, extra) {\n    if (this._history[method]) {\n      // if the last method wasn't even initialised, throw it away\n      if (!this._history[method].caller.initialised) {\n        const index = this._queue.indexOf(this._history[method].caller)\n        this._queue.splice(index, 1)\n        return false\n      }\n\n      // for the case of transformations, we use the special retarget function\n      // which has access to the outer scope\n      if (this._history[method].caller.retarget) {\n        this._history[method].caller.retarget.call(this, target, extra)\n        // for everything else a simple morpher change is sufficient\n      } else {\n        this._history[method].morpher.to(target)\n      }\n\n      this._history[method].caller.finished = false\n      const timeline = this.timeline()\n      timeline && timeline.play()\n      return true\n    }\n    return false\n  }\n\n}\n\nRunner.id = 0\n\nexport class FakeRunner {\n  constructor (transforms = new Matrix(), id = -1, done = true) {\n    this.transforms = transforms\n    this.id = id\n    this.done = done\n  }\n\n  clearTransformsFromQueue () { }\n}\n\nextend([ Runner, FakeRunner ], {\n  mergeWith (runner) {\n    return new FakeRunner(\n      runner.transforms.lmultiply(this.transforms),\n      runner.id\n    )\n  }\n})\n\n// FakeRunner.emptyRunner = new FakeRunner()\n\nconst lmultiply = (last, curr) => last.lmultiplyO(curr)\nconst getRunnerTransform = (runner) => runner.transforms\n\nfunction mergeTransforms () {\n  // Find the matrix to apply to the element and apply it\n  const runners = this._transformationRunners.runners\n  const netTransform = runners\n    .map(getRunnerTransform)\n    .reduce(lmultiply, new Matrix())\n\n  this.transform(netTransform)\n\n  this._transformationRunners.merge()\n\n  if (this._transformationRunners.length() === 1) {\n    this._frameId = null\n  }\n}\n\nexport class RunnerArray {\n  constructor () {\n    this.runners = []\n    this.ids = []\n  }\n\n  add (runner) {\n    if (this.runners.includes(runner)) return\n    const id = runner.id + 1\n\n    this.runners.push(runner)\n    this.ids.push(id)\n\n    return this\n  }\n\n  clearBefore (id) {\n    const deleteCnt = this.ids.indexOf(id + 1) || 1\n    this.ids.splice(0, deleteCnt, 0)\n    this.runners.splice(0, deleteCnt, new FakeRunner())\n      .forEach((r) => r.clearTransformsFromQueue())\n    return this\n  }\n\n  edit (id, newRunner) {\n    const index = this.ids.indexOf(id + 1)\n    this.ids.splice(index, 1, id + 1)\n    this.runners.splice(index, 1, newRunner)\n    return this\n  }\n\n  getByID (id) {\n    return this.runners[this.ids.indexOf(id + 1)]\n  }\n\n  length () {\n    return this.ids.length\n  }\n\n  merge () {\n    let lastRunner = null\n    for (let i = 0; i < this.runners.length; ++i) {\n      const runner = this.runners[i]\n\n      const condition = lastRunner\n        && runner.done && lastRunner.done\n        // don't merge runner when persisted on timeline\n        && (!runner._timeline || !runner._timeline._runnerIds.includes(runner.id))\n        && (!lastRunner._timeline || !lastRunner._timeline._runnerIds.includes(lastRunner.id))\n\n      if (condition) {\n        // the +1 happens in the function\n        this.remove(runner.id)\n        const newRunner = runner.mergeWith(lastRunner)\n        this.edit(lastRunner.id, newRunner)\n        lastRunner = newRunner\n        --i\n      } else {\n        lastRunner = runner\n      }\n    }\n\n    return this\n  }\n\n  remove (id) {\n    const index = this.ids.indexOf(id + 1)\n    this.ids.splice(index, 1)\n    this.runners.splice(index, 1)\n    return this\n  }\n\n}\n\nregisterMethods({\n  Element: {\n    animate (duration, delay, when) {\n      const o = Runner.sanitise(duration, delay, when)\n      const timeline = this.timeline()\n      return new Runner(o.duration)\n        .loop(o)\n        .element(this)\n        .timeline(timeline.play())\n        .schedule(o.delay, o.when)\n    },\n\n    delay (by, when) {\n      return this.animate(0, by, when)\n    },\n\n    // this function searches for all runners on the element and deletes the ones\n    // which run before the current one. This is because absolute transformations\n    // overwrite anything anyway so there is no need to waste time computing\n    // other runners\n    _clearTransformRunnersBefore (currentRunner) {\n      this._transformationRunners.clearBefore(currentRunner.id)\n    },\n\n    _currentTransform (current) {\n      return this._transformationRunners.runners\n        // we need the equal sign here to make sure, that also transformations\n        // on the same runner which execute before the current transformation are\n        // taken into account\n        .filter((runner) => runner.id <= current.id)\n        .map(getRunnerTransform)\n        .reduce(lmultiply, new Matrix())\n    },\n\n    _addRunner (runner) {\n      this._transformationRunners.add(runner)\n\n      // Make sure that the runner merge is executed at the very end of\n      // all Animator functions. That is why we use immediate here to execute\n      // the merge right after all frames are run\n      Animator.cancelImmediate(this._frameId)\n      this._frameId = Animator.immediate(mergeTransforms.bind(this))\n    },\n\n    _prepareRunner () {\n      if (this._frameId == null) {\n        this._transformationRunners = new RunnerArray()\n          .add(new FakeRunner(new Matrix(this)))\n      }\n    }\n  }\n})\n\n// Will output the elements from array A that are not in the array B\nconst difference = (a, b) => a.filter(x => !b.includes(x))\n\nextend(Runner, {\n  attr (a, v) {\n    return this.styleAttr('attr', a, v)\n  },\n\n  // Add animatable styles\n  css (s, v) {\n    return this.styleAttr('css', s, v)\n  },\n\n  styleAttr (type, nameOrAttrs, val) {\n    if (typeof nameOrAttrs === 'string') {\n      return this.styleAttr(type, { [nameOrAttrs]: val })\n    }\n\n    let attrs = nameOrAttrs\n    if (this._tryRetarget(type, attrs)) return this\n\n    let morpher = new Morphable(this._stepper).to(attrs)\n    let keys = Object.keys(attrs)\n\n    this.queue(function () {\n      morpher = morpher.from(this.element()[type](keys))\n    }, function (pos) {\n      this.element()[type](morpher.at(pos).valueOf())\n      return morpher.done()\n    }, function (newToAttrs) {\n\n      // Check if any new keys were added\n      const newKeys = Object.keys(newToAttrs)\n      const differences = difference(newKeys, keys)\n\n      // If their are new keys, initialize them and add them to morpher\n      if (differences.length) {\n        // Get the values\n        const addedFromAttrs = this.element()[type](differences)\n\n        // Get the already initialized values\n        const oldFromAttrs = new ObjectBag(morpher.from()).valueOf()\n\n        // Merge old and new\n        Object.assign(oldFromAttrs, addedFromAttrs)\n        morpher.from(oldFromAttrs)\n      }\n\n      // Get the object from the morpher\n      const oldToAttrs = new ObjectBag(morpher.to()).valueOf()\n\n      // Merge in new attributes\n      Object.assign(oldToAttrs, newToAttrs)\n\n      // Change morpher target\n      morpher.to(oldToAttrs)\n\n      // Make sure that we save the work we did so we don't need it to do again\n      keys = newKeys\n      attrs = newToAttrs\n    })\n\n    this._rememberMorpher(type, morpher)\n    return this\n  },\n\n  zoom (level, point) {\n    if (this._tryRetarget('zoom', level, point)) return this\n\n    let morpher = new Morphable(this._stepper).to(new SVGNumber(level))\n\n    this.queue(function () {\n      morpher = morpher.from(this.element().zoom())\n    }, function (pos) {\n      this.element().zoom(morpher.at(pos), point)\n      return morpher.done()\n    }, function (newLevel, newPoint) {\n      point = newPoint\n      morpher.to(newLevel)\n    })\n\n    this._rememberMorpher('zoom', morpher)\n    return this\n  },\n\n  /**\n   ** absolute transformations\n   **/\n\n  //\n  // M v -----|-----(D M v = F v)------|----->  T v\n  //\n  // 1. define the final state (T) and decompose it (once)\n  //    t = [tx, ty, the, lam, sy, sx]\n  // 2. on every frame: pull the current state of all previous transforms\n  //    (M - m can change)\n  //   and then write this as m = [tx0, ty0, the0, lam0, sy0, sx0]\n  // 3. Find the interpolated matrix F(pos) = m + pos * (t - m)\n  //   - Note F(0) = M\n  //   - Note F(1) = T\n  // 4. Now you get the delta matrix as a result: D = F * inv(M)\n\n  transform (transforms, relative, affine) {\n    // If we have a declarative function, we should retarget it if possible\n    relative = transforms.relative || relative\n    if (this._isDeclarative && !relative && this._tryRetarget('transform', transforms)) {\n      return this\n    }\n\n    // Parse the parameters\n    const isMatrix = Matrix.isMatrixLike(transforms)\n    affine = transforms.affine != null\n      ? transforms.affine\n      : (affine != null ? affine : !isMatrix)\n\n    // Create a morpher and set its type\n    const morpher = new Morphable(this._stepper)\n      .type(affine ? TransformBag : Matrix)\n\n    let origin\n    let element\n    let current\n    let currentAngle\n    let startTransform\n\n    function setup () {\n      // make sure element and origin is defined\n      element = element || this.element()\n      origin = origin || getOrigin(transforms, element)\n\n      startTransform = new Matrix(relative ? undefined : element)\n\n      // add the runner to the element so it can merge transformations\n      element._addRunner(this)\n\n      // Deactivate all transforms that have run so far if we are absolute\n      if (!relative) {\n        element._clearTransformRunnersBefore(this)\n      }\n    }\n\n    function run (pos) {\n      // clear all other transforms before this in case something is saved\n      // on this runner. We are absolute. We dont need these!\n      if (!relative) this.clearTransform()\n\n      const { x, y } = new Point(origin).transform(element._currentTransform(this))\n\n      let target = new Matrix({ ...transforms, origin: [ x, y ] })\n      let start = this._isDeclarative && current\n        ? current\n        : startTransform\n\n      if (affine) {\n        target = target.decompose(x, y)\n        start = start.decompose(x, y)\n\n        // Get the current and target angle as it was set\n        const rTarget = target.rotate\n        const rCurrent = start.rotate\n\n        // Figure out the shortest path to rotate directly\n        const possibilities = [ rTarget - 360, rTarget, rTarget + 360 ]\n        const distances = possibilities.map(a => Math.abs(a - rCurrent))\n        const shortest = Math.min(...distances)\n        const index = distances.indexOf(shortest)\n        target.rotate = possibilities[index]\n      }\n\n      if (relative) {\n        // we have to be careful here not to overwrite the rotation\n        // with the rotate method of Matrix\n        if (!isMatrix) {\n          target.rotate = transforms.rotate || 0\n        }\n        if (this._isDeclarative && currentAngle) {\n          start.rotate = currentAngle\n        }\n      }\n\n      morpher.from(start)\n      morpher.to(target)\n\n      const affineParameters = morpher.at(pos)\n      currentAngle = affineParameters.rotate\n      current = new Matrix(affineParameters)\n\n      this.addTransform(current)\n      element._addRunner(this)\n      return morpher.done()\n    }\n\n    function retarget (newTransforms) {\n      // only get a new origin if it changed since the last call\n      if (\n        (newTransforms.origin || 'center').toString()\n        !== (transforms.origin || 'center').toString()\n      ) {\n        origin = getOrigin(newTransforms, element)\n      }\n\n      // overwrite the old transformations with the new ones\n      transforms = { ...newTransforms, origin }\n    }\n\n    this.queue(setup, run, retarget, true)\n    this._isDeclarative && this._rememberMorpher('transform', morpher)\n    return this\n  },\n\n  // Animatable x-axis\n  x (x, relative) {\n    return this._queueNumber('x', x)\n  },\n\n  // Animatable y-axis\n  y (y) {\n    return this._queueNumber('y', y)\n  },\n\n  dx (x = 0) {\n    return this._queueNumberDelta('x', x)\n  },\n\n  dy (y = 0) {\n    return this._queueNumberDelta('y', y)\n  },\n\n  dmove (x, y) {\n    return this.dx(x).dy(y)\n  },\n\n  _queueNumberDelta (method, to) {\n    to = new SVGNumber(to)\n\n    // Try to change the target if we have this method already registered\n    if (this._tryRetarget(method, to)) return this\n\n    // Make a morpher and queue the animation\n    const morpher = new Morphable(this._stepper).to(to)\n    let from = null\n    this.queue(function () {\n      from = this.element()[method]()\n      morpher.from(from)\n      morpher.to(from + to)\n    }, function (pos) {\n      this.element()[method](morpher.at(pos))\n      return morpher.done()\n    }, function (newTo) {\n      morpher.to(from + new SVGNumber(newTo))\n    })\n\n    // Register the morpher so that if it is changed again, we can retarget it\n    this._rememberMorpher(method, morpher)\n    return this\n  },\n\n  _queueObject (method, to) {\n    // Try to change the target if we have this method already registered\n    if (this._tryRetarget(method, to)) return this\n\n    // Make a morpher and queue the animation\n    const morpher = new Morphable(this._stepper).to(to)\n    this.queue(function () {\n      morpher.from(this.element()[method]())\n    }, function (pos) {\n      this.element()[method](morpher.at(pos))\n      return morpher.done()\n    })\n\n    // Register the morpher so that if it is changed again, we can retarget it\n    this._rememberMorpher(method, morpher)\n    return this\n  },\n\n  _queueNumber (method, value) {\n    return this._queueObject(method, new SVGNumber(value))\n  },\n\n  // Animatable center x-axis\n  cx (x) {\n    return this._queueNumber('cx', x)\n  },\n\n  // Animatable center y-axis\n  cy (y) {\n    return this._queueNumber('cy', y)\n  },\n\n  // Add animatable move\n  move (x, y) {\n    return this.x(x).y(y)\n  },\n\n  // Add animatable center\n  center (x, y) {\n    return this.cx(x).cy(y)\n  },\n\n  // Add animatable size\n  size (width, height) {\n    // animate bbox based size for all other elements\n    let box\n\n    if (!width || !height) {\n      box = this._element.bbox()\n    }\n\n    if (!width) {\n      width = box.width / box.height * height\n    }\n\n    if (!height) {\n      height = box.height / box.width * width\n    }\n\n    return this\n      .width(width)\n      .height(height)\n  },\n\n  // Add animatable width\n  width (width) {\n    return this._queueNumber('width', width)\n  },\n\n  // Add animatable height\n  height (height) {\n    return this._queueNumber('height', height)\n  },\n\n  // Add animatable plot\n  plot (a, b, c, d) {\n    // Lines can be plotted with 4 arguments\n    if (arguments.length === 4) {\n      return this.plot([ a, b, c, d ])\n    }\n\n    if (this._tryRetarget('plot', a)) return this\n\n    const morpher = new Morphable(this._stepper)\n      .type(this._element.MorphArray).to(a)\n\n    this.queue(function () {\n      morpher.from(this._element.array())\n    }, function (pos) {\n      this._element.plot(morpher.at(pos))\n      return morpher.done()\n    })\n\n    this._rememberMorpher('plot', morpher)\n    return this\n  },\n\n  // Add leading method\n  leading (value) {\n    return this._queueNumber('leading', value)\n  },\n\n  // Add animatable viewbox\n  viewbox (x, y, width, height) {\n    return this._queueObject('viewbox', new Box(x, y, width, height))\n  },\n\n  update (o) {\n    if (typeof o !== 'object') {\n      return this.update({\n        offset: arguments[0],\n        color: arguments[1],\n        opacity: arguments[2]\n      })\n    }\n\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\n    if (o.color != null) this.attr('stop-color', o.color)\n    if (o.offset != null) this.attr('offset', o.offset)\n\n    return this\n  }\n})\n\nextend(Runner, { rx, ry, from, to })\nregister(Runner, 'Runner')\n", "import {\n  adopt,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { svg, svgjs, xlink, xmlns } from '../modules/core/namespaces.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport Defs from './Defs.js'\nimport { globals } from '../utils/window.js'\n\nexport default class Svg extends Container {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('svg', node), attrs)\n    this.namespace()\n  }\n\n  // Creates and returns defs element\n  defs () {\n    if (!this.isRoot()) return this.root().defs()\n\n    return adopt(this.node.querySelector('defs'))\n      || this.put(new Defs())\n  }\n\n  isRoot () {\n    return !this.node.parentNode\n      || (!(this.node.parentNode instanceof globals.window.SVGElement) && this.node.parentNode.nodeName !== '#document-fragment')\n  }\n\n  // Add namespaces\n  namespace () {\n    if (!this.isRoot()) return this.root().namespace()\n    return this\n      .attr({ xmlns: svg, version: '1.1' })\n      .attr('xmlns:xlink', xlink, xmlns)\n      .attr('xmlns:svgjs', svgjs, xmlns)\n  }\n\n  removeNamespace () {\n    return this.attr({ xmlns: null, version: null })\n      .attr('xmlns:xlink', null, xmlns)\n      .attr('xmlns:svgjs', null, xmlns)\n  }\n\n  // Check if this is a root svg\n  // If not, call root() from this element\n  root () {\n    if (this.isRoot()) return this\n    return super.root()\n  }\n\n}\n\nregisterMethods({\n  Container: {\n    // Create nested svg document\n    nested: wrapWithAttrCheck(function () {\n      return this.put(new Svg())\n    })\n  }\n})\n\nregister(Svg, 'Svg', true)\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\n\nexport default class Symbol extends Container {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('symbol', node), attrs)\n  }\n}\n\nregisterMethods({\n  Container: {\n    symbol: wrapWithAttrCheck(function () {\n      return this.put(new Symbol())\n    })\n  }\n})\n\nregister(Symbol, 'Symbol')\n", "import { globals } from '../../utils/window.js'\n\n// Create plain text node\nexport function plain (text) {\n  // clear if build mode is disabled\n  if (this._build === false) {\n    this.clear()\n  }\n\n  // create text node\n  this.node.appendChild(globals.document.createTextNode(text))\n\n  return this\n}\n\n// Get length of text element\nexport function length () {\n  return this.node.getComputedTextLength()\n}\n\n// Move over x-axis\n// Text is moved by its bounding box\n// text-anchor does NOT matter\nexport function x (x, box = this.bbox()) {\n  if (x == null) {\n    return box.x\n  }\n\n  return this.attr('x', this.attr('x') + x - box.x)\n}\n\n// Move over y-axis\nexport function y (y, box = this.bbox()) {\n  if (y == null) {\n    return box.y\n  }\n\n  return this.attr('y', this.attr('y') + y - box.y)\n}\n\nexport function move (x, y, box = this.bbox()) {\n  return this.x(x, box).y(y, box)\n}\n\n// Move center over x-axis\nexport function cx (x, box = this.bbox()) {\n  if (x == null) {\n    return box.cx\n  }\n\n  return this.attr('x', this.attr('x') + x - box.cx)\n}\n\n// Move center over y-axis\nexport function cy (y, box = this.bbox()) {\n  if (y == null) {\n    return box.cy\n  }\n\n  return this.attr('y', this.attr('y') + y - box.cy)\n}\n\nexport function center (x, y, box = this.bbox()) {\n  return this.cx(x, box).cy(y, box)\n}\n\nexport function ax (x) {\n  return this.attr('x', x)\n}\n\nexport function ay (y) {\n  return this.attr('y', y)\n}\n\nexport function amove (x, y) {\n  return this.ax(x).ay(y)\n}\n\n// Enable / disable build mode\nexport function build (build) {\n  this._build = !!build\n  return this\n}\n", "import {\n  adopt,\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Shape from './Shape.js'\nimport { globals } from '../utils/window.js'\nimport * as textable from '../modules/core/textable.js'\n\nexport default class Text extends Shape {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('text', node), attrs)\n\n    this.dom.leading = new SVGNumber(1.3) // store leading value for rebuilding\n    this._rebuild = true // enable automatic updating of dy values\n    this._build = false // disable build mode for adding multiple lines\n  }\n\n  // Set / get leading\n  leading (value) {\n    // act as getter\n    if (value == null) {\n      return this.dom.leading\n    }\n\n    // act as setter\n    this.dom.leading = new SVGNumber(value)\n\n    return this.rebuild()\n  }\n\n  // Rebuild appearance type\n  rebuild (rebuild) {\n    // store new rebuild flag if given\n    if (typeof rebuild === 'boolean') {\n      this._rebuild = rebuild\n    }\n\n    // define position of all lines\n    if (this._rebuild) {\n      const self = this\n      let blankLineOffset = 0\n      const leading = this.dom.leading\n\n      this.each(function (i) {\n        const fontSize = globals.window.getComputedStyle(this.node)\n          .getPropertyValue('font-size')\n\n        const dy = leading * new SVGNumber(fontSize)\n\n        if (this.dom.newLined) {\n          this.attr('x', self.attr('x'))\n\n          if (this.text() === '\\n') {\n            blankLineOffset += dy\n          } else {\n            this.attr('dy', i ? dy + blankLineOffset : 0)\n            blankLineOffset = 0\n          }\n        }\n      })\n\n      this.fire('rebuild')\n    }\n\n    return this\n  }\n\n  // overwrite method from parent to set data properly\n  setData (o) {\n    this.dom = o\n    this.dom.leading = new SVGNumber(o.leading || 1.3)\n    return this\n  }\n\n  // Set the text content\n  text (text) {\n    // act as getter\n    if (text === undefined) {\n      const children = this.node.childNodes\n      let firstLine = 0\n      text = ''\n\n      for (let i = 0, len = children.length; i < len; ++i) {\n        // skip textPaths - they are no lines\n        if (children[i].nodeName === 'textPath') {\n          if (i === 0) firstLine = 1\n          continue\n        }\n\n        // add newline if its not the first child and newLined is set to true\n        if (i !== firstLine && children[i].nodeType !== 3 && adopt(children[i]).dom.newLined === true) {\n          text += '\\n'\n        }\n\n        // add content of this node\n        text += children[i].textContent\n      }\n\n      return text\n    }\n\n    // remove existing content\n    this.clear().build(true)\n\n    if (typeof text === 'function') {\n      // call block\n      text.call(this, this)\n    } else {\n      // store text and make sure text is not blank\n      text = (text + '').split('\\n')\n\n      // build new lines\n      for (let j = 0, jl = text.length; j < jl; j++) {\n        this.newLine(text[j])\n      }\n    }\n\n    // disable build mode and rebuild lines\n    return this.build(false).rebuild()\n  }\n\n}\n\nextend(Text, textable)\n\nregisterMethods({\n  Container: {\n    // Create text element\n    text: wrapWithAttrCheck(function (text = '') {\n      return this.put(new Text()).text(text)\n    }),\n\n    // Create plain text element\n    plain: wrapWithAttrCheck(function (text = '') {\n      return this.put(new Text()).plain(text)\n    })\n  }\n})\n\nregister(Text, 'Text')\n", "import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { globals } from '../utils/window.js'\nimport { registerMethods } from '../utils/methods.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Shape from './Shape.js'\nimport Text from './Text.js'\nimport * as textable from '../modules/core/textable.js'\n\nexport default class Tspan extends Shape {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('tspan', node), attrs)\n    this._build = false // disable build mode for adding multiple lines\n  }\n\n  // Shortcut dx\n  dx (dx) {\n    return this.attr('dx', dx)\n  }\n\n  // Shortcut dy\n  dy (dy) {\n    return this.attr('dy', dy)\n  }\n\n  // Create new line\n  newLine () {\n    // mark new line\n    this.dom.newLined = true\n\n    // fetch parent\n    const text = this.parent()\n\n    // early return in case we are not in a text element\n    if (!(text instanceof Text)) {\n      return this\n    }\n\n    const i = text.index(this)\n\n    const fontSize = globals.window.getComputedStyle(this.node)\n      .getPropertyValue('font-size')\n    const dy = text.dom.leading * new SVGNumber(fontSize)\n\n    // apply new position\n    return this.dy(i ? dy : 0).attr('x', text.x())\n  }\n\n  // Set text content\n  text (text) {\n    if (text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\n\n    if (typeof text === 'function') {\n      this.clear().build(true)\n      text.call(this, this)\n      this.build(false)\n    } else {\n      this.plain(text)\n    }\n\n    return this\n  }\n\n}\n\nextend(Tspan, textable)\n\nregisterMethods({\n  Tspan: {\n    tspan: wrapWithAttrCheck(function (text = '') {\n      const tspan = new Tspan()\n\n      // clear if build mode is disabled\n      if (!this._build) {\n        this.clear()\n      }\n\n      // add new tspan\n      return this.put(tspan).text(text)\n    })\n  },\n  Text: {\n    newLine: function (text = '') {\n      return this.tspan(text).newLine()\n    }\n  }\n})\n\nregister(Tspan, 'Tspan')\n", "import { cx, cy, height, width, x, y } from '../modules/core/circled.js'\nimport {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Shape from './Shape.js'\n\nexport default class Circle extends Shape {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('circle', node), attrs)\n  }\n\n  radius (r) {\n    return this.attr('r', r)\n  }\n\n  // Radius x value\n  rx (rx) {\n    return this.attr('r', rx)\n  }\n\n  // Alias radius x value\n  ry (ry) {\n    return this.rx(ry)\n  }\n\n  size (size) {\n    return this.radius(new SVGNumber(size).divide(2))\n  }\n}\n\nextend(Circle, { x, y, cx, cy, width, height })\n\nregisterMethods({\n  Container: {\n    // Create circle element\n    circle: wrapWithAttrCheck(function (size = 0) {\n      return this.put(new Circle())\n        .size(size)\n        .move(0, 0)\n    })\n  }\n})\n\nregister(Circle, 'Circle')\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class ClipPath extends Container {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('clipPath', node), attrs)\n  }\n\n  // Unclip all clipped elements and remove itself\n  remove () {\n    // unclip all targets\n    this.targets().forEach(function (el) {\n      el.unclip()\n    })\n\n    // remove clipPath from parent\n    return super.remove()\n  }\n\n  targets () {\n    return baseFind('svg [clip-path*=' + this.id() + ']')\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create clipping element\n    clip: wrapWithAttrCheck(function () {\n      return this.defs().put(new ClipPath())\n    })\n  },\n  Element: {\n    // Distribute clipPath to svg element\n    clipper () {\n      return this.reference('clip-path')\n    },\n\n    clipWith (element) {\n      // use given clip or create a new one\n      const clipper = element instanceof ClipPath\n        ? element\n        : this.parent().clip().add(element)\n\n      // apply mask\n      return this.attr('clip-path', 'url(#' + clipper.id() + ')')\n    },\n\n    // Unclip element\n    unclip () {\n      return this.attr('clip-path', null)\n    }\n  }\n})\n\nregister(ClipPath, 'ClipPath')\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Element from './Element.js'\n\nexport default class ForeignObject extends Element {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('foreignObject', node), attrs)\n  }\n}\n\nregisterMethods({\n  Container: {\n    foreignObject: wrapWithAttrCheck(function (width, height) {\n      return this.put(new ForeignObject()).size(width, height)\n    })\n  }\n})\n\nregister(ForeignObject, 'ForeignObject')\n", "import Matrix from '../../types/Matrix.js'\nimport Point from '../../types/Point.js'\nimport { proportionalSize } from '../../utils/utils.js'\n\nexport function dmove (dx, dy) {\n  this.children().forEach((child, i) => {\n\n    let bbox\n\n    // We have to wrap this for elements that dont have a bbox\n    // e.g. title and other descriptive elements\n    try {\n      // Get the childs bbox\n      bbox = child.bbox()\n    } catch (e) {\n      return\n    }\n\n    // Get childs matrix\n    const m = new Matrix(child)\n    // Translate childs matrix by amount and\n    // transform it back into parents space\n    const matrix = m.translate(dx, dy).transform(m.inverse())\n    // Calculate new x and y from old box\n    const p = new Point(bbox.x, bbox.y).transform(matrix)\n    // Move element\n    child.move(p.x, p.y)\n  })\n\n  return this\n}\n\nexport function dx (dx) {\n  return this.dmove(dx, 0)\n}\n\nexport function dy (dy) {\n  return this.dmove(0, dy)\n}\n\nexport function height (height, box = this.bbox()) {\n  if (height == null) return box.height\n  return this.size(box.width, height, box)\n}\n\nexport function move (x = 0, y = 0, box = this.bbox()) {\n  const dx = x - box.x\n  const dy = y - box.y\n\n  return this.dmove(dx, dy)\n}\n\nexport function size (width, height, box = this.bbox()) {\n  const p = proportionalSize(this, width, height, box)\n  const scaleX = p.width / box.width\n  const scaleY = p.height / box.height\n\n  this.children().forEach((child, i) => {\n    const o = new Point(box).transform(new Matrix(child).inverse())\n    child.scale(scaleX, scaleY, o.x, o.y)\n  })\n\n  return this\n}\n\nexport function width (width, box = this.bbox()) {\n  if (width == null) return box.width\n  return this.size(width, box.height, box)\n}\n\nexport function x (x, box = this.bbox()) {\n  if (x == null) return box.x\n  return this.move(x, box.y, box)\n}\n\nexport function y (y, box = this.bbox()) {\n  if (y == null) return box.y\n  return this.move(box.x, y, box)\n}\n", "import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\n\nexport default class G extends Container {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('g', node), attrs)\n  }\n}\n\nextend(G, containerGeometry)\n\nregisterMethods({\n  Container: {\n    // Create a group element\n    group: wrapWithAttrCheck(function () {\n      return this.put(new G())\n    })\n  }\n})\n\nregister(G, 'G')\n", "import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { xlink } from '../modules/core/namespaces.js'\nimport Container from './Container.js'\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\n\nexport default class A extends Container {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('a', node), attrs)\n  }\n\n  // Link target attribute\n  target (target) {\n    return this.attr('target', target)\n  }\n\n  // Link url\n  to (url) {\n    return this.attr('href', url, xlink)\n  }\n\n}\n\nextend(A, containerGeometry)\n\nregisterMethods({\n  Container: {\n    // Create a hyperlink element\n    link: wrapWithAttrCheck(function (url) {\n      return this.put(new A()).to(url)\n    })\n  },\n  Element: {\n    unlink () {\n      const link = this.linker()\n\n      if (!link) return this\n\n      const parent = link.parent()\n\n      if (!parent) {\n        return this.remove()\n      }\n\n      const index = parent.index(link)\n      parent.add(this, index)\n\n      link.remove()\n      return this\n    },\n    linkTo (url) {\n      // reuse old link if possible\n      let link = this.linker()\n\n      if (!link) {\n        link = new A()\n        this.wrap(link)\n      }\n\n      if (typeof url === 'function') {\n        url.call(link, link)\n      } else {\n        link.to(url)\n      }\n\n      return this\n    },\n    linker () {\n      const link = this.parent()\n      if (link && link.node.nodeName.toLowerCase() === 'a') {\n        return link\n      }\n\n      return null\n    }\n  }\n})\n\nregister(A, 'A')\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class Mask extends Container {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('mask', node), attrs)\n  }\n\n  // Unmask all masked elements and remove itself\n  remove () {\n    // unmask all targets\n    this.targets().forEach(function (el) {\n      el.unmask()\n    })\n\n    // remove mask from parent\n    return super.remove()\n  }\n\n  targets () {\n    return baseFind('svg [mask*=' + this.id() + ']')\n  }\n}\n\nregisterMethods({\n  Container: {\n    mask: wrapWithAttrCheck(function () {\n      return this.defs().put(new Mask())\n    })\n  },\n  Element: {\n    // Distribute mask to svg element\n    masker () {\n      return this.reference('mask')\n    },\n\n    maskWith (element) {\n      // use given mask or create a new one\n      const masker = element instanceof Mask\n        ? element\n        : this.parent().mask().add(element)\n\n      // apply mask\n      return this.attr('mask', 'url(#' + masker.id() + ')')\n    },\n\n    // Unmask element\n    unmask () {\n      return this.attr('mask', null)\n    }\n  }\n})\n\nregister(Mask, 'Mask')\n", "import { nodeOrNew, register } from '../utils/adopter.js'\nimport Element from './Element.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport { registerMethods } from '../utils/methods.js'\n\nexport default class Stop extends Element {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('stop', node), attrs)\n  }\n\n  // add color stops\n  update (o) {\n    if (typeof o === 'number' || o instanceof SVGNumber) {\n      o = {\n        offset: arguments[0],\n        color: arguments[1],\n        opacity: arguments[2]\n      }\n    }\n\n    // set attributes\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\n    if (o.color != null) this.attr('stop-color', o.color)\n    if (o.offset != null) this.attr('offset', new SVGNumber(o.offset))\n\n    return this\n  }\n}\n\nregisterMethods({\n  Gradient: {\n    // Add a color stop\n    stop: function (offset, color, opacity) {\n      return this.put(new Stop()).update(offset, color, opacity)\n    }\n  }\n})\n\nregister(Stop, 'Stop')\n", "import { nodeOrNew, register } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { unCamelCase } from '../utils/utils.js'\nimport Element from './Element.js'\n\nfunction cssRule (selector, rule) {\n  if (!selector) return ''\n  if (!rule) return selector\n\n  let ret = selector + '{'\n\n  for (const i in rule) {\n    ret += unCamelCase(i) + ':' + rule[i] + ';'\n  }\n\n  ret += '}'\n\n  return ret\n}\n\nexport default class Style extends Element {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('style', node), attrs)\n  }\n\n  addText (w = '') {\n    this.node.textContent += w\n    return this\n  }\n\n  font (name, src, params = {}) {\n    return this.rule('@font-face', {\n      fontFamily: name,\n      src: src,\n      ...params\n    })\n  }\n\n  rule (selector, obj) {\n    return this.addText(cssRule(selector, obj))\n  }\n}\n\nregisterMethods('Dom', {\n  style (selector, obj) {\n    return this.put(new Style()).rule(selector, obj)\n  },\n  fontface  (name, src, params) {\n    return this.put(new Style()).font(name, src, params)\n  }\n})\n\nregister(Style, 'Style')\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { xlink } from '../modules/core/namespaces.js'\nimport Path from './Path.js'\nimport PathArray from '../types/PathArray.js'\nimport Text from './Text.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class TextPath extends Text {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('textPath', node), attrs)\n  }\n\n  // return the array of the path track element\n  array () {\n    const track = this.track()\n\n    return track ? track.array() : null\n  }\n\n  // Plot path if any\n  plot (d) {\n    const track = this.track()\n    let pathArray = null\n\n    if (track) {\n      pathArray = track.plot(d)\n    }\n\n    return (d == null) ? pathArray : this\n  }\n\n  // Get the path element\n  track () {\n    return this.reference('href')\n  }\n}\n\nregisterMethods({\n  Container: {\n    textPath: wrapWithAttrCheck(function (text, path) {\n      // Convert text to instance if needed\n      if (!(text instanceof Text)) {\n        text = this.text(text)\n      }\n\n      return text.path(path)\n    })\n  },\n  Text: {\n    // Create path for text to run on\n    path: wrapWithAttrCheck(function (track, importNodes = true) {\n      const textPath = new TextPath()\n\n      // if track is a path, reuse it\n      if (!(track instanceof Path)) {\n        // create path element\n        track = this.defs().path(track)\n      }\n\n      // link textPath to path and add content\n      textPath.attr('href', '#' + track, xlink)\n\n      // Transplant all nodes from text to textPath\n      let node\n      if (importNodes) {\n        while ((node = this.node.firstChild)) {\n          textPath.node.appendChild(node)\n        }\n      }\n\n      // add textPath element as child node and return textPath\n      return this.put(textPath)\n    }),\n\n    // Get the textPath children\n    textPath () {\n      return this.findOne('textPath')\n    }\n  },\n  Path: {\n    // creates a textPath from this path\n    text: wrapWithAttrCheck(function (text) {\n      // Convert text to instance if needed\n      if (!(text instanceof Text)) {\n        text = new Text().addTo(this.parent()).text(text)\n      }\n\n      // Create textPath from text and path and return\n      return text.path(this)\n    }),\n\n    targets () {\n      return baseFind('svg textPath').filter((node) => {\n        return (node.attr('href') || '').includes(this.id())\n      })\n\n      // Does not work in IE11. Use when IE support is dropped\n      // return baseFind('svg textPath[*|href*=' + this.id() + ']')\n    }\n  }\n})\n\nTextPath.prototype.MorphArray = PathArray\nregister(TextPath, 'TextPath')\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { xlink } from '../modules/core/namespaces.js'\nimport Shape from './Shape.js'\n\nexport default class Use extends Shape {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('use', node), attrs)\n  }\n\n  // Use element as a reference\n  use (element, file) {\n    // Set lined element\n    return this.attr('href', (file || '') + '#' + element, xlink)\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create a use element\n    use: wrapWithAttrCheck(function (element, file) {\n      return this.put(new Use()).use(element, file)\n    })\n  }\n})\n\nregister(Use, 'Use')\n", "/* Optional Modules */\nimport './modules/optional/arrange.js'\nimport './modules/optional/class.js'\nimport './modules/optional/css.js'\nimport './modules/optional/data.js'\nimport './modules/optional/memory.js'\nimport './modules/optional/sugar.js'\nimport './modules/optional/transform.js'\n\nimport { extend, makeInstance } from './utils/adopter.js'\nimport { getMethodNames, getMethodsFor } from './utils/methods.js'\nimport Box from './types/Box.js'\nimport Color from './types/Color.js'\nimport Container from './elements/Container.js'\nimport Defs from './elements/Defs.js'\nimport Dom from './elements/Dom.js'\nimport Element from './elements/Element.js'\nimport Ellipse from './elements/Ellipse.js'\nimport EventTarget from './types/EventTarget.js'\nimport Fragment from './elements/Fragment.js'\nimport Gradient from './elements/Gradient.js'\nimport Image from './elements/Image.js'\nimport Line from './elements/Line.js'\nimport List from './types/List.js'\nimport Marker from './elements/Marker.js'\nimport Matrix from './types/Matrix.js'\nimport Morphable, {\n  NonMorphable,\n  ObjectBag,\n  TransformBag,\n  makeMorphable,\n  registerMorphableType\n} from './animation/Morphable.js'\nimport Path from './elements/Path.js'\nimport PathArray from './types/PathArray.js'\nimport Pattern from './elements/Pattern.js'\nimport PointArray from './types/PointArray.js'\nimport Point from './types/Point.js'\nimport Polygon from './elements/Polygon.js'\nimport Polyline from './elements/Polyline.js'\nimport Rect from './elements/Rect.js'\nimport Runner from './animation/Runner.js'\nimport SVGArray from './types/SVGArray.js'\nimport SVGNumber from './types/SVGNumber.js'\nimport Shape from './elements/Shape.js'\nimport Svg from './elements/Svg.js'\nimport Symbol from './elements/Symbol.js'\nimport Text from './elements/Text.js'\nimport Tspan from './elements/Tspan.js'\nimport * as defaults from './modules/core/defaults.js'\nimport * as utils from './utils/utils.js'\nimport * as namespaces from './modules/core/namespaces.js'\nimport * as regex from './modules/core/regex.js'\n\nexport {\n  Morphable,\n  registerMorphableType,\n  makeMorphable,\n  TransformBag,\n  ObjectBag,\n  NonMorphable\n}\n\nexport { defaults, utils, namespaces, regex }\nexport const SVG = makeInstance\nexport { default as parser } from './modules/core/parser.js'\nexport { default as find } from './modules/core/selector.js'\nexport * from './modules/core/event.js'\nexport * from './utils/adopter.js'\nexport {\n  getWindow,\n  registerWindow,\n  restoreWindow,\n  saveWindow,\n  withWindow\n} from './utils/window.js'\n\n/* Animation Modules */\nexport { default as Animator } from './animation/Animator.js'\nexport { Controller, Ease, PID, Spring, easing } from './animation/Controller.js'\nexport { default as Queue } from './animation/Queue.js'\nexport { default as Runner } from './animation/Runner.js'\nexport { default as Timeline } from './animation/Timeline.js'\n\n/* Types */\nexport { default as Array } from './types/SVGArray.js'\nexport { default as Box } from './types/Box.js'\nexport { default as Color } from './types/Color.js'\nexport { default as EventTarget } from './types/EventTarget.js'\nexport { default as Matrix } from './types/Matrix.js'\nexport { default as Number } from './types/SVGNumber.js'\nexport { default as PathArray } from './types/PathArray.js'\nexport { default as Point } from './types/Point.js'\nexport { default as PointArray } from './types/PointArray.js'\nexport { default as List } from './types/List.js'\n\n/* Elements */\nexport { default as Circle } from './elements/Circle.js'\nexport { default as ClipPath } from './elements/ClipPath.js'\nexport { default as Container } from './elements/Container.js'\nexport { default as Defs } from './elements/Defs.js'\nexport { default as Dom } from './elements/Dom.js'\nexport { default as Element } from './elements/Element.js'\nexport { default as Ellipse } from './elements/Ellipse.js'\nexport { default as ForeignObject } from './elements/ForeignObject.js'\nexport { default as Fragment } from './elements/Fragment.js'\nexport { default as Gradient } from './elements/Gradient.js'\nexport { default as G } from './elements/G.js'\nexport { default as A } from './elements/A.js'\nexport { default as Image } from './elements/Image.js'\nexport { default as Line } from './elements/Line.js'\nexport { default as Marker } from './elements/Marker.js'\nexport { default as Mask } from './elements/Mask.js'\nexport { default as Path } from './elements/Path.js'\nexport { default as Pattern } from './elements/Pattern.js'\nexport { default as Polygon } from './elements/Polygon.js'\nexport { default as Polyline } from './elements/Polyline.js'\nexport { default as Rect } from './elements/Rect.js'\nexport { default as Shape } from './elements/Shape.js'\nexport { default as Stop } from './elements/Stop.js'\nexport { default as Style } from './elements/Style.js'\nexport { default as Svg } from './elements/Svg.js'\nexport { default as Symbol } from './elements/Symbol.js'\nexport { default as Text } from './elements/Text.js'\nexport { default as TextPath } from './elements/TextPath.js'\nexport { default as Tspan } from './elements/Tspan.js'\nexport { default as Use } from './elements/Use.js'\n\nextend([\n  Svg,\n  Symbol,\n  Image,\n  Pattern,\n  Marker\n], getMethodsFor('viewbox'))\n\nextend([\n  Line,\n  Polyline,\n  Polygon,\n  Path\n], getMethodsFor('marker'))\n\nextend(Text, getMethodsFor('Text'))\nextend(Path, getMethodsFor('Path'))\n\nextend(Defs, getMethodsFor('Defs'))\n\nextend([\n  Text,\n  Tspan\n], getMethodsFor('Tspan'))\n\nextend([\n  Rect,\n  Ellipse,\n  Gradient,\n  Runner\n], getMethodsFor('radius'))\n\nextend(EventTarget, getMethodsFor('EventTarget'))\nextend(Dom, getMethodsFor('Dom'))\nextend(Element, getMethodsFor('Element'))\nextend(Shape, getMethodsFor('Shape'))\nextend([ Container, Fragment ], getMethodsFor('Container'))\nextend(Gradient, getMethodsFor('Gradient'))\n\nextend(Runner, getMethodsFor('Runner'))\n\nList.extend(getMethodNames())\n\nregisterMorphableType([\n  SVGNumber,\n  Color,\n  Box,\n  Matrix,\n  SVGArray,\n  PointArray,\n  PathArray,\n  Point\n])\n\nmakeMorphable()\n", "//  默认主题\r\nexport default {\r\n  // 节点内边距\r\n  paddingX: 15,\r\n  paddingY: 5,\r\n  // 图片显示的最大宽度\r\n  imgMaxWidth: 200,\r\n  // 图片显示的最大高度\r\n  imgMaxHeight: 100,\r\n  // icon的大小\r\n  iconSize: 20,\r\n  // 连线的粗细\r\n  lineWidth: 1,\r\n  // 连线的颜色\r\n  lineColor: '#549688',\r\n  // 连线样式\r\n  lineDasharray: 'none',\r\n  // 连线是否开启流动效果，仅在虚线时有效（需要注册LineFlow插件）\r\n  lineFlow: false,\r\n  // 流动效果一个周期的时间，单位：s\r\n  lineFlowDuration: 1,\r\n  // 流动方向是否是从父节点到子节点\r\n  lineFlowForward: true,\r\n  // 连线风格\r\n  lineStyle: 'straight', // 曲线（curve）【仅支持logicalStructure、mindMap、verticalTimeline三种结构】、直线（straight）、直连（direct）【仅支持logicalStructure、mindMap、organizationStructure、verticalTimeline四种结构】\r\n  // 曲线连接时，根节点和其他节点的连接线样式保持统一，默认根节点为 ( 型，其他节点为 { 型，设为true后，都为 { 型。仅支持logicalStructure、mindMap两种结构\r\n  rootLineKeepSameInCurve: true,\r\n  // 曲线连接时，根节点和其他节点的连线起始位置保持统一，默认根节点的连线起始位置在节点中心，其他节点在节点右侧（或左侧），如果该配置设为true，那么根节点的连线起始位置也会在节点右侧（或左侧）\r\n  rootLineStartPositionKeepSameInCurve: false,\r\n  // 直线连接(straight)时，连线的圆角大小，设置为0代表没有圆角，仅支持logicalStructure、mindMap、verticalTimeline三种结构\r\n  lineRadius: 5,\r\n  // 连线是否显示标记，目前只支持箭头\r\n  showLineMarker: false,\r\n  // 概要连线的粗细\r\n  generalizationLineWidth: 1,\r\n  // 概要连线的颜色\r\n  generalizationLineColor: '#549688',\r\n  // 概要曲线距节点的距离\r\n  generalizationLineMargin: 0,\r\n  // 概要节点距节点的距离\r\n  generalizationNodeMargin: 20,\r\n  // 关联线默认状态的粗细\r\n  associativeLineWidth: 2,\r\n  // 关联线默认状态的颜色\r\n  associativeLineColor: 'rgb(51, 51, 51)',\r\n  // 关联线激活状态的粗细\r\n  associativeLineActiveWidth: 8,\r\n  // 关联线激活状态的颜色\r\n  associativeLineActiveColor: 'rgba(2, 167, 240, 1)',\r\n  // 关联线样式\r\n  associativeLineDasharray: [6, 4],\r\n  // 关联线文字颜色\r\n  associativeLineTextColor: 'rgb(51, 51, 51)',\r\n  // 关联线文字大小\r\n  associativeLineTextFontSize: 14,\r\n  // 关联线文字行高\r\n  associativeLineTextLineHeight: 1.2,\r\n  // 关联线文字字体\r\n  associativeLineTextFontFamily: '微软雅黑, Microsoft YaHei',\r\n  // 背景颜色\r\n  backgroundColor: '#fafafa',\r\n  // 背景图片\r\n  backgroundImage: 'none',\r\n  // 背景重复\r\n  backgroundRepeat: 'no-repeat',\r\n  // 设置背景图像的起始位置\r\n  backgroundPosition: 'center center',\r\n  // 设置背景图片大小\r\n  backgroundSize: 'cover',\r\n  // 节点使用只有底边横线的样式，仅支持logicalStructure、mindMap、catalogOrganization、organizationStructure四种结构\r\n  nodeUseLineStyle: false,\r\n  // 根节点样式\r\n  root: {\r\n    shape: 'rectangle',\r\n    fillColor: '#549688',\r\n    fontFamily: '微软雅黑, Microsoft YaHei',\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    fontStyle: 'normal',\r\n    borderColor: 'transparent',\r\n    borderWidth: 0,\r\n    borderDasharray: 'none',\r\n    borderRadius: 5,\r\n    textDecoration: 'none',\r\n    gradientStyle: false,\r\n    startColor: '#549688',\r\n    endColor: '#fff',\r\n    startDir: [0, 0],\r\n    endDir: [1, 0],\r\n    // 连线标记的位置，start（头部）、end（尾部），该配置在showLineMarker配置为true时生效\r\n    lineMarkerDir: 'end',\r\n    // 节点鼠标hover和激活时显示的矩形边框的颜色，主题里不设置，默认会取hoverRectColor实例化选项的值\r\n    hoverRectColor: '',\r\n    // 点鼠标hover和激活时显示的矩形边框的圆角大小\r\n    hoverRectRadius: 5,\r\n    // 文本对齐\r\n    textAlign: 'left',// right、center、justify、left\r\n    // 图片放置位置，相对于整个文本内容\r\n    imgPlacement: 'top', // left、right、bottom、top\r\n    // 标签放置位置\r\n    tagPlacement: 'right' // right（文字右侧）、bottom（文本内容下方）\r\n    // 下列样式也支持给节点设置，用于覆盖最外层的设置\r\n    // paddingX,\r\n    // paddingY,\r\n    // lineWidth,\r\n    // lineColor,\r\n    // lineDasharray,\r\n    // lineFlow,\r\n    // lineFlowDuration,\r\n    // lineFlowForward\r\n    // 关联线的所有样式\r\n  },\r\n  // 二级节点样式\r\n  second: {\r\n    shape: 'rectangle',\r\n    marginX: 100,\r\n    marginY: 40,\r\n    fillColor: '#fff',\r\n    fontFamily: '微软雅黑, Microsoft YaHei',\r\n    color: '#565656',\r\n    fontSize: 16,\r\n    fontWeight: 'normal',\r\n    fontStyle: 'normal',\r\n    borderColor: '#549688',\r\n    borderWidth: 1,\r\n    borderDasharray: 'none',\r\n    borderRadius: 5,\r\n    textDecoration: 'none',\r\n    gradientStyle: false,\r\n    startColor: '#549688',\r\n    endColor: '#fff',\r\n    startDir: [0, 0],\r\n    endDir: [1, 0],\r\n    lineMarkerDir: 'end',\r\n    hoverRectColor: '',\r\n    hoverRectRadius: 5,\r\n    textAlign: 'left',\r\n    imgPlacement: 'top',\r\n    tagPlacement: 'right'\r\n  },\r\n  // 三级及以下节点样式\r\n  node: {\r\n    shape: 'rectangle',\r\n    marginX: 50,\r\n    marginY: 0,\r\n    fillColor: 'transparent',\r\n    fontFamily: '微软雅黑, Microsoft YaHei',\r\n    color: '#6a6d6c',\r\n    fontSize: 14,\r\n    fontWeight: 'normal',\r\n    fontStyle: 'normal',\r\n    borderColor: 'transparent',\r\n    borderWidth: 0,\r\n    borderRadius: 5,\r\n    borderDasharray: 'none',\r\n    textDecoration: 'none',\r\n    gradientStyle: false,\r\n    startColor: '#549688',\r\n    endColor: '#fff',\r\n    startDir: [0, 0],\r\n    endDir: [1, 0],\r\n    lineMarkerDir: 'end',\r\n    hoverRectColor: '',\r\n    hoverRectRadius: 5,\r\n    textAlign: 'left',\r\n    imgPlacement: 'top',\r\n    tagPlacement: 'right'\r\n  },\r\n  // 概要节点样式\r\n  generalization: {\r\n    shape: 'rectangle',\r\n    marginX: 100,\r\n    marginY: 40,\r\n    fillColor: '#fff',\r\n    fontFamily: '微软雅黑, Microsoft YaHei',\r\n    color: '#565656',\r\n    fontSize: 16,\r\n    fontWeight: 'normal',\r\n    fontStyle: 'normal',\r\n    borderColor: '#549688',\r\n    borderWidth: 1,\r\n    borderDasharray: 'none',\r\n    borderRadius: 5,\r\n    textDecoration: 'none',\r\n    gradientStyle: false,\r\n    startColor: '#549688',\r\n    endColor: '#fff',\r\n    startDir: [0, 0],\r\n    endDir: [1, 0],\r\n    hoverRectColor: '',\r\n    hoverRectRadius: 5,\r\n    textAlign: 'left',\r\n    imgPlacement: 'top',\r\n    tagPlacement: 'right'\r\n  }\r\n}\r\n\r\n// 检测主题配置是否是节点大小无关的\r\nconst nodeSizeIndependenceList = [\r\n  'lineWidth',\r\n  'lineColor',\r\n  'lineDasharray',\r\n  'lineStyle',\r\n  'generalizationLineWidth',\r\n  'generalizationLineColor',\r\n  'associativeLineWidth',\r\n  'associativeLineColor',\r\n  'associativeLineActiveWidth',\r\n  'associativeLineActiveColor',\r\n  'associativeLineTextColor',\r\n  'associativeLineTextFontSize',\r\n  'associativeLineTextLineHeight',\r\n  'associativeLineTextFontFamily',\r\n  'backgroundColor',\r\n  'backgroundImage',\r\n  'backgroundRepeat',\r\n  'backgroundPosition',\r\n  'backgroundSize',\r\n  'rootLineKeepSameInCurve',\r\n  'rootLineStartPositionKeepSameInCurve',\r\n  'showLineMarker',\r\n  'lineRadius',\r\n  'hoverRectColor',\r\n  'hoverRectRadius',\r\n  'lineFlow',\r\n  'lineFlowDuration',\r\n  'lineFlowForward',\r\n  'textAlign'\r\n]\r\nexport const checkIsNodeSizeIndependenceConfig = config => {\r\n  let keys = Object.keys(config)\r\n  for (let i = 0; i < keys.length; i++) {\r\n    if (\r\n      !nodeSizeIndependenceList.find(item => {\r\n        return item === keys[i]\r\n      })\r\n    ) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\n// 连线的样式\r\nexport const lineStyleProps = [\r\n  'lineColor',\r\n  'lineDasharray',\r\n  'lineWidth',\r\n  'lineMarkerDir',\r\n  'lineFlow',\r\n  'lineFlowDuration',\r\n  'lineFlowForward'\r\n]\r\n", "import { v4 as uuidv4 } from 'uuid'\r\nimport {\r\n  nodeDataNoStylePropList,\r\n  selfCloseTagList,\r\n  richTextSupportStyleList\r\n} from '../constants/constant'\r\nimport MersenneTwister from './mersenneTwister'\r\nimport { ForeignObject } from '@svgdotjs/svg.js'\r\nimport merge from 'deepmerge'\r\nimport { lineStyleProps } from '../theme/default'\r\n\r\n//  深度优先遍历树\r\nexport const walk = (\r\n  root,\r\n  parent,\r\n  beforeCallback,\r\n  afterCallback,\r\n  isRoot,\r\n  layerIndex = 0,\r\n  index = 0,\r\n  ancestors = []\r\n) => {\r\n  let stop = false\r\n  if (beforeCallback) {\r\n    stop = beforeCallback(root, parent, isRoot, layerIndex, index, ancestors)\r\n  }\r\n  if (!stop && root.children && root.children.length > 0) {\r\n    let _layerIndex = layerIndex + 1\r\n    root.children.forEach((node, nodeIndex) => {\r\n      walk(\r\n        node,\r\n        root,\r\n        beforeCallback,\r\n        afterCallback,\r\n        false,\r\n        _layerIndex,\r\n        nodeIndex,\r\n        [...ancestors, root]\r\n      )\r\n    })\r\n  }\r\n  afterCallback &&\r\n    afterCallback(root, parent, isRoot, layerIndex, index, ancestors)\r\n}\r\n\r\n//  广度优先遍历树\r\nexport const bfsWalk = (root, callback) => {\r\n  let stack = [root]\r\n  let isStop = false\r\n  if (callback(root, null) === 'stop') {\r\n    isStop = true\r\n  }\r\n  while (stack.length) {\r\n    if (isStop) {\r\n      break\r\n    }\r\n    let cur = stack.shift()\r\n    if (cur.children && cur.children.length) {\r\n      cur.children.forEach(item => {\r\n        if (isStop) return\r\n        stack.push(item)\r\n        if (callback(item, cur) === 'stop') {\r\n          isStop = true\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n// 按原比例缩放图片\r\nexport const resizeImgSizeByOriginRatio = (\r\n  width,\r\n  height,\r\n  newWidth,\r\n  newHeight\r\n) => {\r\n  let arr = []\r\n  let nRatio = width / height\r\n  let mRatio = newWidth / newHeight\r\n  if (nRatio > mRatio) {\r\n    // 固定宽度\r\n    arr = [newWidth, newWidth / nRatio]\r\n  } else {\r\n    // 固定高度\r\n    arr = [nRatio * newHeight, newHeight]\r\n  }\r\n  return arr\r\n}\r\n\r\n//  缩放图片尺寸\r\nexport const resizeImgSize = (width, height, maxWidth, maxHeight) => {\r\n  let nRatio = width / height\r\n  let arr = []\r\n  if (maxWidth && maxHeight) {\r\n    if (width <= maxWidth && height <= maxHeight) {\r\n      arr = [width, height]\r\n    } else {\r\n      let mRatio = maxWidth / maxHeight\r\n      if (nRatio > mRatio) {\r\n        // 固定宽度\r\n        arr = [maxWidth, maxWidth / nRatio]\r\n      } else {\r\n        // 固定高度\r\n        arr = [nRatio * maxHeight, maxHeight]\r\n      }\r\n    }\r\n  } else if (maxWidth) {\r\n    if (width <= maxWidth) {\r\n      arr = [width, height]\r\n    } else {\r\n      arr = [maxWidth, maxWidth / nRatio]\r\n    }\r\n  } else if (maxHeight) {\r\n    if (height <= maxHeight) {\r\n      arr = [width, height]\r\n    } else {\r\n      arr = [nRatio * maxHeight, maxHeight]\r\n    }\r\n  }\r\n  return arr\r\n}\r\n\r\n//  缩放图片\r\nexport const resizeImg = (imgUrl, maxWidth, maxHeight) => {\r\n  return new Promise((resolve, reject) => {\r\n    let img = new Image()\r\n    img.src = imgUrl\r\n    img.onload = () => {\r\n      let arr = resizeImgSize(\r\n        img.naturalWidth,\r\n        img.naturalHeight,\r\n        maxWidth,\r\n        maxHeight\r\n      )\r\n      resolve(arr)\r\n    }\r\n    img.onerror = e => {\r\n      reject(e)\r\n    }\r\n  })\r\n}\r\n\r\n//  从头html结构字符串里获取带换行符的字符串\r\nexport const getStrWithBrFromHtml = str => {\r\n  str = str.replace(/<br>/gim, '\\n')\r\n  let el = document.createElement('div')\r\n  el.innerHTML = str\r\n  str = el.textContent\r\n  return str\r\n}\r\n\r\n//  极简的深拷贝\r\nexport const simpleDeepClone = data => {\r\n  try {\r\n    return JSON.parse(JSON.stringify(data))\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n//  复制渲染树数据\r\nexport const copyRenderTree = (tree, root, removeActiveState = false) => {\r\n  tree.data = simpleDeepClone(root.data)\r\n  if (removeActiveState) {\r\n    tree.data.isActive = false\r\n    const generalizationList = formatGetNodeGeneralization(tree.data)\r\n    generalizationList.forEach(item => {\r\n      item.isActive = false\r\n    })\r\n  }\r\n  tree.children = []\r\n  if (root.children && root.children.length > 0) {\r\n    root.children.forEach((item, index) => {\r\n      tree.children[index] = copyRenderTree({}, item, removeActiveState)\r\n    })\r\n  }\r\n  // data、children外的其他字段\r\n  Object.keys(root).forEach(key => {\r\n    if (!['data', 'children'].includes(key) && !/^_/.test(key)) {\r\n      tree[key] = root[key]\r\n    }\r\n  })\r\n  return tree\r\n}\r\n\r\n//  复制节点树数据\r\nexport const copyNodeTree = (\r\n  tree,\r\n  root,\r\n  removeActiveState = false,\r\n  removeId = true\r\n) => {\r\n  const rootData = root.nodeData ? root.nodeData : root\r\n  tree.data = simpleDeepClone(rootData.data)\r\n  // 移除节点uid\r\n  if (removeId) {\r\n    delete tree.data.uid\r\n  } else if (!tree.data.uid) {\r\n    // 否则保留或生成\r\n    tree.data.uid = createUid()\r\n  }\r\n  if (removeActiveState) {\r\n    tree.data.isActive = false\r\n  }\r\n  tree.children = []\r\n  if (root.children && root.children.length > 0) {\r\n    root.children.forEach((item, index) => {\r\n      tree.children[index] = copyNodeTree({}, item, removeActiveState, removeId)\r\n    })\r\n  } else if (\r\n    root.nodeData &&\r\n    root.nodeData.children &&\r\n    root.nodeData.children.length > 0\r\n  ) {\r\n    root.nodeData.children.forEach((item, index) => {\r\n      tree.children[index] = copyNodeTree({}, item, removeActiveState, removeId)\r\n    })\r\n  }\r\n  // data、children外的其他字段\r\n  Object.keys(rootData).forEach(key => {\r\n    if (!['data', 'children'].includes(key) && !/^_/.test(key)) {\r\n      tree[key] = rootData[key]\r\n    }\r\n  })\r\n  return tree\r\n}\r\n\r\n//  图片转成dataURL\r\nexport const imgToDataUrl = (src, returnBlob = false) => {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image()\r\n    // 跨域图片需要添加这个属性，否则画布被污染了无法导出图片\r\n    img.setAttribute('crossOrigin', 'anonymous')\r\n    img.onload = () => {\r\n      try {\r\n        let canvas = document.createElement('canvas')\r\n        canvas.width = img.width\r\n        canvas.height = img.height\r\n        let ctx = canvas.getContext('2d')\r\n        // 图片绘制到canvas里\r\n        ctx.drawImage(img, 0, 0, img.width, img.height)\r\n        if (returnBlob) {\r\n          canvas.toBlob(blob => {\r\n            resolve(blob)\r\n          })\r\n        } else {\r\n          resolve(canvas.toDataURL())\r\n        }\r\n      } catch (e) {\r\n        reject(e)\r\n      }\r\n    }\r\n    img.onerror = e => {\r\n      reject(e)\r\n    }\r\n    img.src = src\r\n  })\r\n}\r\n\r\n// 解析dataUrl\r\nexport const parseDataUrl = data => {\r\n  if (!/^data:/.test(data)) return data\r\n  let [typeStr, base64] = data.split(',')\r\n  let res = /^data:[^/]+\\/([^;]+);/.exec(typeStr)\r\n  let type = res[1]\r\n  return {\r\n    type,\r\n    base64\r\n  }\r\n}\r\n\r\n//  下载文件\r\nexport const downloadFile = (file, fileName) => {\r\n  let a = document.createElement('a')\r\n  a.href = file\r\n  a.download = fileName\r\n  a.click()\r\n}\r\n\r\n//  节流函数\r\nexport const throttle = (fn, time = 300, ctx) => {\r\n  let timer = null\r\n  return (...args) => {\r\n    if (timer) {\r\n      return\r\n    }\r\n    timer = setTimeout(() => {\r\n      fn.call(ctx, ...args)\r\n      timer = null\r\n    }, time)\r\n  }\r\n}\r\n\r\n// 防抖函数\r\nexport const debounce = (fn, wait = 300, ctx) => {\r\n  let timeout = null\r\n\r\n  return (...args) => {\r\n    if (timeout) clearTimeout(timeout)\r\n    timeout = setTimeout(() => {\r\n      timeout = null\r\n      fn.apply(ctx, args)\r\n    }, wait)\r\n  }\r\n}\r\n\r\n//  异步执行任务队列\r\nexport const asyncRun = (taskList, callback = () => {}) => {\r\n  let index = 0\r\n  let len = taskList.length\r\n  if (len <= 0) {\r\n    return callback()\r\n  }\r\n  let loop = () => {\r\n    if (index >= len) {\r\n      callback()\r\n      return\r\n    }\r\n    taskList[index]()\r\n    setTimeout(() => {\r\n      index++\r\n      loop()\r\n    }, 0)\r\n  }\r\n  loop()\r\n}\r\n\r\n// 角度转弧度\r\nexport const degToRad = deg => {\r\n  return deg * (Math.PI / 180)\r\n}\r\n\r\n// 驼峰转连字符\r\nexport const camelCaseToHyphen = str => {\r\n  return str.replace(/([a-z])([A-Z])/g, (...args) => {\r\n    return args[1] + '-' + args[2].toLowerCase()\r\n  })\r\n}\r\n\r\n//计算节点的文本长宽\r\nlet measureTextContext = null\r\nexport const measureText = (text, { italic, bold, fontSize, fontFamily }) => {\r\n  const font = joinFontStr({\r\n    italic,\r\n    bold,\r\n    fontSize,\r\n    fontFamily\r\n  })\r\n  if (!measureTextContext) {\r\n    const canvas = document.createElement('canvas')\r\n    measureTextContext = canvas.getContext('2d')\r\n  }\r\n  measureTextContext.save()\r\n  measureTextContext.font = font\r\n  const { width, actualBoundingBoxAscent, actualBoundingBoxDescent } =\r\n    measureTextContext.measureText(text)\r\n  measureTextContext.restore()\r\n  const height = actualBoundingBoxAscent + actualBoundingBoxDescent\r\n  return { width, height }\r\n}\r\n\r\n// 拼接font字符串\r\nexport const joinFontStr = ({ italic, bold, fontSize, fontFamily }) => {\r\n  return `${italic ? 'italic ' : ''} ${\r\n    bold ? 'bold ' : ''\r\n  } ${fontSize}px ${fontFamily} `\r\n}\r\n\r\n//  在下一个事件循环里执行任务\r\nexport const nextTick = function (fn, ctx) {\r\n  let pending = false\r\n  let timerFunc = null\r\n  let handle = () => {\r\n    pending = false\r\n    ctx ? fn.call(ctx) : fn()\r\n  }\r\n  // 支持MutationObserver接口的话使用MutationObserver\r\n  if (typeof MutationObserver !== 'undefined') {\r\n    let counter = 1\r\n    let observer = new MutationObserver(handle)\r\n    let textNode = document.createTextNode(counter)\r\n    observer.observe(textNode, {\r\n      characterData: true // 设为 true 表示监视指定目标节点或子节点树中节点所包含的字符数据的变化\r\n    })\r\n    timerFunc = function () {\r\n      counter = (counter + 1) % 2 // counter会在0和1两者循环变化\r\n      textNode.data = counter // 节点变化会触发回调handle，\r\n    }\r\n  } else {\r\n    // 否则使用定时器\r\n    timerFunc = setTimeout\r\n  }\r\n  return function () {\r\n    if (pending) return\r\n    pending = true\r\n    timerFunc(handle, 0)\r\n  }\r\n}\r\n\r\n// 检查节点是否超出画布\r\nexport const checkNodeOuter = (mindMap, node, offsetX = 0, offsetY = 0) => {\r\n  let elRect = mindMap.elRect\r\n  let { scaleX, scaleY, translateX, translateY } = mindMap.draw.transform()\r\n  let { left, top, width, height } = node\r\n  let right = (left + width) * scaleX + translateX\r\n  let bottom = (top + height) * scaleY + translateY\r\n  left = left * scaleX + translateX\r\n  top = top * scaleY + translateY\r\n  let offsetLeft = 0\r\n  let offsetTop = 0\r\n  if (left < 0 + offsetX) {\r\n    offsetLeft = -left + offsetX\r\n  }\r\n  if (right > elRect.width - offsetX) {\r\n    offsetLeft = -(right - elRect.width) - offsetX\r\n  }\r\n  if (top < 0 + offsetY) {\r\n    offsetTop = -top + offsetY\r\n  }\r\n  if (bottom > elRect.height - offsetY) {\r\n    offsetTop = -(bottom - elRect.height) - offsetY\r\n  }\r\n  return {\r\n    isOuter: offsetLeft !== 0 || offsetTop !== 0,\r\n    offsetLeft,\r\n    offsetTop\r\n  }\r\n}\r\n\r\n// 提取html字符串里的纯文本\r\nlet getTextFromHtmlEl = null\r\nexport const getTextFromHtml = html => {\r\n  if (!getTextFromHtmlEl) {\r\n    getTextFromHtmlEl = document.createElement('div')\r\n  }\r\n  getTextFromHtmlEl.innerHTML = html\r\n  return getTextFromHtmlEl.textContent\r\n}\r\n\r\n// 将blob转成data:url\r\nexport const readBlob = blob => {\r\n  return new Promise((resolve, reject) => {\r\n    let reader = new FileReader()\r\n    reader.onload = evt => {\r\n      resolve(evt.target.result)\r\n    }\r\n    reader.onerror = err => {\r\n      reject(err)\r\n    }\r\n    reader.readAsDataURL(blob)\r\n  })\r\n}\r\n\r\n// 将dom节点转换成html字符串\r\nlet nodeToHTMLWrapEl = null\r\nexport const nodeToHTML = node => {\r\n  if (!nodeToHTMLWrapEl) {\r\n    nodeToHTMLWrapEl = document.createElement('div')\r\n  }\r\n  nodeToHTMLWrapEl.innerHTML = ''\r\n  nodeToHTMLWrapEl.appendChild(node)\r\n  return nodeToHTMLWrapEl.innerHTML\r\n}\r\n\r\n// 获取图片大小\r\nexport const getImageSize = src => {\r\n  return new Promise(resolve => {\r\n    let img = new Image()\r\n    img.src = src\r\n    img.onload = () => {\r\n      resolve({\r\n        width: img.width,\r\n        height: img.height\r\n      })\r\n    }\r\n    img.onerror = () => {\r\n      resolve({\r\n        width: 0,\r\n        height: 0\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\n// 创建节点唯一的id\r\nexport const createUid = () => {\r\n  return uuidv4()\r\n}\r\n\r\n// 加载图片文件\r\nexport const loadImage = imgFile => {\r\n  return new Promise((resolve, reject) => {\r\n    let fr = new FileReader()\r\n    fr.readAsDataURL(imgFile)\r\n    fr.onload = async e => {\r\n      let url = e.target.result\r\n      let size = await getImageSize(url)\r\n      resolve({\r\n        url,\r\n        size\r\n      })\r\n    }\r\n    fr.onerror = error => {\r\n      reject(error)\r\n    }\r\n  })\r\n}\r\n\r\n// 移除字符串中的html实体\r\nexport const removeHTMLEntities = str => {\r\n  [['&nbsp;', '&#160;']].forEach(item => {\r\n    str = str.replace(new RegExp(item[0], 'g'), item[1])\r\n  })\r\n  return str\r\n}\r\n\r\n// 获取一个数据的类型\r\nexport const getType = data => {\r\n  return Object.prototype.toString.call(data).slice(8, -1)\r\n}\r\n\r\n// 判断一个数据是否是null和undefined和空字符串\r\nexport const isUndef = data => {\r\n  return data === null || data === undefined || data === ''\r\n}\r\n\r\n// 移除html字符串中节点的内联样式\r\nexport const removeHtmlStyle = html => {\r\n  return html.replace(/(<[^\\s]+)\\s+style=[\"'][^'\"]+[\"']\\s*(>)/g, '$1$2')\r\n}\r\n\r\n// 给html标签中指定的标签添加内联样式\r\nlet addHtmlStyleEl = null\r\nexport const addHtmlStyle = (html, tag, style) => {\r\n  if (!addHtmlStyleEl) {\r\n    addHtmlStyleEl = document.createElement('div')\r\n  }\r\n  const tags = Array.isArray(tag) ? tag : [tag]\r\n  addHtmlStyleEl.innerHTML = html\r\n  let walk = root => {\r\n    let childNodes = root.childNodes\r\n    childNodes.forEach(node => {\r\n      if (node.nodeType === 1) {\r\n        // 元素节点\r\n        if (tags.includes(node.tagName.toLowerCase())) {\r\n          node.style.cssText = style\r\n        } else {\r\n          walk(node)\r\n        }\r\n      }\r\n    })\r\n  }\r\n  walk(addHtmlStyleEl)\r\n  return addHtmlStyleEl.innerHTML\r\n}\r\n\r\n// 检查一个字符串是否是富文本字符\r\nlet checkIsRichTextEl = null\r\nexport const checkIsRichText = str => {\r\n  if (!checkIsRichTextEl) {\r\n    checkIsRichTextEl = document.createElement('div')\r\n  }\r\n  checkIsRichTextEl.innerHTML = str\r\n  for (let c = checkIsRichTextEl.childNodes, i = c.length; i--; ) {\r\n    if (c[i].nodeType == 1) return true\r\n  }\r\n  return false\r\n}\r\n\r\n// 搜索和替换html字符串中指定的文本\r\nlet replaceHtmlTextEl = null\r\nexport const replaceHtmlText = (html, searchText, replaceText) => {\r\n  if (!replaceHtmlTextEl) {\r\n    replaceHtmlTextEl = document.createElement('div')\r\n  }\r\n  replaceHtmlTextEl.innerHTML = html\r\n  let walk = root => {\r\n    let childNodes = root.childNodes\r\n    childNodes.forEach(node => {\r\n      if (node.nodeType === 1) {\r\n        // 元素节点\r\n        walk(node)\r\n      } else if (node.nodeType === 3) {\r\n        // 文本节点\r\n        root.replaceChild(\r\n          document.createTextNode(\r\n            node.nodeValue.replace(new RegExp(searchText, 'g'), replaceText)\r\n          ),\r\n          node\r\n        )\r\n      }\r\n    })\r\n  }\r\n  walk(replaceHtmlTextEl)\r\n  return replaceHtmlTextEl.innerHTML\r\n}\r\n\r\n// 去除html字符串中指定选择器的节点，然后返回html字符串\r\nlet removeHtmlNodeByClassEl = null\r\nexport const removeHtmlNodeByClass = (html, selector) => {\r\n  if (!removeHtmlNodeByClassEl) {\r\n    removeHtmlNodeByClassEl = document.createElement('div')\r\n  }\r\n  removeHtmlNodeByClassEl.innerHTML = html\r\n  const node = removeHtmlNodeByClassEl.querySelector(selector)\r\n  if (node) {\r\n    node.parentNode.removeChild(node)\r\n  }\r\n  return removeHtmlNodeByClassEl.innerHTML\r\n}\r\n\r\n// 判断一个颜色是否是白色\r\nexport const isWhite = color => {\r\n  color = String(color).replace(/\\s+/g, '')\r\n  return (\r\n    ['#fff', '#ffffff', '#FFF', '#FFFFFF', 'rgb(255,255,255)'].includes(\r\n      color\r\n    ) || /rgba\\(255,255,255,[^)]+\\)/.test(color)\r\n  )\r\n}\r\n\r\n// 判断一个颜色是否是透明\r\nexport const isTransparent = color => {\r\n  color = String(color).replace(/\\s+/g, '')\r\n  return (\r\n    ['', 'transparent'].includes(color) || /rgba\\(\\d+,\\d+,\\d+,0\\)/.test(color)\r\n  )\r\n}\r\n\r\n// 从当前主题里获取一个非透明非白色的颜色\r\nexport const getVisibleColorFromTheme = themeConfig => {\r\n  let { lineColor, root, second, node } = themeConfig\r\n  let list = [\r\n    lineColor,\r\n    root.fillColor,\r\n    root.color,\r\n    second.fillColor,\r\n    second.color,\r\n    node.fillColor,\r\n    node.color,\r\n    root.borderColor,\r\n    second.borderColor,\r\n    node.borderColor\r\n  ]\r\n  for (let i = 0; i < list.length; i++) {\r\n    let color = list[i]\r\n    if (!isTransparent(color) && !isWhite(color)) {\r\n      return color\r\n    }\r\n  }\r\n}\r\n\r\n// 去掉DOM节点中的公式标签\r\nexport const removeFormulaTags = node => {\r\n  const walk = root => {\r\n    const childNodes = root.childNodes\r\n    childNodes.forEach(node => {\r\n      if (node.nodeType === 1) {\r\n        if (node.classList.contains('ql-formula')) {\r\n          node.parentNode.removeChild(node)\r\n        } else {\r\n          walk(node)\r\n        }\r\n      }\r\n    })\r\n  }\r\n  walk(node)\r\n}\r\n\r\n// 将<p><span></span><p>形式的节点富文本内容转换成\\n换行的文本\r\n// 会过滤掉节点中的格式节点\r\nlet nodeRichTextToTextWithWrapEl = null\r\nexport const nodeRichTextToTextWithWrap = html => {\r\n  if (!nodeRichTextToTextWithWrapEl) {\r\n    nodeRichTextToTextWithWrapEl = document.createElement('div')\r\n  }\r\n  nodeRichTextToTextWithWrapEl.innerHTML = html\r\n  const childNodes = nodeRichTextToTextWithWrapEl.childNodes\r\n  let res = ''\r\n  for (let i = 0; i < childNodes.length; i++) {\r\n    const node = childNodes[i]\r\n    if (node.nodeType === 1) {\r\n      // 元素节点\r\n      removeFormulaTags(node)\r\n      if (node.tagName.toLowerCase() === 'p') {\r\n        res += node.textContent + '\\n'\r\n      } else {\r\n        res += node.textContent\r\n      }\r\n    } else if (node.nodeType === 3) {\r\n      // 文本节点\r\n      res += node.nodeValue\r\n    }\r\n  }\r\n  return res.replace(/\\n$/, '')\r\n}\r\n\r\n// 将<br>换行的文本转换成<p><span></span><p>形式的节点富文本内容\r\nlet textToNodeRichTextWithWrapEl = null\r\nexport const textToNodeRichTextWithWrap = html => {\r\n  if (!textToNodeRichTextWithWrapEl) {\r\n    textToNodeRichTextWithWrapEl = document.createElement('div')\r\n  }\r\n  textToNodeRichTextWithWrapEl.innerHTML = html\r\n  const childNodes = textToNodeRichTextWithWrapEl.childNodes\r\n  let list = []\r\n  let str = ''\r\n  for (let i = 0; i < childNodes.length; i++) {\r\n    const node = childNodes[i]\r\n    if (node.nodeType === 1) {\r\n      // 元素节点\r\n      if (node.tagName.toLowerCase() === 'br') {\r\n        list.push(str)\r\n        str = ''\r\n      } else {\r\n        str += node.textContent\r\n      }\r\n    } else if (node.nodeType === 3) {\r\n      // 文本节点\r\n      str += node.nodeValue\r\n    }\r\n  }\r\n  if (str) {\r\n    list.push(str)\r\n  }\r\n  return list\r\n    .map(item => {\r\n      return `<p><span>${htmlEscape(item)}</span></p>`\r\n    })\r\n    .join('')\r\n}\r\n\r\n// 去除富文本内容的样式，包括样式标签，比如strong、em、s等\r\n// 但要保留数学公式内容\r\nlet removeRichTextStyesEl = null\r\nexport const removeRichTextStyes = html => {\r\n  if (!removeRichTextStyesEl) {\r\n    removeRichTextStyesEl = document.createElement('div')\r\n  }\r\n  removeRichTextStyesEl.innerHTML = html\r\n  // 首先用占位文本替换掉所有的公式\r\n  const formulaList = removeRichTextStyesEl.querySelectorAll('.ql-formula')\r\n  Array.from(formulaList).forEach(el => {\r\n    const placeholder = document.createTextNode('$smmformula$')\r\n    el.parentNode.replaceChild(placeholder, el)\r\n  })\r\n  // 然后遍历每行节点，去掉内部的所有标签，转为文本\r\n  const childNodes = removeRichTextStyesEl.childNodes\r\n  let list = []\r\n  for (let i = 0; i < childNodes.length; i++) {\r\n    const node = childNodes[i]\r\n    if (node.nodeType === 1) {\r\n      // 元素节点\r\n      list.push(node.textContent)\r\n    } else if (node.nodeType === 3) {\r\n      // 文本节点\r\n      list.push(node.nodeValue)\r\n    }\r\n  }\r\n  // 拼接文本\r\n  html = list\r\n    .map(item => {\r\n      return `<p><span>${htmlEscape(item)}</span></p>`\r\n    })\r\n    .join('')\r\n  // 将公式添加回去\r\n  if (formulaList.length > 0) {\r\n    html = html.replace(/\\$smmformula\\$/g, '<span class=\"smmformula\"></span>')\r\n    removeRichTextStyesEl.innerHTML = html\r\n    const els = removeRichTextStyesEl.querySelectorAll('.smmformula')\r\n    Array.from(els).forEach((el, index) => {\r\n      el.parentNode.replaceChild(formulaList[index], el)\r\n    })\r\n    html = removeRichTextStyesEl.innerHTML\r\n  }\r\n  return html\r\n}\r\n\r\n// 判断是否是移动端环境\r\nexport const isMobile = () => {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent\r\n  )\r\n}\r\n\r\n// 获取对象改变了的的属性\r\nexport const getObjectChangedProps = (oldObject, newObject) => {\r\n  const res = {}\r\n  Object.keys(newObject).forEach(prop => {\r\n    const oldVal = oldObject[prop]\r\n    const newVal = newObject[prop]\r\n    if (getType(oldVal) !== getType(newVal)) {\r\n      res[prop] = newVal\r\n      return\r\n    }\r\n    if (getType(oldVal) === 'Object') {\r\n      if (JSON.stringify(oldVal) !== JSON.stringify(newVal)) {\r\n        res[prop] = newVal\r\n        return\r\n      }\r\n    } else {\r\n      if (oldVal !== newVal) {\r\n        res[prop] = newVal\r\n        return\r\n      }\r\n    }\r\n  })\r\n  return res\r\n}\r\n\r\n// 判断一个字段是否是节点数据中的样式字段\r\nexport const checkIsNodeStyleDataKey = key => {\r\n  // 用户自定义字段\r\n  if (/^_/.test(key)) return false\r\n  // 不在节点非样式字段列表里，那么就是样式字段\r\n  if (!nodeDataNoStylePropList.includes(key)) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n// 判断一个对象是否不需要触发节点重新创建\r\nexport const isNodeNotNeedRenderData = config => {\r\n  const list = [...lineStyleProps] // 节点连线样式\r\n  const keys = Object.keys(config)\r\n  for (let i = 0; i < keys.length; i++) {\r\n    if (!list.includes(keys[i])) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\n// 合并图标数组\r\n// const data = [\r\n//   { type: 'priority', name: '优先级图标', list: [{ name: '1', icon: 'a' }, { name: 2, icon: 'b' }] },\r\n//   { type: 'priority', name: '优先级图标', list: [{ name: '2', icon: 'c' }, { name: 3, icon: 'd' }] },\r\n// ];\r\n\r\n// mergerIconList(data) 结果\r\n\r\n// [\r\n//   { type: 'priority', name: '优先级图标', list: [{ name: '1', icon: 'a' }, { name: 2, icon: 'c' }, { name: 3, icon: 'd' }] },\r\n// ]\r\nexport const mergerIconList = list => {\r\n  return list.reduce((result, item) => {\r\n    const existingItem = result.find(x => x.type === item.type)\r\n    if (existingItem) {\r\n      item.list.forEach(newObj => {\r\n        const existingObj = existingItem.list.find(x => x.name === newObj.name)\r\n        if (existingObj) {\r\n          existingObj.icon = newObj.icon\r\n        } else {\r\n          existingItem.list.push(newObj)\r\n        }\r\n      })\r\n    } else {\r\n      result.push({ ...item })\r\n    }\r\n    return result\r\n  }, [])\r\n}\r\n\r\n// 从节点实例列表里找出顶层的节点\r\nexport const getTopAncestorsFomNodeList = list => {\r\n  let res = []\r\n  list.forEach(node => {\r\n    if (\r\n      !list.find(item => {\r\n        return item.uid !== node.uid && item.isAncestor(node)\r\n      })\r\n    ) {\r\n      res.push(node)\r\n    }\r\n  })\r\n  return res\r\n}\r\n\r\n// 从给定的节点实例列表里判断是否存在上下级关系\r\nexport const checkHasSupSubRelation = list => {\r\n  for (let i = 0; i < list.length; i++) {\r\n    const cur = list[i]\r\n    if (\r\n      list.find(item => {\r\n        return item.uid !== cur.uid && cur.isAncestor(item)\r\n      })\r\n    ) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n// 解析要添加概要的节点实例列表\r\nexport const parseAddGeneralizationNodeList = list => {\r\n  const cache = {}\r\n  const uidToParent = {}\r\n  list.forEach(node => {\r\n    const parent = node.parent\r\n    if (parent) {\r\n      const pUid = parent.uid\r\n      uidToParent[pUid] = parent\r\n      const index = node.getIndexInBrothers()\r\n      const data = {\r\n        node,\r\n        index\r\n      }\r\n      if (cache[pUid]) {\r\n        if (\r\n          !cache[pUid].find(item => {\r\n            return item.index === data.index\r\n          })\r\n        ) {\r\n          cache[pUid].push(data)\r\n        }\r\n      } else {\r\n        cache[pUid] = [data]\r\n      }\r\n    }\r\n  })\r\n  const res = []\r\n  Object.keys(cache).forEach(uid => {\r\n    if (cache[uid].length > 1) {\r\n      const rangeList = cache[uid]\r\n        .map(item => {\r\n          return item.index\r\n        })\r\n        .sort((a, b) => {\r\n          return a - b\r\n        })\r\n      res.push({\r\n        node: uidToParent[uid],\r\n        range: [rangeList[0], rangeList[rangeList.length - 1]]\r\n      })\r\n    } else {\r\n      res.push({\r\n        node: cache[uid][0].node\r\n      })\r\n    }\r\n  })\r\n  return res\r\n}\r\n\r\n// 判断两个矩形是否重叠\r\nexport const checkTwoRectIsOverlap = (\r\n  minx1,\r\n  maxx1,\r\n  miny1,\r\n  maxy1,\r\n  minx2,\r\n  maxx2,\r\n  miny2,\r\n  maxy2\r\n) => {\r\n  return maxx1 > minx2 && maxx2 > minx1 && maxy1 > miny2 && maxy2 > miny1\r\n}\r\n\r\n// 聚焦指定输入框\r\nexport const focusInput = el => {\r\n  let selection = window.getSelection()\r\n  let range = document.createRange()\r\n  range.selectNodeContents(el)\r\n  range.collapse()\r\n  selection.removeAllRanges()\r\n  selection.addRange(range)\r\n}\r\n\r\n// 聚焦全选指定输入框\r\nexport const selectAllInput = el => {\r\n  let selection = window.getSelection()\r\n  let range = document.createRange()\r\n  range.selectNodeContents(el)\r\n  selection.removeAllRanges()\r\n  selection.addRange(range)\r\n}\r\n\r\n// 给指定的节点列表树数据添加附加数据，会修改原数据\r\nexport const addDataToAppointNodes = (appointNodes, data = {}) => {\r\n  data = { ...data }\r\n  const alreadyIsRichText = data && data.richText\r\n  // 如果指定的数据就是富文本格式，那么不需要重新创建\r\n  if (alreadyIsRichText && data.resetRichText) {\r\n    delete data.resetRichText\r\n  }\r\n  const walk = list => {\r\n    list.forEach(node => {\r\n      node.data = {\r\n        ...node.data,\r\n        ...data\r\n      }\r\n      if (node.children && node.children.length > 0) {\r\n        walk(node.children)\r\n      }\r\n    })\r\n  }\r\n  walk(appointNodes)\r\n  return appointNodes\r\n}\r\n\r\n// 给指定的节点列表树数据添加uid，会修改原数据\r\n// createNewId默认为false，即如果节点不存在uid的话，会创建新的uid。如果传true，那么无论节点数据原来是否存在uid，都会创建新的uid\r\nexport const createUidForAppointNodes = (\r\n  appointNodes,\r\n  createNewId = false,\r\n  handle = null,\r\n  handleGeneralization = false\r\n) => {\r\n  const walk = list => {\r\n    list.forEach(node => {\r\n      if (!node.data) {\r\n        node.data = {}\r\n      }\r\n      if (createNewId || isUndef(node.data.uid)) {\r\n        node.data.uid = createUid()\r\n      }\r\n      if (handleGeneralization) {\r\n        const generalizationList = formatGetNodeGeneralization(node.data)\r\n        generalizationList.forEach(gNode => {\r\n          if (createNewId || isUndef(gNode.uid)) {\r\n            gNode.uid = createUid()\r\n          }\r\n        })\r\n      }\r\n      handle && handle(node)\r\n      if (node.children && node.children.length > 0) {\r\n        walk(node.children)\r\n      }\r\n    })\r\n  }\r\n  walk(appointNodes)\r\n  return appointNodes\r\n}\r\n\r\n// 传入一个数据，如果该数据是数组，那么返回该数组，否则返回一个以该数据为成员的数组\r\nexport const formatDataToArray = data => {\r\n  if (!data) return []\r\n  return Array.isArray(data) ? data : [data]\r\n}\r\n\r\n//  获取节点在同级里的位置索引\r\nexport const getNodeDataIndex = node => {\r\n  return node.parent\r\n    ? node.parent.nodeData.children.findIndex(item => {\r\n        return item.data.uid === node.uid\r\n      })\r\n    : 0\r\n}\r\n\r\n// 从一个节点列表里找出某个节点的索引\r\nexport const getNodeIndexInNodeList = (node, nodeList) => {\r\n  return nodeList.findIndex(item => {\r\n    return item.uid === node.uid\r\n  })\r\n}\r\n\r\n// 根据内容生成颜色\r\nexport const generateColorByContent = str => {\r\n  let hash = 0\r\n  for (let i = 0; i < str.length; i++) {\r\n    hash = str.charCodeAt(i) + ((hash << 5) - hash)\r\n  }\r\n  // 这里使用伪随机数的原因是因为\r\n  // 1. 如果字符串的内容差不多，根据hash生产的颜色就比较相近，不好区分，比如v1.1 v1.2，所以需要加入随机数来使得颜色能够区分开\r\n  // 2. 普通的随机数每次数值不一样，就会导致每次新增标签原来的标签颜色就会发生改变，所以加入了这个方法，使得内容不变随机数也不变\r\n  const rng = new MersenneTwister(hash)\r\n  const h = rng.genrand_int32() % 360\r\n  return 'hsla(' + h + ', 50%, 50%, 1)'\r\n}\r\n\r\n//  html转义\r\nexport const htmlEscape = str => {\r\n  [\r\n    ['&', '&amp;'],\r\n    ['<', '&lt;'],\r\n    ['>', '&gt;']\r\n  ].forEach(item => {\r\n    str = str.replace(new RegExp(item[0], 'g'), item[1])\r\n  })\r\n  return str\r\n}\r\n\r\n// 判断两个对象是否相同，只处理对象或数组\r\nexport const isSameObject = (a, b) => {\r\n  const type = getType(a)\r\n  // a、b类型不一致，那么肯定不相同\r\n  if (type !== getType(b)) return false\r\n  // 如果都是对象\r\n  if (type === 'Object') {\r\n    const keysa = Object.keys(a)\r\n    const keysb = Object.keys(b)\r\n    // 对象字段数量不一样，肯定不相同\r\n    if (keysa.length !== keysb.length) return false\r\n    // 字段数量一样，那么需要遍历字段进行判断\r\n    for (let i = 0; i < keysa.length; i++) {\r\n      const key = keysa[i]\r\n      // b没有a的一个字段，那么肯定不相同\r\n      if (!keysb.includes(key)) return false\r\n      // 字段名称一样，那么需要递归判断它们的值\r\n      const isSame = isSameObject(a[key], b[key])\r\n      if (!isSame) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  } else if (type === 'Array') {\r\n    // 如果都是数组\r\n    // 数组长度不一样，肯定不相同\r\n    if (a.length !== b.length) return false\r\n    // 长度一样，那么需要遍历进行判断\r\n    for (let i = 0; i < a.length; i++) {\r\n      const itema = a[i]\r\n      const itemb = b[i]\r\n      const typea = getType(itema)\r\n      const typeb = getType(itemb)\r\n      if (typea !== typeb) return false\r\n      const isSame = isSameObject(itema, itemb)\r\n      if (!isSame) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  } else {\r\n    // 其他类型，直接全等判断\r\n    return a === b\r\n  }\r\n}\r\n\r\n// 检查navigator.clipboard对象的读取是否可用\r\nexport const checkClipboardReadEnable = () => {\r\n  return navigator.clipboard && typeof navigator.clipboard.read === 'function'\r\n}\r\n\r\n// 将数据设置到用户剪切板中\r\nexport const setDataToClipboard = data => {\r\n  if (navigator.clipboard && navigator.clipboard.writeText) {\r\n    navigator.clipboard.writeText(JSON.stringify(data))\r\n  }\r\n}\r\n\r\n// 从用户剪贴板中读取文字和图片\r\nexport const getDataFromClipboard = async () => {\r\n  let text = null\r\n  let img = null\r\n  if (checkClipboardReadEnable()) {\r\n    const items = await navigator.clipboard.read()\r\n    if (items && items.length > 0) {\r\n      for (const clipboardItem of items) {\r\n        for (const type of clipboardItem.types) {\r\n          if (/^image\\//.test(type)) {\r\n            img = await clipboardItem.getType(type)\r\n          } else if (type === 'text/plain') {\r\n            const blob = await clipboardItem.getType(type)\r\n            text = await blob.text()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    text,\r\n    img\r\n  }\r\n}\r\n\r\n// 从节点的父节点的nodeData.children列表中移除该节点的数据\r\nexport const removeFromParentNodeData = node => {\r\n  if (!node || !node.parent) return\r\n  const index = getNodeDataIndex(node)\r\n  if (index === -1) return\r\n  node.parent.nodeData.children.splice(index, 1)\r\n}\r\n\r\n// 给html自闭合标签添加闭合状态\r\nexport const handleSelfCloseTags = str => {\r\n  selfCloseTagList.forEach(tagName => {\r\n    str = str.replace(\r\n      new RegExp(`<${tagName}([^>]*)>`, 'g'),\r\n      `<${tagName} $1 />`\r\n    )\r\n  })\r\n  return str\r\n}\r\n\r\n// 检查两个节点列表是否包含的节点是一样的\r\nexport const checkNodeListIsEqual = (list1, list2) => {\r\n  if (list1.length !== list2.length) return false\r\n  for (let i = 0; i < list1.length; i++) {\r\n    if (\r\n      !list2.find(item => {\r\n        return item.uid === list1[i].uid\r\n      })\r\n    ) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\n// 获取浏览器的chrome内核版本\r\nexport const getChromeVersion = () => {\r\n  const match = navigator.userAgent.match(/\\s+Chrome\\/(.*)\\s+/)\r\n  if (match && match[1]) {\r\n    return Number.parseFloat(match[1])\r\n  }\r\n  return ''\r\n}\r\n\r\n// 创建smm粘贴的粘贴数据\r\nexport const createSmmFormatData = data => {\r\n  return {\r\n    simpleMindMap: true,\r\n    data\r\n  }\r\n}\r\n\r\n// 检查是否是smm粘贴格式的数据\r\nexport const checkSmmFormatData = data => {\r\n  let smmData = null\r\n  // 如果是字符串，则尝试解析为对象\r\n  if (typeof data === 'string') {\r\n    try {\r\n      const parsedData = JSON.parse(data)\r\n      // 判断是否是对象，且存在属性标志\r\n      if (typeof parsedData === 'object' && parsedData.simpleMindMap) {\r\n        smmData = parsedData.data\r\n      }\r\n    } catch (error) {}\r\n  } else if (typeof data === 'object' && data.simpleMindMap) {\r\n    // 否则如果是对象，则检查属性标志\r\n    smmData = data.data\r\n  }\r\n  const isSmm = !!smmData\r\n  return {\r\n    isSmm,\r\n    data: isSmm ? smmData : String(data)\r\n  }\r\n}\r\n\r\n// 处理输入框的粘贴事件，会去除文本的html格式、换行\r\nexport const handleInputPasteText = (e, text) => {\r\n  e.preventDefault()\r\n  const selection = window.getSelection()\r\n  if (!selection.rangeCount) return\r\n  selection.deleteFromDocument()\r\n  text = text || e.clipboardData.getData('text')\r\n  // 转义特殊字符\r\n  text = htmlEscape(text)\r\n  // 去除格式\r\n  text = getTextFromHtml(text)\r\n  // 去除换行\r\n  // text = text.replace(/\\n/g, '')\r\n  const textArr = text.split(/\\n/g)\r\n  const fragment = document.createDocumentFragment()\r\n  textArr.forEach((item, index) => {\r\n    const node = document.createTextNode(item)\r\n    fragment.appendChild(node)\r\n    if (index < textArr.length - 1) {\r\n      const br = document.createElement('br')\r\n      fragment.appendChild(br)\r\n    }\r\n  })\r\n  selection.getRangeAt(0).insertNode(fragment)\r\n  selection.collapseToEnd()\r\n}\r\n\r\n// 将思维导图树结构转平级对象\r\n/*\r\n    {\r\n        data: {\r\n            uid: 'xxx'\r\n        },\r\n        children: [\r\n            {\r\n                data: {\r\n                    uid: 'xxx'\r\n                },\r\n                children: []\r\n            }\r\n        ]\r\n    }\r\n    转为：\r\n    {\r\n        uid: {\r\n            children: [uid1, uid2],\r\n            data: {}\r\n        }\r\n    }\r\n  */\r\nexport const transformTreeDataToObject = data => {\r\n  const res = {}\r\n  const walk = (root, parent) => {\r\n    const uid = root.data.uid\r\n    if (parent) {\r\n      parent.children.push(uid)\r\n    }\r\n    res[uid] = {\r\n      isRoot: !parent,\r\n      data: {\r\n        ...root.data\r\n      },\r\n      children: []\r\n    }\r\n    if (root.children && root.children.length > 0) {\r\n      root.children.forEach(item => {\r\n        walk(item, res[uid])\r\n      })\r\n    }\r\n  }\r\n  walk(data, null)\r\n  return res\r\n}\r\n\r\n// 将平级对象转树结构\r\n// transformTreeDataToObject方法的反向操作\r\n// 找到父节点的uid\r\nconst _findParentUid = (data, targetUid) => {\r\n  const uids = Object.keys(data)\r\n  let res = ''\r\n  uids.forEach(uid => {\r\n    const children = data[uid].children\r\n    const isParent =\r\n      children.findIndex(childUid => {\r\n        return childUid === targetUid\r\n      }) !== -1\r\n    if (isParent) {\r\n      res = uid\r\n    }\r\n  })\r\n  return res\r\n}\r\nexport const transformObjectToTreeData = data => {\r\n  const uids = Object.keys(data)\r\n  if (uids.length <= 0) return null\r\n  const rootKey = uids.find(uid => {\r\n    return data[uid].isRoot\r\n  })\r\n  if (!rootKey || !data[rootKey]) return null\r\n  // 根节点\r\n  const res = {\r\n    data: simpleDeepClone(data[rootKey].data),\r\n    children: []\r\n  }\r\n  const map = {}\r\n  map[rootKey] = res\r\n  uids.forEach(uid => {\r\n    const parentUid = _findParentUid(data, uid)\r\n    const cur = data[uid]\r\n    const node = map[uid] || {\r\n      data: simpleDeepClone(cur.data),\r\n      children: []\r\n    }\r\n    if (!map[uid]) {\r\n      map[uid] = node\r\n    }\r\n    if (parentUid) {\r\n      const index = data[parentUid].children.findIndex(item => {\r\n        return item === uid\r\n      })\r\n      if (!map[parentUid]) {\r\n        map[parentUid] = {\r\n          data: simpleDeepClone(data[parentUid].data),\r\n          children: []\r\n        }\r\n      }\r\n      map[parentUid].children[index] = node\r\n    }\r\n  })\r\n  return res\r\n}\r\n\r\n// 计算两个点的直线距离\r\nexport const getTwoPointDistance = (x1, y1, x2, y2) => {\r\n  return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\r\n}\r\n\r\n// 判断两个矩形的相对位置\r\n// 第一个矩形在第二个矩形的什么方向\r\nexport const getRectRelativePosition = (rect1, rect2) => {\r\n  // 获取第一个矩形的中心点坐标\r\n  const rect1CenterX = rect1.x + rect1.width / 2\r\n  const rect1CenterY = rect1.y + rect1.height / 2\r\n\r\n  // 获取第二个矩形的中心点坐标\r\n  const rect2CenterX = rect2.x + rect2.width / 2\r\n  const rect2CenterY = rect2.y + rect2.height / 2\r\n\r\n  // 判断第一个矩形在第二个矩形的哪个方向\r\n  if (rect1CenterX < rect2CenterX && rect1CenterY < rect2CenterY) {\r\n    return 'left-top'\r\n  } else if (rect1CenterX > rect2CenterX && rect1CenterY < rect2CenterY) {\r\n    return 'right-top'\r\n  } else if (rect1CenterX > rect2CenterX && rect1CenterY > rect2CenterY) {\r\n    return 'right-bottom'\r\n  } else if (rect1CenterX < rect2CenterX && rect1CenterY > rect2CenterY) {\r\n    return 'left-bottom'\r\n  } else if (rect1CenterX < rect2CenterX && rect1CenterY === rect2CenterY) {\r\n    return 'left'\r\n  } else if (rect1CenterX > rect2CenterX && rect1CenterY === rect2CenterY) {\r\n    return 'right'\r\n  } else if (rect1CenterX === rect2CenterX && rect1CenterY < rect2CenterY) {\r\n    return 'top'\r\n  } else if (rect1CenterX === rect2CenterX && rect1CenterY > rect2CenterY) {\r\n    return 'bottom'\r\n  } else {\r\n    return 'overlap'\r\n  }\r\n}\r\n\r\n// 处理获取svg内容时添加额外内容\r\nexport const handleGetSvgDataExtraContent = ({\r\n  addContentToHeader,\r\n  addContentToFooter\r\n}) => {\r\n  // 追加内容\r\n  const cssTextList = []\r\n  let header = null\r\n  let headerHeight = 0\r\n  let footer = null\r\n  let footerHeight = 0\r\n  const handle = (fn, callback) => {\r\n    if (typeof fn === 'function') {\r\n      const res = fn()\r\n      if (!res) return\r\n      const { el, cssText, height } = res\r\n      if (el instanceof HTMLElement) {\r\n        addXmlns(el)\r\n        const foreignObject = createForeignObjectNode({ el, height })\r\n        callback(foreignObject, height)\r\n      }\r\n      if (cssText) {\r\n        cssTextList.push(cssText)\r\n      }\r\n    }\r\n  }\r\n  handle(addContentToHeader, (foreignObject, height) => {\r\n    header = foreignObject\r\n    headerHeight = height\r\n  })\r\n  handle(addContentToFooter, (foreignObject, height) => {\r\n    footer = foreignObject\r\n    footerHeight = height\r\n  })\r\n  return {\r\n    cssTextList,\r\n    header,\r\n    headerHeight,\r\n    footer,\r\n    footerHeight\r\n  }\r\n}\r\n\r\n// 获取指定节点的包围框信息\r\nexport const getNodeTreeBoundingRect = (\r\n  node,\r\n  x = 0,\r\n  y = 0,\r\n  paddingX = 0,\r\n  paddingY = 0,\r\n  excludeSelf = false,\r\n  excludeGeneralization = false\r\n) => {\r\n  let minX = Infinity\r\n  let maxX = -Infinity\r\n  let minY = Infinity\r\n  let maxY = -Infinity\r\n  const walk = (root, isRoot) => {\r\n    if (!(isRoot && excludeSelf) && root.group) {\r\n      try {\r\n        const { x, y, width, height } = root.group\r\n          .findOne('.smm-node-shape')\r\n          .rbox()\r\n        if (x < minX) {\r\n          minX = x\r\n        }\r\n        if (x + width > maxX) {\r\n          maxX = x + width\r\n        }\r\n        if (y < minY) {\r\n          minY = y\r\n        }\r\n        if (y + height > maxY) {\r\n          maxY = y + height\r\n        }\r\n      } catch (e) {}\r\n    }\r\n    if (!excludeGeneralization && root._generalizationList.length > 0) {\r\n      root._generalizationList.forEach(item => {\r\n        walk(item.generalizationNode)\r\n      })\r\n    }\r\n    if (root.children) {\r\n      root.children.forEach(item => {\r\n        walk(item)\r\n      })\r\n    }\r\n  }\r\n  walk(node, true)\r\n\r\n  minX = minX - x + paddingX\r\n  minY = minY - y + paddingY\r\n  maxX = maxX - x + paddingX\r\n  maxY = maxY - y + paddingY\r\n\r\n  return {\r\n    left: minX,\r\n    top: minY,\r\n    width: maxX - minX,\r\n    height: maxY - minY\r\n  }\r\n}\r\n\r\n// 获取多个节点总的包围框\r\nexport const getNodeListBoundingRect = (\r\n  nodeList,\r\n  x = 0,\r\n  y = 0,\r\n  paddingX = 0,\r\n  paddingY = 0\r\n) => {\r\n  let minX = Infinity\r\n  let maxX = -Infinity\r\n  let minY = Infinity\r\n  let maxY = -Infinity\r\n  nodeList.forEach(node => {\r\n    const { left, top, width, height } = getNodeTreeBoundingRect(\r\n      node,\r\n      x,\r\n      y,\r\n      paddingX,\r\n      paddingY,\r\n      false,\r\n      true\r\n    )\r\n    if (left < minX) {\r\n      minX = left\r\n    }\r\n    if (left + width > maxX) {\r\n      maxX = left + width\r\n    }\r\n    if (top < minY) {\r\n      minY = top\r\n    }\r\n    if (top + height > maxY) {\r\n      maxY = top + height\r\n    }\r\n  })\r\n  return {\r\n    left: minX,\r\n    top: minY,\r\n    width: maxX - minX,\r\n    height: maxY - minY\r\n  }\r\n}\r\n\r\n// 全屏事件检测\r\nconst getOnfullscreEnevt = () => {\r\n  if (document.documentElement.requestFullScreen) {\r\n    return 'fullscreenchange'\r\n  } else if (document.documentElement.webkitRequestFullScreen) {\r\n    return 'webkitfullscreenchange'\r\n  } else if (document.documentElement.mozRequestFullScreen) {\r\n    return 'mozfullscreenchange'\r\n  } else if (document.documentElement.msRequestFullscreen) {\r\n    return 'msfullscreenchange'\r\n  }\r\n}\r\nexport const fullscrrenEvent = getOnfullscreEnevt()\r\n\r\n// 全屏\r\nexport const fullScreen = element => {\r\n  if (element.requestFullScreen) {\r\n    element.requestFullScreen()\r\n  } else if (element.webkitRequestFullScreen) {\r\n    element.webkitRequestFullScreen()\r\n  } else if (element.mozRequestFullScreen) {\r\n    element.mozRequestFullScreen()\r\n  }\r\n}\r\n\r\n// 退出全屏\r\nexport const exitFullScreen = () => {\r\n  if (!document.fullscreenElement) return\r\n  if (document.exitFullscreen) {\r\n    document.exitFullscreen()\r\n  } else if (document.webkitExitFullscreen) {\r\n    document.webkitExitFullscreen()\r\n  } else if (document.mozCancelFullScreen) {\r\n    document.mozCancelFullScreen()\r\n  }\r\n}\r\n\r\n// 创建foreignObject节点\r\nexport const createForeignObjectNode = ({ el, width, height }) => {\r\n  const foreignObject = new ForeignObject()\r\n  if (width !== undefined) {\r\n    foreignObject.width(width)\r\n  }\r\n  if (height !== undefined) {\r\n    foreignObject.height(height)\r\n  }\r\n  foreignObject.add(el)\r\n  return foreignObject\r\n}\r\n\r\n// 格式化获取节点的概要数据\r\nexport const formatGetNodeGeneralization = data => {\r\n  const generalization = data.generalization\r\n  if (generalization) {\r\n    return Array.isArray(generalization) ? generalization : [generalization]\r\n  } else {\r\n    return []\r\n  }\r\n}\r\n\r\n/**\r\n * 防御 XSS 攻击，过滤恶意 HTML 标签和属性\r\n * @param {string} text 需要过滤的文本\r\n * @returns {string} 过滤后的文本\r\n */\r\nexport const defenseXSS = text => {\r\n  text = String(text)\r\n\r\n  // 初始化结果变量\r\n  let result = text\r\n\r\n  // 使用正则表达式匹配 HTML 标签\r\n  const match = text.match(/<(\\S*?)[^>]*>.*?|<.*? \\/>/g)\r\n  if (match == null) {\r\n    // 如果没有匹配到任何标签，则直接返回原始文本\r\n    return text\r\n  }\r\n\r\n  // 遍历匹配到的标签\r\n  for (let value of match) {\r\n    // 定义白名单属性正则表达式（style、target、href）\r\n    const whiteAttrRegex = new RegExp(/(style|target|href)=[\"'][^\"']*[\"']/g)\r\n\r\n    // 定义黑名单href正则表达式（javascript:）\r\n    const aHrefBlackRegex = new RegExp(/href=[\"']javascript:/g)\r\n\r\n    // 过滤 HTML 标签\r\n    const filterHtml = value.replace(\r\n      // 匹配属性键值对（如：key=\"value\"）\r\n      /([a-zA-Z-]+)\\s*=\\s*[\"']([^\"']*)[\"']/g,\r\n      text => {\r\n        // 如果属性值包含黑名单href或不在白名单中，则删除该属性\r\n        if (aHrefBlackRegex.test(text) || !whiteAttrRegex.test(text)) {\r\n          return ''\r\n        }\r\n\r\n        // 否则，保留该属性\r\n        return text\r\n      }\r\n    )\r\n\r\n    // 将过滤后的标签替换回原始文本\r\n    result = result.replace(value, filterHtml)\r\n  }\r\n\r\n  // 返回最终结果\r\n  return result\r\n}\r\n\r\n// 给节点添加命名空间\r\nexport const addXmlns = el => {\r\n  el.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml')\r\n}\r\n\r\n// 给一组节点实例升序排序，依据其sortIndex值\r\nexport const sortNodeList = nodeList => {\r\n  nodeList = [...nodeList]\r\n  nodeList.sort((a, b) => {\r\n    return a.sortIndex - b.sortIndex\r\n  })\r\n  return nodeList\r\n}\r\n\r\n// 合并主题配置\r\nexport const mergeTheme = (dest, source) => {\r\n  return merge(dest, source, {\r\n    arrayMerge: (destinationArray, sourceArray) => {\r\n      return sourceArray\r\n    }\r\n  })\r\n}\r\n\r\n// 获取节点实例的文本样式数据\r\nexport const getNodeRichTextStyles = node => {\r\n  const res = {}\r\n  richTextSupportStyleList.forEach(prop => {\r\n    let value = node.style.merge(prop)\r\n    if (prop === 'fontSize') {\r\n      value = value + 'px'\r\n    }\r\n    res[prop] = value\r\n  })\r\n  return res\r\n}\r\n\r\n// 判断两个版本号的关系\r\n/*\r\na > b 返回 >\r\na < b 返回 <\r\na = b 返回 =\r\n*/\r\nexport const compareVersion = (a, b) => {\r\n  const aArr = String(a).split('.')\r\n  const bArr = String(b).split('.')\r\n  const max = Math.max(aArr.length, bArr.length)\r\n  for (let i = 0; i < max; i++) {\r\n    const ai = aArr[i] || 0\r\n    const bi = bArr[i] || 0\r\n    if (ai > bi) {\r\n      return '>'\r\n    } else if (ai < bi) {\r\n      return '<'\r\n    }\r\n  }\r\n  return '='\r\n}\r\n", "import { checkIsNodeStyleDataKey } from '../../../utils/index'\r\n\r\nconst backgroundStyleProps = [\r\n  'backgroundColor',\r\n  'backgroundImage',\r\n  'backgroundRepeat',\r\n  'backgroundPosition',\r\n  'backgroundSize'\r\n]\r\n\r\n//  样式类\r\nclass Style {\r\n  //   设置背景样式\r\n  static setBackgroundStyle(el, themeConfig) {\r\n    if (!el) return\r\n    // 缓存容器元素原本的样式\r\n    if (!Style.cacheStyle) {\r\n      Style.cacheStyle = {}\r\n      let style = window.getComputedStyle(el)\r\n      backgroundStyleProps.forEach(prop => {\r\n        Style.cacheStyle[prop] = style[prop]\r\n      })\r\n    }\r\n    // 设置新样式\r\n    let {\r\n      backgroundColor,\r\n      backgroundImage,\r\n      backgroundRepeat,\r\n      backgroundPosition,\r\n      backgroundSize\r\n    } = themeConfig\r\n    el.style.backgroundColor = backgroundColor\r\n    if (backgroundImage && backgroundImage !== 'none') {\r\n      el.style.backgroundImage = `url(${backgroundImage})`\r\n      el.style.backgroundRepeat = backgroundRepeat\r\n      el.style.backgroundPosition = backgroundPosition\r\n      el.style.backgroundSize = backgroundSize\r\n    } else {\r\n      el.style.backgroundImage = 'none'\r\n    }\r\n  }\r\n\r\n  // 移除背景样式\r\n  static removeBackgroundStyle(el) {\r\n    if (!Style.cacheStyle) return\r\n    backgroundStyleProps.forEach(prop => {\r\n      el.style[prop] = Style.cacheStyle[prop]\r\n    })\r\n    Style.cacheStyle = null\r\n  }\r\n\r\n  //  构造函数\r\n  constructor(ctx) {\r\n    this.ctx = ctx\r\n    // 箭头图标\r\n    this._markerPath = null\r\n    this._marker = null\r\n    // 渐变背景\r\n    this._gradient = null\r\n  }\r\n\r\n  //  合并样式\r\n  merge(prop, root) {\r\n    let themeConfig = this.ctx.mindMap.themeConfig\r\n    let defaultConfig = null\r\n    let useRoot = false\r\n    if (root) {\r\n      // 使用最外层样式\r\n      useRoot = true\r\n      defaultConfig = themeConfig\r\n    } else if (this.ctx.isGeneralization) {\r\n      // 概要节点\r\n      defaultConfig = themeConfig.generalization\r\n    } else if (this.ctx.layerIndex === 0) {\r\n      // 根节点\r\n      defaultConfig = themeConfig.root\r\n    } else if (this.ctx.layerIndex === 1) {\r\n      // 二级节点\r\n      defaultConfig = themeConfig.second\r\n    } else {\r\n      // 三级及以下节点\r\n      defaultConfig = themeConfig.node\r\n    }\r\n    let value = ''\r\n    // 优先使用节点本身的样式\r\n    if (this.getSelfStyle(prop) !== undefined) {\r\n      value = this.getSelfStyle(prop)\r\n    } else if (defaultConfig[prop] !== undefined) {\r\n      // 否则使用对应层级的样式\r\n      value = defaultConfig[prop]\r\n    } else {\r\n      // 否则使用最外层样式\r\n      value = themeConfig[prop]\r\n    }\r\n    if (!useRoot) {\r\n      this.addToEffectiveStyles({\r\n        [prop]: value\r\n      })\r\n    }\r\n    return value\r\n  }\r\n\r\n  //  获取某个样式值\r\n  getStyle(prop, root) {\r\n    return this.merge(prop, root)\r\n  }\r\n\r\n  //  获取自身自定义样式\r\n  getSelfStyle(prop) {\r\n    return this.ctx.getData(prop)\r\n  }\r\n\r\n  // 更新当前节点生效的样式数据\r\n  addToEffectiveStyles(styles) {\r\n    this.ctx.effectiveStyles = {\r\n      ...this.ctx.effectiveStyles,\r\n      ...styles\r\n    }\r\n  }\r\n\r\n  //  矩形\r\n  rect(node) {\r\n    this.shape(node)\r\n    node.radius(this.merge('borderRadius'))\r\n  }\r\n\r\n  // 形状\r\n  shape(node) {\r\n    const styles = {\r\n      gradientStyle: this.merge('gradientStyle'),\r\n      startColor: this.merge('startColor'),\r\n      endColor: this.merge('endColor'),\r\n      startDir: this.merge('startDir'),\r\n      endDir: this.merge('endDir'),\r\n      fillColor: this.merge('fillColor'),\r\n      borderColor: this.merge('borderColor'),\r\n      borderWidth: this.merge('borderWidth'),\r\n      borderDasharray: this.merge('borderDasharray')\r\n    }\r\n    if (styles.gradientStyle) {\r\n      if (!this._gradient) {\r\n        this._gradient = this.ctx.nodeDraw.gradient('linear')\r\n      }\r\n      this._gradient.update(add => {\r\n        add.stop(0, styles.startColor)\r\n        add.stop(1, styles.endColor)\r\n      })\r\n      this._gradient.from(...styles.startDir).to(...styles.endDir)\r\n      node.fill(this._gradient)\r\n    } else {\r\n      node.fill({\r\n        color: styles.fillColor\r\n      })\r\n    }\r\n    // 节点使用横线样式，不需要渲染非激活状态的边框样式\r\n    // if (\r\n    //   !this.ctx.isRoot &&\r\n    //   !this.ctx.isGeneralization &&\r\n    //   this.ctx.mindMap.themeConfig.nodeUseLineStyle &&\r\n    //   !this.ctx.getData('isActive')\r\n    // ) {\r\n    //   return\r\n    // }\r\n    node.stroke({\r\n      color: styles.borderColor,\r\n      width: styles.borderWidth,\r\n      dasharray: styles.borderDasharray\r\n    })\r\n  }\r\n\r\n  //  文字\r\n  text(node) {\r\n    const styles = {\r\n      color: this.merge('color'),\r\n      fontFamily: this.merge('fontFamily'),\r\n      fontSize: this.merge('fontSize'),\r\n      fontWeight: this.merge('fontWeight'),\r\n      fontStyle: this.merge('fontStyle'),\r\n      textDecoration: this.merge('textDecoration')\r\n    }\r\n    node\r\n      .fill({\r\n        color: styles.color\r\n      })\r\n      .css({\r\n        'font-family': styles.fontFamily,\r\n        'font-size': styles.fontSize + 'px',\r\n        'font-weight': styles.fontWeight,\r\n        'font-style': styles.fontStyle,\r\n        'text-decoration': styles.textDecoration\r\n      })\r\n  }\r\n\r\n  //  html文字节点\r\n  domText(node, fontSizeScale = 1) {\r\n    const styles = {\r\n      color: this.merge('color'),\r\n      fontFamily: this.merge('fontFamily'),\r\n      fontSize: this.merge('fontSize'),\r\n      fontWeight: this.merge('fontWeight'),\r\n      fontStyle: this.merge('fontStyle'),\r\n      textDecoration: this.merge('textDecoration'),\r\n      textAlign: this.merge('textAlign')\r\n    }\r\n    node.style.color = styles.color\r\n    node.style.textDecoration = styles.textDecoration\r\n    node.style.fontFamily = styles.fontFamily\r\n    node.style.fontSize = styles.fontSize * fontSizeScale + 'px'\r\n    node.style.fontWeight = styles.fontWeight || 'normal'\r\n    node.style.fontStyle = styles.fontStyle\r\n    node.style.textAlign = styles.textAlign\r\n  }\r\n\r\n  //  标签文字\r\n  tagText(node, style) {\r\n    node\r\n      .fill({\r\n        color: '#fff'\r\n      })\r\n      .css({\r\n        'font-size': style.fontSize + 'px'\r\n      })\r\n  }\r\n\r\n  //  标签矩形\r\n  tagRect(node, style) {\r\n    node.fill({\r\n      color: style.fill\r\n    })\r\n    if (style.radius) {\r\n      node.radius(style.radius)\r\n    }\r\n  }\r\n\r\n  //  内置图标\r\n  iconNode(node, color) {\r\n    node.attr({\r\n      fill: color || this.merge('color')\r\n    })\r\n  }\r\n\r\n  //  连线\r\n  line(line, { width, color, dasharray } = {}, enableMarker, childNode) {\r\n    const { customHandleLine } = this.ctx.mindMap.opt\r\n    if (typeof customHandleLine === 'function') {\r\n      customHandleLine(this.ctx, line, { width, color, dasharray })\r\n    }\r\n    line.stroke({ color, dasharray, width }).fill({ color: 'none' })\r\n    // 可以显示箭头\r\n    if (enableMarker) {\r\n      const showMarker = this.merge('showLineMarker', true)\r\n      const childNodeStyle = childNode.style\r\n      // 显示箭头\r\n      if (showMarker) {\r\n        // 创建子节点箭头标记\r\n        childNodeStyle._marker =\r\n          childNodeStyle._marker || childNodeStyle.createMarker()\r\n        // 设置样式\r\n        childNodeStyle._markerPath.stroke({ color }).fill({ color })\r\n        // 箭头位置可能会发生改变，所以需要先删除\r\n        line.attr('marker-start', '')\r\n        line.attr('marker-end', '')\r\n        const dir = childNodeStyle.merge('lineMarkerDir')\r\n        line.marker(dir, childNodeStyle._marker)\r\n      } else if (childNodeStyle._marker) {\r\n        // 不显示箭头，则删除该子节点的箭头标记\r\n        line.attr('marker-start', '')\r\n        line.attr('marker-end', '')\r\n        childNodeStyle._marker.remove()\r\n        childNodeStyle._marker = null\r\n      }\r\n    }\r\n  }\r\n\r\n  // 创建箭头\r\n  createMarker() {\r\n    return this.ctx.lineDraw.marker(20, 20, add => {\r\n      add.ref(8, 5)\r\n      add.size(20, 20)\r\n      add.attr('markerUnits', 'userSpaceOnUse')\r\n      add.attr('orient', 'auto-start-reverse')\r\n      this._markerPath = add.path('M0,0 L2,5 L0,10 L10,5 Z')\r\n    })\r\n  }\r\n\r\n  //  概要连线\r\n  generalizationLine(node) {\r\n    node\r\n      .stroke({\r\n        width: this.merge('generalizationLineWidth', true),\r\n        color: this.merge('generalizationLineColor', true)\r\n      })\r\n      .fill({ color: 'none' })\r\n  }\r\n\r\n  //  展开收起按钮\r\n  iconBtn(node, node2, fillNode) {\r\n    let { color, fill, fontSize, fontColor } = this.ctx.mindMap.opt\r\n      .expandBtnStyle || {\r\n      color: '#808080',\r\n      fill: '#fff',\r\n      fontSize: 12,\r\n      strokeColor: '#333333',\r\n      fontColor: '#333333'\r\n    }\r\n    node.fill({ color: color })\r\n    node2.fill({ color: color })\r\n    fillNode.fill({ color: fill })\r\n    if (this.ctx.mindMap.opt.isShowExpandNum) {\r\n      node.attr({ 'font-size': fontSize + 'px', 'font-color': fontColor })\r\n    }\r\n  }\r\n\r\n  // 是否设置了自定义的样式\r\n  hasCustomStyle() {\r\n    let res = false\r\n    Object.keys(this.ctx.getData()).forEach(item => {\r\n      if (checkIsNodeStyleDataKey(item)) {\r\n        res = true\r\n      }\r\n    })\r\n    return res\r\n  }\r\n\r\n  // 获取自定义的样式\r\n  getCustomStyle() {\r\n    const customStyle = {}\r\n    Object.keys(this.ctx.getData()).forEach(item => {\r\n      if (checkIsNodeStyleDataKey(item)) {\r\n        customStyle[item] = this.ctx.getData(item)\r\n      }\r\n    })\r\n    return customStyle\r\n  }\r\n\r\n  // hover和激活节点\r\n  hoverNode(node) {\r\n    const hoverRectColor =\r\n      this.merge('hoverRectColor') || this.ctx.mindMap.opt.hoverRectColor\r\n    const hoverRectRadius = this.merge('hoverRectRadius')\r\n    node.radius(hoverRectRadius).fill('none').stroke({\r\n      color: hoverRectColor\r\n    })\r\n  }\r\n\r\n  // 所属节点被删除时的操作\r\n  onRemove() {\r\n    if (this._marker) {\r\n      this._marker.remove()\r\n      this._marker = null\r\n    }\r\n    if (this._markerPath) {\r\n      this._markerPath.remove()\r\n      this._markerPath = null\r\n    }\r\n    if (this._gradient) {\r\n      this._gradient.remove()\r\n      this._gradient = null\r\n    }\r\n  }\r\n}\r\n\r\nStyle.cacheStyle = null\r\n\r\nexport default Style\r\n", "import { Polygon, Path, SVG } from '@svgdotjs/svg.js'\r\nimport { CONSTANTS } from '../../../constants/constant'\r\n\r\n//  节点形状类\r\nexport default class Shape {\r\n  constructor(node) {\r\n    this.node = node\r\n    this.mindMap = node.mindMap\r\n  }\r\n\r\n  //  形状需要的padding\r\n  getShapePadding(width, height, paddingX, paddingY) {\r\n    const shape = this.node.getShape()\r\n    const defaultPaddingX = 15\r\n    const defaultPaddingY = 5\r\n    const actWidth = width + paddingX * 2\r\n    const actHeight = height + paddingY * 2\r\n    const actOffset = Math.abs(actWidth - actHeight)\r\n    switch (shape) {\r\n      case CONSTANTS.SHAPE.ROUNDED_RECTANGLE:\r\n        return {\r\n          paddingX: height > width ? (height - width) / 2 : 0,\r\n          paddingY: 0\r\n        }\r\n      case CONSTANTS.SHAPE.DIAMOND:\r\n        return {\r\n          paddingX: width / 2,\r\n          paddingY: height / 2\r\n        }\r\n      case CONSTANTS.SHAPE.PARALLELOGRAM:\r\n        return {\r\n          paddingX: paddingX <= 0 ? defaultPaddingX : 0,\r\n          paddingY: 0\r\n        }\r\n      case CONSTANTS.SHAPE.OUTER_TRIANGULAR_RECTANGLE:\r\n        return {\r\n          paddingX: paddingX <= 0 ? defaultPaddingX : 0,\r\n          paddingY: 0\r\n        }\r\n      case CONSTANTS.SHAPE.INNER_TRIANGULAR_RECTANGLE:\r\n        return {\r\n          paddingX: paddingX <= 0 ? defaultPaddingX : 0,\r\n          paddingY: 0\r\n        }\r\n      case CONSTANTS.SHAPE.ELLIPSE:\r\n        return {\r\n          paddingX: paddingX <= 0 ? defaultPaddingX : 0,\r\n          paddingY: paddingY <= 0 ? defaultPaddingY : 0\r\n        }\r\n      case CONSTANTS.SHAPE.CIRCLE:\r\n        return {\r\n          paddingX: actHeight > actWidth ? actOffset / 2 : 0,\r\n          paddingY: actHeight < actWidth ? actOffset / 2 : 0\r\n        }\r\n      default:\r\n        return {\r\n          paddingX: 0,\r\n          paddingY: 0\r\n        }\r\n    }\r\n  }\r\n\r\n  //  创建形状节点\r\n  createShape() {\r\n    const shape = this.node.getShape()\r\n    let node = null\r\n    // 矩形\r\n    if (shape === CONSTANTS.SHAPE.RECTANGLE) {\r\n      node = this.createRect()\r\n    } else if (shape === CONSTANTS.SHAPE.DIAMOND) {\r\n      // 菱形\r\n      node = this.createDiamond()\r\n    } else if (shape === CONSTANTS.SHAPE.PARALLELOGRAM) {\r\n      // 平行四边形\r\n      node = this.createParallelogram()\r\n    } else if (shape === CONSTANTS.SHAPE.ROUNDED_RECTANGLE) {\r\n      // 圆角矩形\r\n      node = this.createRoundedRectangle()\r\n    } else if (shape === CONSTANTS.SHAPE.OCTAGONAL_RECTANGLE) {\r\n      // 八角矩形\r\n      node = this.createOctagonalRectangle()\r\n    } else if (shape === CONSTANTS.SHAPE.OUTER_TRIANGULAR_RECTANGLE) {\r\n      // 外三角矩形\r\n      node = this.createOuterTriangularRectangle()\r\n    } else if (shape === CONSTANTS.SHAPE.INNER_TRIANGULAR_RECTANGLE) {\r\n      // 内三角矩形\r\n      node = this.createInnerTriangularRectangle()\r\n    } else if (shape === CONSTANTS.SHAPE.ELLIPSE) {\r\n      // 椭圆\r\n      node = this.createEllipse()\r\n    } else if (shape === CONSTANTS.SHAPE.CIRCLE) {\r\n      // 圆\r\n      node = this.createCircle()\r\n    }\r\n    return node\r\n  }\r\n\r\n  // 获取节点减去节点边框宽度、hover节点边框宽度后的尺寸\r\n  getNodeSize() {\r\n    const borderWidth = this.node.getBorderWidth()\r\n    let { width, height } = this.node\r\n    width -= borderWidth\r\n    height -= borderWidth\r\n    return {\r\n      width,\r\n      height\r\n    }\r\n  }\r\n\r\n  // 创建路径节点\r\n  createPath(pathStr) {\r\n    const { customCreateNodePath } = this.mindMap.opt\r\n    if (customCreateNodePath) {\r\n      return SVG(customCreateNodePath(pathStr))\r\n    }\r\n    return new Path().plot(pathStr)\r\n  }\r\n\r\n  // 创建多边形节点\r\n  createPolygon(points) {\r\n    const { customCreateNodePolygon } = this.mindMap.opt\r\n    if (customCreateNodePolygon) {\r\n      return SVG(customCreateNodePolygon(points))\r\n    }\r\n    return new Polygon().plot(points)\r\n  }\r\n\r\n  // 创建矩形\r\n  createRect() {\r\n    let { width, height } = this.getNodeSize()\r\n    let borderRadius = this.node.style.merge('borderRadius')\r\n    const pathStr = `\r\n      M${borderRadius},0\r\n      L${width - borderRadius},0\r\n      C${width - borderRadius},0 ${width},${0} ${width},${borderRadius}\r\n      L${width},${height - borderRadius}\r\n      C${width},${height - borderRadius} ${width},${height} ${\r\n      width - borderRadius\r\n    },${height}\r\n      L${borderRadius},${height}\r\n      C${borderRadius},${height} ${0},${height} ${0},${height - borderRadius}\r\n      L${0},${borderRadius}\r\n      C${0},${borderRadius} ${0},${0} ${borderRadius},${0}\r\n      Z\r\n    `\r\n    return this.createPath(pathStr)\r\n  }\r\n\r\n  //  创建菱形\r\n  createDiamond() {\r\n    let { width, height } = this.getNodeSize()\r\n    let halfWidth = width / 2\r\n    let halfHeight = height / 2\r\n    let topX = halfWidth\r\n    let topY = 0\r\n    let rightX = width\r\n    let rightY = halfHeight\r\n    let bottomX = halfWidth\r\n    let bottomY = height\r\n    let leftX = 0\r\n    let leftY = halfHeight\r\n    const points = [\r\n      [topX, topY],\r\n      [rightX, rightY],\r\n      [bottomX, bottomY],\r\n      [leftX, leftY]\r\n    ]\r\n    return this.createPolygon(points)\r\n  }\r\n\r\n  //  创建平行四边形\r\n  createParallelogram() {\r\n    let { paddingX } = this.node.getPaddingVale()\r\n    paddingX = paddingX || this.node.shapePadding.paddingX\r\n    let { width, height } = this.getNodeSize()\r\n    const points = [\r\n      [paddingX, 0],\r\n      [width, 0],\r\n      [width - paddingX, height],\r\n      [0, height]\r\n    ]\r\n    return this.createPolygon(points)\r\n  }\r\n\r\n  //  创建圆角矩形\r\n  createRoundedRectangle() {\r\n    let { width, height } = this.getNodeSize()\r\n    let halfHeight = height / 2\r\n    const pathStr = `\r\n      M${halfHeight},0\r\n      L${width - halfHeight},0\r\n      A${height / 2},${height / 2} 0 0,1 ${width - halfHeight},${height} \r\n      L${halfHeight},${height}\r\n      A${height / 2},${height / 2} 0 0,1 ${halfHeight},${0}\r\n    `\r\n    return this.createPath(pathStr)\r\n  }\r\n\r\n  //  创建八角矩形\r\n  createOctagonalRectangle() {\r\n    let w = 5\r\n    let { width, height } = this.getNodeSize()\r\n    const points = [\r\n      [0, w],\r\n      [w, 0],\r\n      [width - w, 0],\r\n      [width, w],\r\n      [width, height - w],\r\n      [width - w, height],\r\n      [w, height],\r\n      [0, height - w]\r\n    ]\r\n    return this.createPolygon(points)\r\n  }\r\n\r\n  //  创建外三角矩形\r\n  createOuterTriangularRectangle() {\r\n    let { paddingX } = this.node.getPaddingVale()\r\n    paddingX = paddingX || this.node.shapePadding.paddingX\r\n    let { width, height } = this.getNodeSize()\r\n    const points = [\r\n      [paddingX, 0],\r\n      [width - paddingX, 0],\r\n      [width, height / 2],\r\n      [width - paddingX, height],\r\n      [paddingX, height],\r\n      [0, height / 2]\r\n    ]\r\n    return this.createPolygon(points)\r\n  }\r\n\r\n  //  创建内三角矩形\r\n  createInnerTriangularRectangle() {\r\n    let { paddingX } = this.node.getPaddingVale()\r\n    paddingX = paddingX || this.node.shapePadding.paddingX\r\n    let { width, height } = this.getNodeSize()\r\n    const points = [\r\n      [0, 0],\r\n      [width, 0],\r\n      [width - paddingX / 2, height / 2],\r\n      [width, height],\r\n      [0, height],\r\n      [paddingX / 2, height / 2]\r\n    ]\r\n    return this.createPolygon(points)\r\n  }\r\n\r\n  //  创建椭圆\r\n  createEllipse() {\r\n    let { width, height } = this.getNodeSize()\r\n    let halfWidth = width / 2\r\n    let halfHeight = height / 2\r\n    const pathStr = `\r\n      M${halfWidth},0\r\n      A${halfWidth},${halfHeight} 0 0,1 ${halfWidth},${height} \r\n      M${halfWidth},${height} \r\n      A${halfWidth},${halfHeight} 0 0,1 ${halfWidth},${0} \r\n    `\r\n    return this.createPath(pathStr)\r\n  }\r\n\r\n  //  创建圆\r\n  createCircle() {\r\n    let { width, height } = this.getNodeSize()\r\n    let halfWidth = width / 2\r\n    let halfHeight = height / 2\r\n    const pathStr = `\r\n      M${halfWidth},0\r\n      A${halfWidth},${halfHeight} 0 0,1 ${halfWidth},${height} \r\n      M${halfWidth},${height} \r\n      A${halfWidth},${halfHeight} 0 0,1 ${halfWidth},${0} \r\n    `\r\n    return this.createPath(pathStr)\r\n  }\r\n}\r\n\r\n// 形状列表\r\nexport const shapeList = [\r\n  CONSTANTS.SHAPE.RECTANGLE,\r\n  CONSTANTS.SHAPE.DIAMOND,\r\n  CONSTANTS.SHAPE.PARALLELOGRAM,\r\n  CONSTANTS.SHAPE.ROUNDED_RECTANGLE,\r\n  CONSTANTS.SHAPE.OCTAGONAL_RECTANGLE,\r\n  CONSTANTS.SHAPE.OUTER_TRIANGULAR_RECTANGLE,\r\n  CONSTANTS.SHAPE.INNER_TRIANGULAR_RECTANGLE,\r\n  CONSTANTS.SHAPE.ELLIPSE,\r\n  CONSTANTS.SHAPE.CIRCLE\r\n]\r\n", "import MindMapNode from './MindMapNode'\r\nimport { createUid } from '../../../utils/index'\r\n\r\n// 获取节点概要数据\r\nfunction formatGetGeneralization() {\r\n  const data = this.getData('generalization')\r\n  return Array.isArray(data) ? data : data ? [data] : []\r\n}\r\n\r\n//  检查是否存在概要\r\nfunction checkHasGeneralization() {\r\n  return this.formatGetGeneralization().length > 0\r\n}\r\n\r\n//  检查是否存在自身的概要，非子节点区间\r\nfunction checkHasSelfGeneralization() {\r\n  const list = this.formatGetGeneralization()\r\n  return !!list.find(item => {\r\n    return !item.range || item.range.length <= 0\r\n  })\r\n}\r\n\r\n// 获取概要节点所在的概要列表里的索引\r\nfunction getGeneralizationNodeIndex(node) {\r\n  return this._generalizationList.findIndex(item => {\r\n    return item.generalizationNode.uid === node.uid\r\n  })\r\n}\r\n\r\n//  创建概要节点\r\nfunction createGeneralizationNode() {\r\n  if (this.isGeneralization || !this.checkHasGeneralization()) {\r\n    return\r\n  }\r\n  let maxWidth = 0\r\n  let maxHeight = 0\r\n  const list = this.formatGetGeneralization()\r\n  list.forEach((item, index) => {\r\n    let cur = this._generalizationList[index]\r\n    if (!cur) {\r\n      cur = this._generalizationList[index] = {}\r\n    }\r\n    // 所属节点\r\n    cur.node = this\r\n    // 区间范围\r\n    cur.range = item.range\r\n    // 线和节点\r\n    if (!cur.generalizationLine) {\r\n      cur.generalizationLine = this.lineDraw.path()\r\n    }\r\n    if (!cur.generalizationNode) {\r\n      cur.generalizationNode = new MindMapNode({\r\n        data: {\r\n          inserting: item.inserting,\r\n          data: item\r\n        },\r\n        uid: createUid(),\r\n        renderer: this.renderer,\r\n        mindMap: this.mindMap,\r\n        isGeneralization: true\r\n      })\r\n    }\r\n    delete item.inserting\r\n    // 关联所属节点\r\n    cur.generalizationNode.generalizationBelongNode = this\r\n    // 大小\r\n    if (cur.generalizationNode.width > maxWidth)\r\n      maxWidth = cur.generalizationNode.width\r\n    if (cur.generalizationNode.height > maxHeight)\r\n      maxHeight = cur.generalizationNode.height\r\n    // 如果该概要为激活状态，那么加入激活节点列表\r\n    if (item.isActive) {\r\n      this.renderer.addNodeToActiveList(cur.generalizationNode)\r\n    }\r\n  })\r\n  this._generalizationNodeWidth = maxWidth\r\n  this._generalizationNodeHeight = maxHeight\r\n}\r\n\r\n//  更新概要节点\r\nfunction updateGeneralization() {\r\n  if (this.isGeneralization) return\r\n  this.removeGeneralization()\r\n  this.createGeneralizationNode()\r\n}\r\n\r\n//  渲染概要节点\r\nfunction renderGeneralization(forceRender) {\r\n  if (this.isGeneralization) return\r\n  this.updateGeneralizationData()\r\n  const list = this.formatGetGeneralization()\r\n  if (list.length <= 0 || this.getData('expand') === false) {\r\n    this.removeGeneralization()\r\n    return\r\n  }\r\n  if (list.length !== this._generalizationList.length) {\r\n    this.removeGeneralization()\r\n  }\r\n  this.createGeneralizationNode()\r\n  this.renderer.layout.renderGeneralization(this._generalizationList)\r\n  this._generalizationList.forEach(item => {\r\n    this.style.generalizationLine(item.generalizationLine)\r\n    item.generalizationNode.render(() => {}, forceRender)\r\n  })\r\n}\r\n\r\n// 更新节点概要数据\r\nfunction updateGeneralizationData() {\r\n  const childrenLength = this.getChildrenLength()\r\n  const list = this.formatGetGeneralization()\r\n  const newList = []\r\n  list.forEach(item => {\r\n    if (!item.range) {\r\n      newList.push(item)\r\n      return\r\n    }\r\n    if (\r\n      item.range.length > 0 &&\r\n      item.range[0] <= childrenLength - 1 &&\r\n      item.range[1] <= childrenLength - 1\r\n    ) {\r\n      newList.push(item)\r\n    }\r\n  })\r\n  if (newList.length !== list.length) {\r\n    this.setData({\r\n      generalization: newList\r\n    })\r\n  }\r\n}\r\n\r\n//  删除概要节点\r\nfunction removeGeneralization() {\r\n  if (this.isGeneralization) return\r\n  this._generalizationList.forEach(item => {\r\n    item.generalizationNode.style.onRemove()\r\n    if (item.generalizationLine) {\r\n      item.generalizationLine.remove()\r\n      item.generalizationLine = null\r\n    }\r\n    if (item.generalizationNode) {\r\n      // 删除概要节点时要同步从激活节点里删除\r\n      this.renderer.removeNodeFromActiveList(item.generalizationNode)\r\n      item.generalizationNode.remove()\r\n      item.generalizationNode = null\r\n    }\r\n  })\r\n  this._generalizationList = []\r\n  // hack修复当激活一个节点时创建概要，然后立即激活创建的概要节点后会重复创建概要节点并且无法删除的问题\r\n  if (this.generalizationBelongNode) {\r\n    this.nodeDraw\r\n      .find('.generalization_' + this.generalizationBelongNode.uid)\r\n      .remove()\r\n  }\r\n}\r\n\r\n//  隐藏概要节点\r\nfunction hideGeneralization() {\r\n  if (this.isGeneralization) return\r\n  this._generalizationList.forEach(item => {\r\n    if (item.generalizationLine) item.generalizationLine.hide()\r\n    if (item.generalizationNode) item.generalizationNode.hide()\r\n  })\r\n}\r\n\r\n//  显示概要节点\r\nfunction showGeneralization() {\r\n  if (this.isGeneralization) return\r\n  this._generalizationList.forEach(item => {\r\n    if (item.generalizationLine) item.generalizationLine.show()\r\n    if (item.generalizationNode) item.generalizationNode.show()\r\n  })\r\n}\r\n\r\n// 设置概要节点的透明度\r\nfunction setGeneralizationOpacity(val) {\r\n  this._generalizationList.forEach(item => {\r\n    item.generalizationLine.opacity(val)\r\n    item.generalizationNode.group.opacity(val)\r\n  })\r\n}\r\n\r\n// 处理概要节点鼠标移入事件\r\nfunction handleGeneralizationMouseenter() {\r\n  const belongNode = this.generalizationBelongNode\r\n  const list = belongNode.formatGetGeneralization()\r\n  const index = belongNode.getGeneralizationNodeIndex(this)\r\n  const generalizationData = list[index]\r\n  // 如果主题中设置了hoverRectColor颜色，那么使用该颜色\r\n  // 否则使用hoverRectColor实例化选项的颜色\r\n  // 兜底使用highlightNode方法的默认颜色\r\n  const hoverRectColor = this.getStyle('hoverRectColor')\r\n  const color = hoverRectColor || this.mindMap.opt.hoverRectColor\r\n  const style = color\r\n    ? {\r\n        stroke: color\r\n      }\r\n    : null\r\n  // 区间概要，框子节点\r\n  if (\r\n    Array.isArray(generalizationData.range) &&\r\n    generalizationData.range.length > 0\r\n  ) {\r\n    this.mindMap.renderer.highlightNode(\r\n      belongNode,\r\n      generalizationData.range,\r\n      style\r\n    )\r\n  } else {\r\n    // 否则框自己\r\n    this.mindMap.renderer.highlightNode(belongNode, null, style)\r\n  }\r\n}\r\n\r\n// 处理概要节点鼠标移出事件\r\nfunction handleGeneralizationMouseleave() {\r\n  this.mindMap.renderer.closeHighlightNode()\r\n}\r\n\r\nexport default {\r\n  formatGetGeneralization,\r\n  checkHasGeneralization,\r\n  checkHasSelfGeneralization,\r\n  getGeneralizationNodeIndex,\r\n  createGeneralizationNode,\r\n  updateGeneralization,\r\n  updateGeneralizationData,\r\n  renderGeneralization,\r\n  removeGeneralization,\r\n  hideGeneralization,\r\n  showGeneralization,\r\n  setGeneralizationOpacity,\r\n  handleGeneralizationMouseenter,\r\n  handleGeneralizationMouseleave\r\n}\r\n", "//  展开按钮\r\nconst open = `<svg viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\"><path d=\"M475.136 327.168v147.968h-147.968v74.24h147.968v147.968h74.24v-147.968h147.968v-74.24h-147.968v-147.968h-74.24z m36.864-222.208c225.28 0 407.04 181.76 407.04 407.04s-181.76 407.04-407.04 407.04-407.04-181.76-407.04-407.04 181.76-407.04 407.04-407.04z m0-74.24c-265.216 0-480.768 215.552-480.768 480.768s215.552 480.768 480.768 480.768 480.768-215.552 480.768-480.768-215.552-480.768-480.768-480.768z\"></path></svg>`\r\n\r\n//  收缩按钮\r\nconst close = `<svg viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\"><path d=\"M512 105.472c225.28 0 407.04 181.76 407.04 407.04s-181.76 407.04-407.04 407.04-407.04-181.76-407.04-407.04 181.76-407.04 407.04-407.04z m0-74.24c-265.216 0-480.768 215.552-480.768 480.768s215.552 480.768 480.768 480.768 480.768-215.552 480.768-480.768-215.552-480.768-480.768-480.768z\"></path><path d=\"M252.928 474.624h518.144v74.24h-518.144z\"></path></svg>`\r\n\r\n// 删除按钮\r\nconst remove = `<svg width=\"14px\" height=\"14px\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\"><path fill=\"#ffffff\" d=\"M512 105.472c225.28 0 407.04 181.76 407.04 407.04s-181.76 407.04-407.04 407.04-407.04-181.76-407.04-407.04 181.76-407.04 407.04-407.04z m0-74.24c-265.216 0-480.768 215.552-480.768 480.768s215.552 480.768 480.768 480.768 480.768-215.552 480.768-480.768-215.552-480.768-480.768-480.768z\"></path><path fill=\"#ffffff\" d=\"M252.928 474.624h518.144v74.24h-518.144z\"></path></svg>`\r\n\r\n// 图片调整按钮\r\nconst imgAdjust = `<svg width=\"12px\" height=\"12px\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#ffffff\" d=\"M1008.128 614.4a25.6 25.6 0 0 0-27.648 5.632l-142.848 142.848L259.072 186.88 401.92 43.52A25.6 25.6 0 0 0 384 0h-358.4a25.6 25.6 0 0 0-25.6 25.6v358.4a25.6 25.6 0 0 0 43.52 17.92l143.36-142.848 578.048 578.048-142.848 142.848a25.6 25.6 0 0 0 17.92 43.52h358.4a25.6 25.6 0 0 0 25.6-25.6v-358.4a25.6 25.6 0 0 0-15.872-25.088z\"  /></svg>`\r\n\r\n// 快捷创建子节点按钮\r\nconst quickCreateChild = `<svg viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\"><path d=\"M514.048 62.464q93.184 0 175.616 35.328t143.872 96.768 96.768 143.872 35.328 175.616q0 94.208-35.328 176.128t-96.768 143.36-143.872 96.768-175.616 35.328q-94.208 0-176.64-35.328t-143.872-96.768-96.768-143.36-35.328-176.128q0-93.184 35.328-175.616t96.768-143.872 143.872-96.768 176.64-35.328zM772.096 576.512q26.624 0 45.056-18.944t18.432-45.568-18.432-45.056-45.056-18.432l-192.512 0 0-192.512q0-26.624-18.944-45.568t-45.568-18.944-45.056 18.944-18.432 45.568l0 192.512-192.512 0q-26.624 0-45.056 18.432t-18.432 45.056 18.432 45.568 45.056 18.944l192.512 0 0 191.488q0 26.624 18.432 45.568t45.056 18.944 45.568-18.944 18.944-45.568l0-191.488 192.512 0z\"></path></svg>`\r\n\r\nexport default {\r\n  open,\r\n  close,\r\n  remove,\r\n  imgAdjust,\r\n  quickCreateChild\r\n}\r\n", "import btnsSvg from '../../../svg/btns'\r\nimport { SVG, Circle, G, Text } from '@svgdotjs/svg.js'\r\nimport { isUndef } from '../../../utils'\r\n\r\n// 创建展开收起按钮的内容节点\r\nfunction createExpandNodeContent() {\r\n  if (this._openExpandNode) {\r\n    return\r\n  }\r\n  const { expandBtnSize, expandBtnIcon, isShowExpandNum } = this.mindMap.opt\r\n  let { close, open } = expandBtnIcon || {}\r\n  // 根据配置判断是否显示数量按钮\r\n  if (isShowExpandNum) {\r\n    // 展开的节点\r\n    this._openExpandNode = new Text()\r\n    this._openExpandNode.addClass('smm-expand-btn-text')\r\n    // 文本垂直居中\r\n    this._openExpandNode.attr({\r\n      'text-anchor': 'middle',\r\n      'dominant-baseline': 'middle',\r\n      x: expandBtnSize / 2,\r\n      y: 2\r\n    })\r\n  } else {\r\n    this._openExpandNode = SVG(open || btnsSvg.open).size(\r\n      expandBtnSize,\r\n      expandBtnSize\r\n    )\r\n    this._openExpandNode.x(0).y(-expandBtnSize / 2)\r\n  }\r\n  // 收起的节点\r\n  this._closeExpandNode = SVG(close || btnsSvg.close).size(\r\n    expandBtnSize,\r\n    expandBtnSize\r\n  )\r\n  this._closeExpandNode.x(0).y(-expandBtnSize / 2)\r\n  // 填充节点\r\n  this._fillExpandNode = new Circle().size(expandBtnSize)\r\n  this._fillExpandNode.x(0).y(-expandBtnSize / 2)\r\n\r\n  // 设置样式\r\n  this.style.iconBtn(\r\n    this._openExpandNode,\r\n    this._closeExpandNode,\r\n    this._fillExpandNode\r\n  )\r\n}\r\nfunction sumNode(data = []) {\r\n  return data.reduce(\r\n    (total, cur) => total + this.sumNode(cur.children || []),\r\n    data.length\r\n  )\r\n}\r\n//  创建或更新展开收缩按钮内容\r\nfunction updateExpandBtnNode() {\r\n  let { expand } = this.getData()\r\n  // 如果本次和上次的展开状态一样则返回\r\n  if (expand === this._lastExpandBtnType) return\r\n  if (this._expandBtn) {\r\n    this._expandBtn.clear()\r\n  }\r\n  this.createExpandNodeContent()\r\n  let node\r\n  if (expand === false) {\r\n    node = this._openExpandNode\r\n    this._lastExpandBtnType = false\r\n  } else {\r\n    node = this._closeExpandNode\r\n    this._lastExpandBtnType = true\r\n  }\r\n\r\n  if (this._expandBtn) {\r\n    // 如果是收起按钮加上边框\r\n    let { isShowExpandNum, expandBtnStyle, expandBtnNumHandler } =\r\n      this.mindMap.opt\r\n    if (isShowExpandNum) {\r\n      if (!expand) {\r\n        // 数字按钮添加边框\r\n        this._fillExpandNode.stroke({\r\n          color: expandBtnStyle.strokeColor\r\n        })\r\n        // 计算子节点数量\r\n        let count = this.sumNode(this.nodeData.children || [])\r\n        if (typeof expandBtnNumHandler === 'function') {\r\n          const res = expandBtnNumHandler(count, this)\r\n          if (!isUndef(res)) {\r\n            count = res\r\n          }\r\n        }\r\n        node.text(String(count))\r\n      } else {\r\n        this._fillExpandNode.stroke('none')\r\n      }\r\n    }\r\n    this._expandBtn.add(this._fillExpandNode).add(node)\r\n  }\r\n}\r\n\r\n//  更新展开收缩按钮位置\r\nfunction updateExpandBtnPos() {\r\n  if (!this._expandBtn) {\r\n    return\r\n  }\r\n  this.renderer.layout.renderExpandBtn(this, this._expandBtn)\r\n}\r\n\r\n//  创建展开收缩按钮\r\nfunction renderExpandBtn() {\r\n  if (this.getChildrenLength() <= 0 || this.isRoot) {\r\n    return\r\n  }\r\n  if (this._expandBtn) {\r\n    this.group.add(this._expandBtn)\r\n  } else {\r\n    this._expandBtn = new G()\r\n    this._expandBtn.on('mouseover', e => {\r\n      e.stopPropagation()\r\n      this._expandBtn.css({\r\n        cursor: 'pointer'\r\n      })\r\n    })\r\n    this._expandBtn.on('mouseout', e => {\r\n      e.stopPropagation()\r\n      this._expandBtn.css({\r\n        cursor: 'auto'\r\n      })\r\n    })\r\n    this._expandBtn.on('click', e => {\r\n      e.stopPropagation()\r\n      // 展开收缩\r\n      this.mindMap.execCommand('SET_NODE_EXPAND', this, !this.getData('expand'))\r\n      this.mindMap.emit('expand_btn_click', this)\r\n    })\r\n    this._expandBtn.on('dblclick', e => {\r\n      e.stopPropagation()\r\n    })\r\n    this._expandBtn.addClass('smm-expand-btn')\r\n    this.group.add(this._expandBtn)\r\n  }\r\n  this._showExpandBtn = true\r\n  this.updateExpandBtnNode()\r\n  this.updateExpandBtnPos()\r\n}\r\n\r\n//  移除展开收缩按钮\r\nfunction removeExpandBtn() {\r\n  if (this._expandBtn && this._showExpandBtn) {\r\n    this._expandBtn.remove()\r\n    this._showExpandBtn = false\r\n  }\r\n}\r\n\r\n// 显示展开收起按钮\r\nfunction showExpandBtn() {\r\n  const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n  if (alwaysShowExpandBtn || notShowExpandBtn) return\r\n  setTimeout(() => {\r\n    this.renderExpandBtn()\r\n  }, 0)\r\n}\r\n\r\n// 隐藏展开收起按钮\r\nfunction hideExpandBtn() {\r\n  const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n  if (alwaysShowExpandBtn || this._isMouseenter || notShowExpandBtn) return\r\n  // 非激活状态且展开状态鼠标移出才隐藏按钮\r\n  let { isActive, expand } = this.getData()\r\n  if (!isActive && expand) {\r\n    setTimeout(() => {\r\n      this.removeExpandBtn()\r\n    }, 0)\r\n  }\r\n}\r\n\r\nexport default {\r\n  createExpandNodeContent,\r\n  updateExpandBtnNode,\r\n  updateExpandBtnPos,\r\n  renderExpandBtn,\r\n  removeExpandBtn,\r\n  showExpandBtn,\r\n  hideExpandBtn,\r\n  sumNode\r\n}\r\n", "//  设置数据\r\nfunction setData(data = {}) {\r\n  this.mindMap.execCommand('SET_NODE_DATA', this, data)\r\n}\r\n\r\n//  设置文本\r\nfunction setText(text, richText, resetRichText) {\r\n  this.mindMap.execCommand('SET_NODE_TEXT', this, text, richText, resetRichText)\r\n}\r\n\r\n//  设置图片\r\nfunction setImage(imgData) {\r\n  this.mindMap.execCommand('SET_NODE_IMAGE', this, imgData)\r\n}\r\n\r\n//  设置图标\r\nfunction setIcon(icons) {\r\n  this.mindMap.execCommand('SET_NODE_ICON', this, icons)\r\n}\r\n\r\n//  设置超链接\r\nfunction setHyperlink(link, title) {\r\n  this.mindMap.execCommand('SET_NODE_HYPERLINK', this, link, title)\r\n}\r\n\r\n//  设置备注\r\nfunction setNote(note) {\r\n  this.mindMap.execCommand('SET_NODE_NOTE', this, note)\r\n}\r\n\r\n//  设置附件\r\nfunction setAttachment(url, name) {\r\n  this.mindMap.execCommand('SET_NODE_ATTACHMENT', this, url, name)\r\n}\r\n\r\n//  设置标签\r\nfunction setTag(tag) {\r\n  this.mindMap.execCommand('SET_NODE_TAG', this, tag)\r\n}\r\n\r\n//  设置形状\r\nfunction setShape(shape) {\r\n  this.mindMap.execCommand('SET_NODE_SHAPE', this, shape)\r\n}\r\n\r\n//  修改某个样式\r\nfunction setStyle(prop, value) {\r\n  this.mindMap.execCommand('SET_NODE_STYLE', this, prop, value)\r\n}\r\n\r\n//  修改多个样式\r\nfunction setStyles(style) {\r\n  this.mindMap.execCommand('SET_NODE_STYLES', this, style)\r\n}\r\n\r\nexport default {\r\n  setData,\r\n  setText,\r\n  setImage,\r\n  setIcon,\r\n  setHyperlink,\r\n  setNote,\r\n  setAttachment,\r\n  setTag,\r\n  setShape,\r\n  setStyle,\r\n  setStyles\r\n}\r\n", "import { mergerIconList } from '../utils'\r\n\r\n// 超链接图标\r\nconst hyperlink =\r\n  '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M435.484444 251.733333v68.892445L295.822222 320.682667a168.504889 168.504889 0 0 0-2.844444 336.952889h142.506666v68.892444H295.822222a237.397333 237.397333 0 0 1 0-474.794667h139.662222z m248.945778 0a237.397333 237.397333 0 0 1 0 474.851556H544.654222v-69.006222l139.776 0.056889a168.504889 168.504889 0 0 0 2.844445-336.952889H544.597333V251.676444h139.776z m-25.827555 203.946667a34.474667 34.474667 0 0 1 0 68.892444H321.649778a34.474667 34.474667 0 0 1 0-68.892444h336.952889z\" ></path></svg>'\r\n\r\n// 备注图标\r\nconst note =\r\n  '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M152.768 985.984 152.768 49.856l434.56 0 66.816 0 234.048 267.392 0 66.816 0 601.92L152.768 985.984 152.768 985.984zM654.144 193.088l0 124.16 108.736 0L654.144 193.088 654.144 193.088zM821.312 384.064l-167.168 0L587.328 384.064 587.328 317.312 587.328 116.736 219.584 116.736 219.584 919.04l601.728 0L821.312 384.064 821.312 384.064zM386.688 517.888 319.808 517.888 319.808 450.944l66.816 0L386.624 517.888 386.688 517.888zM386.688 651.584 319.808 651.584 319.808 584.704l66.816 0L386.624 651.584 386.688 651.584zM386.688 785.344 319.808 785.344l0-66.88 66.816 0L386.624 785.344 386.688 785.344zM721.024 517.888 453.632 517.888 453.632 450.944l267.392 0L721.024 517.888 721.024 517.888zM654.144 651.584 453.632 651.584 453.632 584.704l200.512 0L654.144 651.584 654.144 651.584zM620.672 785.344l-167.04 0 0-66.88 167.04 0L620.672 785.344 620.672 785.344z\" ></path></svg>'\r\n\r\n// 附件图标\r\nconst attachment =\r\n  '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" width=\"128\" height=\"128\"><path d=\"M516.373333 375.978667l136.576-136.576a147.797333 147.797333 0 0 1 208.853334-0.021334 147.690667 147.690667 0 0 1-0.042667 208.832l-204.8 204.778667v0.021333l-153.621333 153.6c-85.973333 85.973333-225.28 85.973333-311.253334 0.021334-85.994667-85.973333-85.973333-225.216 0.149334-311.36L431.146667 256.362667a21.333333 21.333333 0 0 0-30.165334-30.165334L162.069333 465.066667c-102.805333 102.826667-102.826667 269.056-0.149333 371.733333 102.613333 102.613333 268.970667 102.613333 371.584 0l153.6-153.642667h0.021333l0.021334-0.021333 204.778666-204.778667c74.325333-74.325333 74.346667-194.858667 0.021334-269.184-74.24-74.24-194.88-74.24-269.162667 0.042667l-136.576 136.554667-187.626667 187.626666a117.845333 117.845333 0 0 0-0.106666 166.826667 118.037333 118.037333 0 0 0 166.826666-0.106667l255.850667-255.829333a21.333333 21.333333 0 0 0-30.165333-30.165333L435.136 669.973333a75.370667 75.370667 0 0 1-106.496 0.106667 75.178667 75.178667 0 0 1 0.128-106.496l187.605333-187.605333z\" ></path></svg>'\r\n\r\n// 节点icon\r\nexport const nodeIconList = [\r\n  {\r\n    name: '优先级图标',\r\n    type: 'priority',\r\n    list: [\r\n      {\r\n        name: '1',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512.042667 1024C229.248 1024 0 794.794667 0 511.957333 0 229.205333 229.248 0 512.042667 0 794.752 0 1024 229.205333 1024 511.957333 1024 794.794667 794.752 1024 512.042667 1024z\" fill=\"#E93B30\"></path><path d=\"M580.309333 256h-75.52c-10.666667 29.824-30.165333 55.765333-58.709333 78.165333-28.416 22.314667-54.869333 37.418667-79.146667 45.397334v84.608a320 320 0 0 0 120.234667-70.698667v352.085333H580.266667V256z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '2',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M511.957333 1024C229.248 1024 0 794.752 0 512S229.248 0 511.957333 0C794.752 0 1024 229.248 1024 512s-229.248 512-512.042667 512z\" fill=\"#FA8D2E\"></path><path d=\"M667.946667 658.602667h-185.301334c4.864-8.533333 11.178667-17.066667 19.072-25.984 7.808-8.874667 26.453333-26.837333 55.936-53.888 29.525333-27.008 49.877333-47.786667 61.226667-62.165334 16.981333-21.717333 29.44-42.453333 37.290667-62.293333 7.808-19.84 11.776-40.746667 11.776-62.677333 0-38.570667-13.738667-70.741333-41.088-96.725334C599.466667 268.928 561.706667 256 513.834667 256c-43.690667 0-80.128 11.136-109.354667 33.578667-29.098667 22.4-46.506667 59.306667-52.010667 110.805333l93.184 9.301333c1.792-27.349333 8.405333-46.890667 19.754667-58.624 11.434667-11.776 26.837333-17.664 46.165333-17.664 19.541333 0 34.858667 5.589333 45.909334 16.768 11.136 11.264 16.682667 27.221333 16.682666 48.042667 0 18.858667-6.4 37.930667-19.242666 57.258667-9.472 14.037333-35.157333 40.533333-77.098667 79.872-52.096 48.554667-87.04 87.509333-104.704 116.821333A226.688 226.688 0 0 0 341.333333 745.429333h326.613334v-86.826666z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '3',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0C229.248 0 0 229.248 0 512s229.248 512 512 512 512-229.248 512-512S794.752 0 512 0z\" fill=\"#2E66FA\"></path><path d=\"M627.754667 731.733333c-29.354667 25.088-66.901333 37.632-112.725334 37.632-44.928 0-81.792-11.52-110.592-34.773333-33.066667-26.538667-49.877333-64.469333-50.304-114.133333h92.16c0.426667 21.76 7.552 38.314667 21.333334 49.664 12.288 10.88 28.117333 16.341333 47.402666 16.341333 20.309333 0 36.778667-6.101333 49.322667-18.432 12.544-12.330667 18.773333-29.568 18.773333-51.797333 0-21.290667-6.229333-38.186667-18.773333-50.773334-12.544-12.501333-29.866667-18.773333-52.138667-18.773333h-13.525333v-80.042667H512c42.112 0 63.274667-21.034667 63.274667-63.146666 0-20.309333-5.888-36.096-17.706667-47.445334a60.757333 60.757333 0 0 0-43.818667-17.066666c-17.493333 0-32 5.504-43.434666 16.298666-11.562667 10.88-17.792 25.728-18.773334 44.714667H359.68c0.981333-43.946667 16.042667-78.976 45.397333-104.96 29.354667-25.941333 65.706667-39.04 109.226667-39.04 44.928 0 81.792 13.525333 110.592 40.490667 28.8 26.922667 43.306667 61.610667 43.306667 104.149333 0 48.213333-19.413333 82.688-58.154667 103.552 43.52 23.125333 65.28 61.44 65.28 114.858667 0 48.128-15.957333 85.76-47.573333 112.682666z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '4',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512.042667 1024C229.248 1024 0 794.794667 0 512.042667 0 229.205333 229.248 0 512.042667 0 794.752 0 1024 229.205333 1024 512.042667 1024 794.794667 794.752 1024 512.042667 1024z\" fill=\"#6D768D\"></path><path d=\"M600.96 256v309.802667h60.117333v81.536h-60.16v98.218666h-90.154666v-98.218666H311.466667v-81.237334L522.666667 256h78.293333zM510.72 399.104l-112.042667 166.698667h112.042667V399.104z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '5',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512.042667 1024C229.248 1024 0 794.794667 0 512.042667 0 229.205333 229.248 0 512.042667 0 794.752 0 1024 229.205333 1024 512.042667 1024 794.794667 794.752 1024 512.042667 1024z\" fill=\"#6D768D\"></path><path d=\"M470.912 343.552h175.786667V256H400.256l-47.786667 253.952 75.434667 10.837333c21.205333-23.552 45.269333-35.413333 72.021333-35.413333 21.546667 0 38.997333 7.509333 52.437334 22.4 13.312 15.018667 20.053333 37.418667 20.053333 67.328 0 31.872-6.741333 55.765333-20.181333 71.552-13.397333 15.872-29.866667 23.765333-49.237334 23.765333-17.066667 0-32.085333-6.186667-45.013333-18.432-13.013333-12.373333-20.821333-29.013333-23.466667-50.133333L341.333333 611.498667c5.546667 40.874667 22.485333 73.429333 50.730667 97.621333 28.330667 24.32 64.938667 36.437333 109.866667 36.437333 56.149333 0 100.053333-21.546667 131.754666-64.554666a176.64 176.64 0 0 0 34.816-107.52c0-48.042667-14.378667-87.210667-43.221333-117.333334-28.8-30.208-63.957333-45.312-105.514667-45.312-21.674667 0-42.922667 5.248-63.829333 15.616l14.976-82.901333z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '6',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 1024C229.248 1024 0 794.794667 0 512.042667 0 229.205333 229.248 0 512 0c282.88 0 512 229.205333 512 512.042667C1024 794.794667 794.88 1024 512 1024z\" fill=\"#6D768D\"></path><path d=\"M519.210667 256c36.992 0 67.626667 10.368 91.776 31.189333 24.192 20.821333 39.68 51.029333 46.293333 90.709334l-90.197333 9.984c-2.176-18.56-7.978667-32.298667-17.28-41.173334-9.258667-8.874667-21.418667-13.226667-36.224-13.226666-19.754667 0-36.437333 8.789333-50.048 26.453333-13.696 17.664-22.314667 54.613333-25.856 110.549333 23.296-27.52 52.138667-41.258667 86.656-41.258666 38.997333 0 72.362667 14.805333 100.181333 44.544 27.733333 29.696 41.685333 68.010667 41.685333 114.858666 0 49.877333-14.634667 89.856-43.818666 119.936-29.226667 30.208-66.730667 45.226667-112.554667 45.226667-49.066667 0-89.429333-19.072-121.130667-57.344C357.12 658.218667 341.333333 595.541333 341.333333 508.416c0-89.344 16.469333-153.813333 49.493334-193.194667C423.722667 275.754667 466.56 256 519.168 256z m-9.472 241.834667c-17.962667 0-33.066667 6.997333-45.525334 21.12-12.330667 14.037333-18.56 34.858667-18.56 62.293333 0 30.421333 6.912 53.76 20.906667 70.4 13.952 16.469333 29.866667 24.746667 47.786667 24.746667 17.28 0 31.701333-6.826667 43.178666-20.309334 11.52-13.525333 17.237333-35.669333 17.237334-66.56 0-31.658667-6.186667-54.869333-18.517334-69.546666a58.197333 58.197333 0 0 0-46.506666-22.144z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '7',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512.042667 1024C229.248 1024 0 794.752 0 512S229.248 0 512.042667 0C794.752 0 1024 229.248 1024 512s-229.248 512-511.957333 512z\" fill=\"#6D768D\"></path><path d=\"M673.024 273.066667H354.133333v86.869333h212.224a691.2 691.2 0 0 0-104.746666 187.989333c-26.026667 70.101333-39.978667 138.88-41.429334 206.293334h89.6c-0.298667-42.922667 6.698667-91.776 21.034667-146.474667a654.72 654.72 0 0 1 62.08-154.965333c27.136-48.554667 53.888-85.76 80.128-111.701334V273.066667z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '8',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 1024C229.248 1024 0 794.752 0 512S229.248 0 512 0s512 229.248 512 512-229.248 512-512 512z\" fill=\"#6D768D\"></path><path d=\"M512.426667 256c46.208 0 82.048 11.861333 107.605333 35.541333 25.6 23.68 38.314667 53.674667 38.314667 89.898667 0 22.613333-5.802667 42.666667-17.578667 60.330667a111.445333 111.445333 0 0 1-49.450667 40.277333c26.965333 10.837333 47.36 26.752 61.312 47.658667 13.994667 20.906667 21.034667 45.013333 21.034667 72.362666 0 45.098667-14.336 81.834667-42.965333 109.952-28.586667 28.245333-66.602667 42.368-114.090667 42.368-44.245333 0-81.066667-11.648-110.464-34.986666-34.645333-27.52-52.010667-65.28-52.010667-113.365334 0-26.368 6.528-50.645333 19.626667-72.746666 13.056-22.144 33.578667-39.210667 61.696-51.242667-24.064-10.154667-41.557333-24.192-52.48-41.941333a109.824 109.824 0 0 1-16.512-58.666667c0-36.224 12.757333-66.218667 37.973333-89.898667 25.386667-23.68 61.354667-35.541333 108.032-35.541333z m1.28 265.429333c-22.784 0-39.722667 7.978667-50.901334 23.893334-11.136 15.786667-16.64 33.066667-16.64 51.498666 0 25.984 6.485333 46.208 19.712 60.714667 13.098667 14.506667 29.525333 21.802667 49.152 21.802667 19.242667 0 35.157333-6.997333 47.786667-20.992 12.629333-13.909333 18.858667-34.048 18.858667-60.416 0-23.082667-6.314667-41.557333-19.2-55.466667a63.274667 63.274667 0 0 0-48.725334-21.034667z m-0.341334-191.488c-17.792 0-32 5.333333-42.581333 16-10.538667 10.666667-15.872 24.746667-15.872 42.325334 0 18.645333 5.248 33.152 15.701333 43.648 10.453333 10.453333 24.362667 15.658667 41.770667 15.658666 17.664 0 31.658667-5.290667 42.24-15.872 10.538667-10.581333 15.872-25.173333 15.872-43.818666 0-17.493333-5.248-31.573333-15.701333-42.154667s-24.277333-15.786667-41.429334-15.786667z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '9',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 1024C229.248 1024 0 794.794667 0 512.042667 0 229.333333 229.248 0 512 0c282.88 0 512 229.333333 512 512.042667C1024 794.794667 794.88 1024 512 1024z\" fill=\"#6D768D\"></path><path d=\"M497.28 256c49.365333 0 89.856 19.157333 121.429333 57.429333 31.701333 38.229333 47.488 101.205333 47.488 188.842667 0 89.173333-16.384 153.386667-49.365333 192.853333-32.853333 39.594667-75.605333 59.264-128.426667 59.264-37.888 0-68.608-10.154667-91.989333-30.506666s-38.4-50.816-45.013333-91.306667l90.112-9.984c2.261333 18.474667 8.021333 32.085333 17.28 41.088 9.173333 8.874667 21.418667 13.312 36.608 13.312 19.2 0 35.541333-8.874667 48.981333-26.752 13.44-17.749333 22.016-54.613333 25.770667-110.549333-23.466667 27.264-52.821333 40.874667-88.064 40.874666-38.314667 0-71.253333-14.72-99.114667-44.330666C355.242667 506.709333 341.333333 468.224 341.333333 420.864c0-49.493333 14.592-89.258667 43.946667-119.466667C414.549333 271.104 451.925333 256 497.237333 256z m-4.352 77.482667c-17.237333 0-31.658667 6.826667-43.008 20.437333-11.477333 13.653333-17.194667 35.84-17.194667 66.816 0 31.402667 6.229333 54.485333 18.645334 69.205333 12.458667 14.72 27.946667 22.101333 46.592 22.101334 18.005333 0 33.066667-7.082667 45.44-21.205334 12.330667-14.208 18.432-35.029333 18.432-62.506666 0-29.994667-6.912-53.376-20.821334-69.973334-13.824-16.597333-29.866667-24.874667-48.085333-24.874666z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '10',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512.042667 1024C229.248 1024 0 794.794667 0 511.957333 0 229.205333 229.248 0 512.042667 0 794.752 0 1024 229.205333 1024 511.957333 1024 794.794667 794.752 1024 512.042667 1024z\" fill=\"#6D768D\"></path><path d=\"M619.946667 273.066667c46.976 0 83.754667 16.042667 110.250666 48.042666 31.573333 37.973333 47.36 100.864 47.36 188.672 0 87.722667-15.829333 150.698667-47.658666 189.056-26.325333 31.616-62.976 47.36-109.952 47.36-47.274667 0-85.418667-17.237333-114.346667-51.968-28.885333-34.602667-43.392-96.426667-43.392-185.386666 0-87.168 15.872-150.016 47.701333-188.416 26.282667-31.488 62.933333-47.36 110.037334-47.36z m-207.488 12.8v452.266666H325.504V411.690667A299.904 299.904 0 0 1 213.333333 476.373333V398.933333c22.656-7.296 47.36-21.12 73.856-41.514666 26.624-20.522667 44.842667-44.288 54.784-71.552h70.485334z m207.488 60.842666c-11.306667 0-21.461333 3.413333-30.336 10.24-8.874667 6.826667-15.786667 19.157333-20.693334 36.864-6.4 22.997333-9.642667 61.653333-9.642666 115.968 0 54.442667 2.944 91.733333 8.661333 112.128 5.802667 20.352 13.098667 33.877333 21.845333 40.618667 8.789333 6.741333 18.858667 10.154667 30.165334 10.154667 11.349333 0 21.376-3.498667 30.250666-10.325334 8.874667-6.826667 15.786667-19.157333 20.693334-36.778666 6.4-22.826667 9.642667-61.354667 9.642666-115.797334 0-54.314667-2.858667-91.648-8.661333-112.042666-5.802667-20.352-13.013333-33.962667-21.76-40.789334a47.616 47.616 0 0 0-30.165333-10.24z\" fill=\"#FFFFFF\"></path></svg>`\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: '进度图标',\r\n    type: 'progress',\r\n    list: [\r\n      {\r\n        name: '1',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0C229.248 0 0 229.248 0 512s229.248 512 512 512 512-229.248 512-512S794.752 0 512 0z\" fill=\"#12BB37\"></path><path d=\"M512 928c-229.76 0-416-186.24-416-416S282.24 96 512 96V512l294.144-294.144A414.72 414.72 0 0 1 928 512c0 229.76-186.24 416-416 416z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '2',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0C229.248 0 0 229.248 0 512s229.248 512 512 512 512-229.248 512-512S794.752 0 512 0z\" fill=\"#12BB37\"></path><path d=\"M512 928c-229.76 0-416-186.24-416-416S282.24 96 512 96V512h416c0 229.76-186.24 416-416 416z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '3',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0C229.248 0 0 229.248 0 512s229.248 512 512 512 512-229.248 512-512S794.752 0 512 0z\" fill=\"#12BB37\"></path><path d=\"M512 928c-229.76 0-416-186.24-416-416S282.24 96 512 96V512l294.144 294.144A414.72 414.72 0 0 1 512 928z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '4',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0C229.248 0 0 229.248 0 512s229.248 512 512 512 512-229.248 512-512S794.752 0 512 0z\" fill=\"#12BB37\"></path><path d=\"M512 928c-229.76 0-416-186.24-416-416S282.24 96 512 96v832z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '5',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0C229.248 0 0 229.248 0 512s229.248 512 512 512 512-229.248 512-512S794.752 0 512 0z\" fill=\"#12BB37\"></path><path d=\"M512 512l-294.144 294.144A414.72 414.72 0 0 1 96 512c0-229.76 186.24-416 416-416V512z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '6',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0C229.248 0 0 229.248 0 512s229.248 512 512 512 512-229.248 512-512S794.752 0 512 0z\" fill=\"#12BB37\"></path><path d=\"M512 512H96c0-229.76 186.24-416 416-416V512z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '7',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0C229.248 0 0 229.248 0 512s229.248 512 512 512 512-229.248 512-512S794.752 0 512 0z\" fill=\"#12BB37\"></path><path d=\"M512 512L217.856 217.856A414.72 414.72 0 0 1 512 96V512z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '8',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M0 512c0 282.752 229.248 512 512 512s512-229.248 512-512S794.752 0 512 0 0 229.248 0 512z\" fill=\"#12BB37\"></path><path d=\"M716.629333 341.333333h-51.328a35.072 35.072 0 0 0-28.330666 14.293334l-171.989334 233.984-77.909333-106.026667a35.2 35.2 0 0 0-28.330667-14.293333H307.413333c-7.082667 0-11.264 7.936-7.082666 13.653333l136.32 185.472a35.2 35.2 0 0 0 56.533333 0l230.4-313.429333a8.533333 8.533333 0 0 0-6.954667-13.653334z\" fill=\"#FFFFFF\"></path></svg>`\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: '表情图标',\r\n    type: 'expression',\r\n    list: [\r\n      {\r\n        name: '1',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1026 1024\"><path d=\"M1.097856 1.097642h1021.804717v1021.804716H1.097856z\" fill=\"#F09495\" ></path><path d=\"M1024.000214 1024H0.000214V0h1024v1024z m-1021.804716-2.195284h1019.609433V2.195284H2.195498v1019.609432z\" fill=\"#FFFFFF\" ></path><path d=\"M234.695985 335.179887m-27.341259 0a27.341259 27.341259 0 1 0 54.682518 0 27.341259 27.341259 0 1 0-54.682518 0Z\" fill=\"#040000\" ></path><path d=\"M234.695985 363.519002c-15.666342 0-28.339115-12.772559-28.339115-28.339115 0-15.666342 12.772559-28.339115 28.339115-28.339115s28.339115 12.772559 28.339115 28.339115c0.099786 15.666342-12.672773 28.339115-28.339115 28.339115z m0-54.582732c-14.468914 0-26.243617 11.774703-26.243617 26.243617s11.774703 26.243617 26.243617 26.243617 26.243617-11.774703 26.243617-26.243617-11.774703-26.243617-26.243617-26.243617z\" fill=\"#FFFFFF\" ></path><path d=\"M776.232528 335.179887m-27.341259 0a27.341259 27.341259 0 1 0 54.682518 0 27.341259 27.341259 0 1 0-54.682518 0Z\" fill=\"#040000\" ></path><path d=\"M776.232528 363.519002c-15.666342 0-28.339115-12.772559-28.339115-28.339115 0-15.666342 12.772559-28.339115 28.339115-28.339115 15.666342 0 28.339115 12.772559 28.339115 28.339115 0 15.666342-12.772559 28.339115-28.339115 28.339115z m0-54.582732c-14.468914 0-26.243617 11.774703-26.243617 26.243617s11.774703 26.243617 26.243617 26.243617 26.243617-11.774703 26.243617-26.243617c-0.099786-14.468914-11.874488-26.243617-26.243617-26.243617z\" fill=\"#FFFFFF\" ></path><path d=\"M512.000214 671.656987c-52.58702 0-105.872539-17.961411-105.872539-52.387449S459.413194 566.882089 512.000214 566.882089s105.872539 17.961411 105.87254 52.387449S564.587234 671.656987 512.000214 671.656987z m0-74.240499c-21.952836 0-43.207172 3.592282-58.2748 9.77899-13.870201 5.68778-17.06334 11.275775-17.06334 12.07406s3.19314 6.386279 17.06334 12.07406c15.067628 6.186708 36.321965 9.77899 58.2748 9.77899s43.207172-3.592282 58.274801-9.77899c13.870201-5.68778 17.06334-11.275775 17.06334-12.07406s-3.19314-6.386279-17.06334-12.07406c-15.067628-6.286494-36.321965-9.77899-58.274801-9.77899z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '2',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M0 0h1024v1024H0z\" fill=\"#E6A6C9\" ></path><path d=\"M315.1 368.1c-23.9 0-43.3-19.4-43.3-43.3s19.4-43.3 43.3-43.3 43.3 19.4 43.3 43.3-19.4 43.3-43.3 43.3z m0-74.7c-17.3 0-31.3 14.1-31.3 31.3 0 17.3 14.1 31.3 31.3 31.3 17.3 0 31.3-14.1 31.3-31.3 0-17.2-14-31.3-31.3-31.3zM738.7 368.1c-23.9 0-43.3-19.4-43.3-43.3s19.4-43.3 43.3-43.3 43.3 19.4 43.3 43.3-19.4 43.3-43.3 43.3z m0-74.7c-17.3 0-31.3 14.1-31.3 31.3 0 17.3 14.1 31.3 31.3 31.3 17.3 0 31.3-14.1 31.3-31.3 0-17.2-14-31.3-31.3-31.3zM293.5 698.8l-14.5-1.3c0.1-0.6 1.5-14.6 15.1-27.9 17.2-16.7 45-24.8 82.7-24 4.9-0.1 10.9-10.5 16.1-19.6 8.4-14.7 19-33.1 37.9-34.3 19.4-1.2 42.2 16.4 71.5 55.4 9.9 5.2 16.5 11.2 21.8 16.1 8.4 7.7 13.1 11.9 25.1 10.8 14.9-1.4 38.9-11.1 77.5-31.4 26.8-28.4 56.4-41.4 83.5-36.6 27.9 4.9 50.6 27.6 67.5 67.5l-13.4 5.7c-14.7-34.5-34.3-54.9-56.7-58.8-22.3-3.9-47.6 7.8-71.2 33.1l-0.8 0.9-1.1 0.6c-85.6 45.1-99.4 38-120.2 19.1-5.5-5-11.2-10.2-20.1-14.7l-1.5-0.8-1-1.4c-32.2-43.2-50.4-51.6-60-51-11.1 0.7-18.8 14-26.2 27-7.6 13.2-15.4 26.9-28.8 26.9h-0.2c-78.4-1.6-83 38.3-83 38.7z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '3',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1026 1024\" ><path d=\"M1.1 1.097642h1021.804716v1021.804716H1.1z\" fill=\"#F7E983\" ></path><path d=\"M1024.002358 1024H0.002358V0h1024v1024z m-1021.804716-2.195284h1019.609433V2.195284H2.197642v1019.609432z\" fill=\"#FFFFFF\" ></path><path d=\"M329.174412 344.491728a38.118106 10.277919 57.6 1 0 17.355867-11.014369 38.118106 10.277919 57.6 1 0-17.355867 11.014369Z\" fill=\"#040000\" ></path><path d=\"M644.769475 355.956059a11.175989 36.321965 30 1 0 36.321965-62.911488 11.175989 36.321965 30 1 0-36.321965 62.911488Z\" fill=\"#040000\" ></path><path d=\"M569.678445 671.158059c-26.343403 0-51.190021-5.288638-70.049503-14.967843-20.755408-10.577275-32.230754-25.445332-32.230755-41.710388 0-16.265056 11.475346-31.133112 32.230755-41.710387 18.859482-9.579419 43.805886-14.967843 70.049503-14.967843s51.190021 5.288638 70.049503 14.967843c20.755408 10.577275 32.230754 25.445332 32.230754 41.710387 0 16.265056-11.475346 31.133112-32.230754 41.710388-18.859482 9.679205-43.805886 14.967843-70.049503 14.967843z m0-95.095693c-49.693237 0-84.318846 20.356266-84.318846 38.517248s34.625609 38.517248 84.318846 38.517248 84.318846-20.356266 84.318846-38.517248-34.725395-38.517248-84.318846-38.517248z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '4',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1026 1024\" ><path d=\"M1.1 1.097642h1021.804716v1021.804716H1.1z\" fill=\"#A6D9E2\" ></path><path d=\"M1024.002358 1024H0.002358V0h1024v1024z m-1021.804716-2.195284h1019.609433V2.195284H2.197642v1019.609432z\" fill=\"#FFFFFF\" ></path><path d=\"M376.194134 348.950302m-23.44962 0a23.44962 23.44962 0 1 0 46.89924 0 23.44962 23.44962 0 1 0-46.89924 0Z\" fill=\"#040000\" ></path><path d=\"M629.150672 348.950302m-24.647047 0a24.647047 24.647047 0 1 0 49.294095 0 24.647047 24.647047 0 1 0-49.294095 0Z\" fill=\"#040000\" ></path><path d=\"M397.847613 603.503411c13.471058 8.282206 28.738258 14.468914 43.7061 19.458195 29.835899 9.978562 62.266225 14.169558 93.299551 7.483921 21.054765-4.490353 40.213604-14.369129 56.778016-28.039758 6.785422-5.587995-2.893783-15.167414-9.579419-9.579419-46.999026 38.916391-112.258819 31.033327-163.847983 6.086922-4.590138-2.195284-9.080491-4.490353-13.371272-7.184564-7.583707-4.590138-14.468914 7.184564-6.984993 11.774703z\" fill=\"#040000\" ></path><path d=\"M627.753674 534.052621c-31.033327 24.048334-58.474371 68.253362-37.419607 106.970182 10.577275 19.35841 29.835899 32.629897 48.795167 42.708244 7.982849 4.190996 15.067628-7.883064 7.084779-12.07406-25.245761-13.271487-53.485091-35.324108-49.094524-66.557006 2.793997-20.156695 15.766127-37.319821 29.736114-51.190022 3.392711-3.392711 6.984993-6.785422 10.776847-9.77899 2.993569-2.295069 2.394855-7.483921 0-9.878776-2.893783-3.19314-6.885208-2.49464-9.878776-0.199572z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '5',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1026 1024\" ><path d=\"M1.1 1.097642h1021.804716v1021.804716H1.1z\" fill=\"#AD6F59\" ></path><path d=\"M1024.002358 1024H0.002358V0h1024v1024z m-1021.804716-2.195284h1019.609433V2.195284H2.197642v1019.609432z\" fill=\"#FFFFFF\" ></path><path d=\"M411.829832 330.730879a38.118106 10.277919 57.6 1 0 17.355867-11.014368 38.118106 10.277919 57.6 1 0-17.355867 11.014368Z\" fill=\"#040000\" ></path><path d=\"M480.669675 609.989476c11.774703-25.844475 27.740401-51.788735 44.60417-73.342429 13.770415-17.462483 29.237186-33.92711 47.897096-44.803742 17.262912-10.078347 35.324108-13.67063 54.283376-6.58585 11.974274 4.390567 23.948548 14.468914 33.128825 24.547261 14.369129 15.865913 25.145975 34.625609 34.725394 53.684662 4.290782 8.581563 17.262912 0.997856 12.972131-7.583707-15.167414-30.334828-35.224323-63.763009-66.157864-80.327421-21.054765-11.37556-44.504385-11.475346-66.157864-1.895927-21.054765 9.280062-38.617034 25.644904-53.485091 42.907815-14.468914 16.863769-27.041902 35.324108-38.217891 54.582733-5.887351 10.178133-11.674917 20.555837-16.464627 31.232898-1.696355 3.692068-0.997856 7.982849 2.694212 10.277918 3.19314 1.895927 8.581563 0.898071 10.178133-2.694211z\" fill=\"#040000\" ></path><path d=\"M663.863649 338.091735a14.468914 33.727538 30 1 0 33.727538-58.417811 14.468914 33.727538 30 1 0-33.727538 58.417811Z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '6',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M762.9 77.4H261.1L10.2 512l250.9 434.6h501.8L1013.8 512z\" fill=\"#83CEE3\" ></path><path d=\"M369 375.8m-34.6 0a34.6 34.6 0 1 0 69.2 0 34.6 34.6 0 1 0-69.2 0Z\" fill=\"#040000\" ></path><path d=\"M369 411.7c-19.8 0-36-16.1-36-36s16.1-36 36-36 36 16.1 36 36-16.1 36-36 36z m0-69.1c-18.3 0-33.2 14.9-33.2 33.2S350.7 409 369 409s33.2-14.9 33.2-33.2-14.9-33.2-33.2-33.2z\" fill=\"#FFFFFF\" ></path><path d=\"M672.2 333.6c-15.1 7.6-30.2 15.6-44.3 25-5.9 3.9-17 10.4-14.6 19.1 1.8 6.5 12 11.2 17.3 14.3 15.7 9.3 32.1 17.6 48.3 25.9 8.6 4.4 16.2-8.5 7.6-13-14.1-7.3-28.3-14.5-42.1-22.3-3.9-2.2-7.9-4.5-11.7-6.9-1.2-0.8-2.4-1.5-3.5-2.4-0.6-0.4-1.1-0.8-1.6-1.2 2.2 1.7-0.3-0.3-0.3-0.3-0.9 0.1-1.5-3.2-0.2 0.5 0.9 2.4 1.1 3.8 0.3 5.8 0.6-1.5-0.9 0.8-0.1 0 0.5-0.5 1-1.1 1.6-1.6 0.5-0.5 1-0.9 1.6-1.3 0.6-0.5 0 0 1.2-0.9 1.7-1.3 3.5-2.5 5.3-3.6 8.4-5.5 17.2-10.4 26-15.2 5.6-3 11.2-6 16.8-8.9 8.6-4.4 1-17.3-7.6-13zM578.2 720.9c-12.5-96.7-33.3-154.7-55.6-155.6-8.8 3.9-22.3 17.5-37.7 60.1-10.8 29.8-18.4 62.2-23 81.6-1.2 5.1-2.1 9.1-2.9 11.8l-9.3-2.4c0.7-2.6 1.6-6.6 2.8-11.6 14.9-63 36-136.8 67.5-148.8l0.8-0.3h0.8c18.2-0.4 33.2 19.5 45.8 60.8 10.2 33.3 16.7 74.6 20.5 103.3l-9.7 1.1z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '7',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M762.9 77.4H261.1L10.2 512l250.9 434.6h501.8L1013.8 512z\" fill=\"#8CC66D\" ></path><path d=\"M375.778679 404.47473a14.5 33.8 30 1 0 33.8-58.543317 14.5 33.8 30 1 0-33.8 58.543317Z\" fill=\"#040000\" ></path><path d=\"M627.220263 374.211388a43.1 11.6 57.6 1 0 19.588408-12.431182 43.1 11.6 57.6 1 0-19.588408 12.431182Z\" fill=\"#040000\" ></path><path d=\"M451.1 548.5c17.6-9.3 63.9-30 105.3-16.2 17 20.3 32.7 98.8 28.8 138.1-27.5 10.2-82.5 10.2-106.1 5.8-8.3-10.5-32.7-81.8-35.3-114.6-0.4-5.5 2.5-10.6 7.3-13.1z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '8',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M762.9 77.4H261.1L10.2 512l250.9 434.6h501.8L1013.8 512z\" fill=\"#5A74B8\" ></path><path d=\"M357.7 400m-34.6 0a34.6 34.6 0 1 0 69.2 0 34.6 34.6 0 1 0-69.2 0Z\" fill=\"#040000\" ></path><path d=\"M357.7 436c-19.8 0-36-16.1-36-36s16.1-36 36-36 36 16.1 36 36-16.2 36-36 36z m0-69.2c-18.3 0-33.2 14.9-33.2 33.2s14.9 33.2 33.2 33.2 33.2-14.9 33.2-33.2-14.9-33.2-33.2-33.2z\" fill=\"#FFFFFF\" ></path><path d=\"M676 400m-34.6 0a34.6 34.6 0 1 0 69.2 0 34.6 34.6 0 1 0-69.2 0Z\" fill=\"#040000\" ></path><path d=\"M676 436c-19.8 0-36-16.1-36-36s16.1-36 36-36 36 16.1 36 36-16.2 36-36 36z m0-69.2c-18.3 0-33.2 14.9-33.2 33.2s14.9 33.2 33.2 33.2c18.3 0 33.2-14.9 33.2-33.2s-14.9-33.2-33.2-33.2z\" fill=\"#FFFFFF\" ></path><path d=\"M347.6 684.1c0.3-0.9 0.6-1.7 0.9-2.6 0.2-0.5 1.4-3.2 0.3-0.8 0.6-1.4 1.3-2.9 2-4.3 3.2-6.3 6-10.7 10.9-15.3 4.3-4 10.8-7.5 17.1-6.1 3.9 0.9 7.9 4.9 11.1 7.2 3.1 2.2 6.3 4.5 9.7 6.2 7.5 3.8 15.3 4.4 23.4 1.9 4.7-1.5 9.2-3.6 13.6-5.9 5-2.6 10.7-5 14.2-9.5 4.5-5.7 6.1-8.5 11.4-14.1 1-1 2-2 3.1-3 0.2-0.2 2.2-1.7 0.6-0.5 0.6-0.4 1.2-0.9 1.8-1.3 1-0.6 2.1-1.3 3.2-1.7-2 0.8 0.2 0 0.6-0.1 2.3-0.7-0.3-0.2 1.2-0.3 2.8-0.1 3.6 0 5.5 1 3.8 1.9 6.6 4.7 9.5 7.8 4.5 5 7.5 11.1 11.7 16.2 1.8 2.2 3.7 4.3 5.4 6.5 8.1 10.3 17.7 22.2 32.2 22 8.8-0.1 16.6-5.2 22.6-11.2 4.2-4.1 7.7-8.9 11-13.7 2.9-4.2 4.6-9.9 6.2-13.5 3.2-7.1 7.2-13.1 13-18.1 4.8-4.2 11.1-6.5 16.7-5.3 10.5 2.4 17.2 12.1 23.1 20.2 4.7 6.5 9.8 13 16 18.2 7.8 6.4 17.1 11.4 27.5 11.1 14.1-0.4 25.5-9.5 34.2-19.9 3-3.6 3.6-8.8 0-12.4-3.1-3.1-9.4-3.7-12.4 0-6.3 7.6-14.7 15.9-24.9 14.7-2.2-0.3-5.3-1.5-7.9-3.1-3.5-2.1-6.1-4.4-9.1-7.5-4.9-5.1-6.8-8.1-10.9-13.8-7.3-10.1-16.1-19.6-28.2-23.7-18.5-6.3-35.7 5.6-46 20.1-2.4 3.3-4.4 6.9-6.1 10.6-1.8 3.9-2.7 8.5-5.2 11.9-3.1 4.4-6.2 8.8-10.2 12.5-3 2.8-5.7 4.4-8.6 5.1-0.4 0.1-1.7 0.1 0.1 0h-2.2c2.1 0.1 0 0-0.5-0.1-0.7-0.2-1.4-0.4-2-0.6 1.8 0.7-1.8-1.1-2.4-1.5l-1.2-0.9c1.5 1.2-0.9-0.9-1.2-1.1-4.7-4.3-8.4-9.5-12.3-14.4-10.9-13.6-20.9-34-41-34.9-14.2-0.6-24.5 10.6-32.4 20.8-1.2 1.6-2.5 3.2-3.7 4.8-1.5 1.9 1.1-1.4-0.4 0.5-0.4 0.5-0.8 1.2-1.3 1.6-1.7 1.4-4.6 2.6-6.6 3.6-2.9 1.6-5.9 3.2-9 4.5-1.6 0.7-3.4 1.2-5.1 1.7-2.2 0.6-0.7 0.5-2.8 0.4-2.8 0-3.9-0.4-6.6-1.9-3.9-2.2-7.5-4.9-11.1-7.5-5.6-4-10-6.9-17-7.5-10.5-0.9-20.3 3.2-28.2 9.9-9.4 8.1-16.4 20.2-20.1 32-3.6 11.2 13.3 15.8 16.8 5.1z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '9',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M762.9 77.4H261.1L10.2 512l250.9 434.6h501.8L1013.8 512z\" fill=\"#F0884F\" ></path><path d=\"M287.2 382c6.4 2.3 11.6-3.7 15.4-7.9 5.1-5.5 10.2-11 16-15.9 0.8-0.7 1.7-1.4 2.5-2.1 1.2-0.9-1.7 1.3 0.2-0.2l1.2-0.9c2.1-1.5 4.3-2.9 6.5-4.3 2-1.2 4-2.2 6.1-3.2 0.6-0.3 1.2-0.6 1.9-0.9-0.3 0.2-1.5 0.6 0.2-0.1 1.3-0.5 2.6-1 4-1.5 11.2-3.7 21.8-4 33.4-1.1 19.5 4.9 36.4 17 51.2 30.2 8.6 7.7 21.4-5 12.7-12.7-25.2-22.6-57.1-42.1-92.2-36.2-20.4 3.4-37.7 16.1-51.6 30.9-2.3 2.4-4.5 5-6.8 7.4-0.7 0.7-1.9 1.5-2.4 2.4-0.5 0.8 2.3-1.5 0.8-0.7 1.3-0.7 3.9-1.4 5.8-0.7-11.1-3.7-15.8 13.7-4.9 17.5zM598 382c6.4 2.3 11.6-3.7 15.4-7.9 5.1-5.5 10.2-11 16-15.9 0.8-0.7 1.7-1.4 2.5-2.1 1.2-0.9-1.7 1.3 0.2-0.2l1.2-0.9c2.1-1.5 4.3-2.9 6.5-4.3 2-1.2 4-2.2 6.1-3.2 0.6-0.3 1.2-0.6 1.9-0.9-0.3 0.2-1.5 0.6 0.2-0.1 1.3-0.5 2.6-1 4-1.5 11.2-3.7 21.8-4 33.4-1.1 19.5 4.9 36.4 17 51.2 30.2 8.6 7.7 21.4-5 12.7-12.7-25.2-22.6-57.1-42.1-92.2-36.2-20.4 3.4-37.7 16.1-51.6 30.9-2.3 2.4-4.5 5-6.8 7.4-0.7 0.7-1.9 1.5-2.4 2.4-0.5 0.8 2.3-1.5 0.8-0.7 1.3-0.7 3.9-1.4 5.8-0.7-11.1-3.7-15.8 13.7-4.9 17.5zM505.9 527.1c3.4 0.7 6.8 1.7 10.2 2.8 6.7 2.2 10.4 3.5 16.6 7.7 1.6 1.1-0.5-0.5 0.6 0.5 0.6 0.5 1.1 1.1 1.7 1.6 1.5 1.4-0.1-0.4 0.5 0.6 0.4 0.6 0.7 1.2 1 1.8-1-2 0.1 0 0 0.5 0.1-2-0.1 0-0.1 0-0.1 0.8 0 0.7 0.1-0.5-0.1 0.4-0.1 0.7-0.3 1.1-0.6 1 0.7-0.9-0.4 1-1.6 2.5-4.6 5.4-8.1 7.8-6.8 4.6-14.4 8.2-22 11.4-7 3-7.4 11.9 0 14.8 7.4 2.8 15 5.3 22.4 8.1 3.1 1.1 4.2 1.5 6.9 2.9 1.1 0.6 2.1 1.2 3.2 1.8 1.2 0.8-0.7-0.5 0.1 0 0.4 0.3 0.8 0.7 1.1 1.1 0.6 0.8-1.1-1.2-0.2-0.2 0.8 0.9-0.3-1.4-0.1-0.2 0.1 0.9 0.2-1.9 0-0.9-0.1 0.5-0.8 1.8 0 0.2-0.2 0.5-0.5 1-0.8 1.4-0.3 0.3-0.9 1.3-0.3 0.5-0.5 0.7-1.1 1.3-1.7 1.9-6.9 7.3-15.9 12.8-24.4 18.1-8.3 5.3-0.6 18.5 7.7 13.2 9.9-6.3 20.9-12.8 28.6-21.8 4.8-5.5 8.1-12.9 4.2-19.9-3.4-6-10.5-8.9-16.6-11.4-8.6-3.5-17.5-6.2-26.2-9.5v14.8c14.4-6.1 47.2-18.8 41.2-40.3-3.5-12.9-19.4-18.9-30.8-22.6-3.4-1.1-6.9-2.1-10.5-2.9-9.1-2.2-13.3 12.5-3.6 14.6z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '10',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M762.9 77.4H261.1L10.2 512l250.9 434.6h501.8L1013.8 512z\" fill=\"#F6F180\" ></path><path d=\"M342.9 400.6m-29.5 0a29.5 29.5 0 1 0 59 0 29.5 29.5 0 1 0-59 0Z\" fill=\"#040000\" ></path><path d=\"M342.9 431.3c-16.9 0-30.7-13.8-30.7-30.7s13.8-30.7 30.7-30.7 30.7 13.8 30.7 30.7-13.7 30.7-30.7 30.7z m0-59c-15.6 0-28.3 12.7-28.3 28.3s12.7 28.3 28.3 28.3 28.3-12.7 28.3-28.3-12.6-28.3-28.3-28.3z\" fill=\"#FFFFFF\" ></path><path d=\"M702 400.6m-29.5 0a29.5 29.5 0 1 0 59 0 29.5 29.5 0 1 0-59 0Z\" fill=\"#040000\" ></path><path d=\"M702 431.3c-16.9 0-30.7-13.8-30.7-30.7s13.8-30.7 30.7-30.7 30.7 13.8 30.7 30.7-13.8 30.7-30.7 30.7z m0-59c-15.6 0-28.3 12.7-28.3 28.3s12.7 28.3 28.3 28.3 28.3-12.7 28.3-28.3-12.7-28.3-28.3-28.3z\" fill=\"#FFFFFF\" ></path><path d=\"M358.7 519.9c20 22 45.5 40.4 71.3 54.8 51.2 28.5 111.7 39.9 168 19.5 44.3-16.1 80.7-47.8 110.2-83.9 3-3.7 3.6-8.9 0-12.5-3.1-3.1-9.5-3.7-12.5 0-25.5 31.4-56.2 59.7-93.7 76-27.1 11.7-56.6 15.7-85.8 12.2-24.7-2.9-49.5-11.8-71.5-23.4-18.7-9.8-36.6-22.2-51.1-34.3-7.8-6.5-15.5-13.3-22.4-20.9-7.7-8.5-20.1 4.1-12.5 12.5z\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '11',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M48.2 844.9c-68.5-210.6 186-782.1 409.1-795.4 6.3-0.4 12.5 0.2 18.6 1.6C665.1 94.6 985.4 515 987.1 821.3c0.1 20-12.9 37.9-22.4 43.1-162.7 89.8-605.8 179.7-884.4 30.9-15-7.9-24.2-26.1-32.1-50.4z\" fill=\"#F0884F\" ></path><path d=\"M401 352.1m-52.4 0a52.4 52.4 0 1 0 104.8 0 52.4 52.4 0 1 0-104.8 0Z\" fill=\"#FFFFFF\" ></path><path d=\"M408.7 329m-29.3 0a29.3 29.3 0 1 0 58.6 0 29.3 29.3 0 1 0-58.6 0Z\" fill=\"#040000\" ></path><path d=\"M527.5 352.1m-52.4 0a52.4 52.4 0 1 0 104.8 0 52.4 52.4 0 1 0-104.8 0Z\" fill=\"#FFFFFF\" ></path><path d=\"M527.5 329m-29.3 0a29.3 29.3 0 1 0 58.6 0 29.3 29.3 0 1 0-58.6 0Z\" fill=\"#040000\" ></path><path d=\"M450.7 517c1.1-8.2 3.2-16.4 6.1-24.1 0.1-0.3 1-2.5 0.5-1.4s0.3-0.7 0.5-1c0.7-1.4 1.4-2.8 2.2-4.1 0.4-0.8 2.8-3.9 1.3-2.1 0.8-1 1.7-1.9 2.6-2.8 1-1-1.5 1 0.1 0 0.5-0.3 1-0.6 1.5-0.8-1.3 0.7-1.2 0.3 0 0.1 1.9-0.3-1.8 0.3 0.1 0 1.2-0.2 1.5 0.3 0-0.1 0.6 0.2 1.3 0.3 1.9 0.5 0.3 0.1-1.3-0.7 0.2 0.1 0.8 0.5 1.6 0.9 2.4 1.4 1.4 1 0-0.1 1.4 1.1 0.9 0.8 1.8 1.7 2.6 2.6 1.8 1.9 3.5 3.9 5 6.1 5.1 7.1 9.3 14.8 13.2 22.6 3.5 6.9 13.7 4.7 15.8-2.1 2.6-8.7 4.8-17.4 7.4-26.1 0.9-3.2 1.9-6.4 3.2-9.4-0.7 1.6 0.8-1.6 1.2-2.2l0.9-1.5c0.7-1.2-1.4 0.7 0.1-0.1 1.7-0.9-1.2 0.3-0.3 0.1 0.8-0.2 1-1.2 0.3-0.3-0.6 0.8 0.6 0-0.5 0.2-2 0.3 2.4 0.5-1.1 0 0.5 0.1 1.2 0.2 1.6 0.4-1.1-0.8-0.8-0.4 0.2 0.2 0.7 0.4 3.4 2.3 2.7 1.8 8.9 7.1 15.9 16.9 22.5 26 2.8 3.8 7.5 5.6 11.8 3.1 3.7-2.2 5.9-8 3.1-11.8-8.2-11.1-16.6-23-27.7-31.4-6.3-4.7-14.5-7.6-21.7-3-6.7 4.2-9.6 12.5-11.9 19.6-3.2 9.9-5.5 20-8.6 29.9 5.3-0.7 10.5-1.4 15.8-2.1-7.8-15.5-24.8-50.1-48-41.7-14.1 5.1-19.7 23-22.9 36.2-0.9 3.8-1.8 7.7-2.3 11.6-0.6 4.6 1.1 9.3 6 10.6 4.2 1 10.2-1.5 10.8-6.1z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '12',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M485.538528 993.072489a362.00362 481.804818 3.149 1 0 52.933731-962.15464 362.00362 481.804818 3.149 1 0-52.933731 962.15464Z\" fill=\"#AADCF0\" ></path><path d=\"M688.2 334.1c-15.1 7.6-30.2 15.6-44.3 25-5.9 3.9-17 10.4-14.6 19.1 1.8 6.5 12 11.2 17.3 14.3 15.7 9.3 32.1 17.6 48.3 25.9 8.6 4.4 16.2-8.5 7.6-13-14.1-7.3-28.3-14.5-42.1-22.3-3.9-2.2-7.9-4.5-11.7-6.9-1.2-0.8-2.4-1.5-3.5-2.4-0.6-0.4-1.1-0.8-1.6-1.2 2.2 1.7-0.3-0.3-0.3-0.3-0.9 0.1-1.5-3.2-0.2 0.5 0.9 2.4 1.1 3.8 0.3 5.8 0.6-1.5-0.9 0.8-0.1 0 0.5-0.5 1-1.1 1.6-1.6 0.5-0.5 1-0.9 1.6-1.3 0.6-0.5 0 0 1.2-0.9 1.7-1.3 3.5-2.5 5.3-3.6 8.4-5.5 17.2-10.4 26-15.2 5.6-3 11.2-6 16.8-8.9 8.6-4.4 1-17.4-7.6-13zM375.8 347c13.4 6.8 26.7 14 39.5 21.9 1.8 1.2 3.7 2.3 5.5 3.5 0.9 0.6 1.7 1.2 2.6 1.8 0.9 0.6 1.9 1.4 1.6 1.1 1.1 0.9 2.1 1.9 3.1 2.8 1.2 1 0-0.3 0.1 0 0-0.2-0.8-2.4-0.3-4.1 1.5-5.5 2.3-2.7 0.8-2-0.4 0.2-0.9 0.8-1.3 1.1 1.7-1.4-1.6 1.1-2.3 1.6-3.4 2.3-6.9 4.4-10.4 6.4-14.9 8.6-30.3 16.4-45.6 24.3-8.6 4.4-1 17.4 7.6 13 15-7.7 30.1-15.4 44.8-23.8 6.2-3.6 13.8-7.3 18.7-12.7 7.6-8.3-3.8-16.6-9.9-20.9-8.7-6.1-18-11.3-27.3-16.4-6.5-3.6-13-7.1-19.6-10.4-8.6-4.5-16.3 8.5-7.6 12.8zM412.8 570.9c13.5 7.7 28.5 13.3 43.3 17.9 29.8 9.2 61.7 13.1 92.6 7.3 20.6-3.9 40-12.5 56.6-25.2 2.8-2.2 4.3-5.6 2.3-9-1.6-2.8-6.2-4.5-9-2.3-48.3 36.9-113.3 30-165.6 6.7-4.6-2.1-9.2-4.2-13.7-6.7-7.3-4.2-13.9 7.2-6.5 11.3z\" fill=\"#040000\" ></path><path d=\"M644.6 505.2c-30.1 21.5-60.6 62.5-39.1 99.8 10.7 18.6 30.3 30.9 49.1 40.1 7.8 3.8 14.6-7.9 6.8-11.7-23.6-11.5-53.7-31.4-49.4-60.9 2.8-18.9 15.8-34.6 29.5-47.2 2.5-2.3 5.1-4.6 7.8-6.7 0.5-0.4 0.9-0.7 1.4-1.1-0.4 0.3-1.2 0.9-0.1 0.1l0.9-0.6c6.9-5.1 0.2-16.8-6.9-11.8z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '13',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M235.1 76.9c75.6-26.5 297.3-90.1 514.2-16.6 16.3 5.5 29.8 17.4 37.1 33 57.5 122.4 127.1 602.1 62.1 785.6a62.58 62.58 0 0 1-32.5 35.8c-109.5 51.8-428.1 136.7-609.3 37.2-14.4-7.9-25-21.3-29.7-37.1-41.9-140.6-37-627.7 19.1-798 6.1-18.7 20.5-33.4 39-39.9z\" fill=\"#F9DABD\" ></path><path d=\"M392.2 360.2m-35.2 0a35.2 35.2 0 1 0 70.4 0 35.2 35.2 0 1 0-70.4 0Z\" fill=\"#040000\" ></path><path d=\"M618.6 360.2m-35.2 0a35.2 35.2 0 1 0 70.4 0 35.2 35.2 0 1 0-70.4 0Z\" fill=\"#040000\" ></path><path d=\"M512 562.6c-36 0-65.3-29.3-65.3-65.3S476 432 512 432s65.3 29.3 65.3 65.3-29.3 65.3-65.3 65.3z m0-122.9c-31.7 0-57.6 25.8-57.6 57.6s25.8 57.6 57.6 57.6c31.7 0 57.6-25.8 57.6-57.6s-25.9-57.6-57.6-57.6z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '14',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M178.1 971.5c38.1 15.9 98.7 26.6 171.3-12.3 3.7-2 8.4-1.6 11.6 1.1 43.3 35.9 123.3 80.8 236 10.9 3.8-2.4 8.7-2.4 12.6-0.2 41.8 23.9 191.6 58.2 246.6 14.2 4.4-3.5 9.1-6.6 14.5-8.5C1065 909.5 678.2-652 194.3 351c-37.5 77.8-38.4 94.1-71.9 211.3-27.6 96.3-29.1 231.3 1.4 348.1 7.2 27.3 27.3 49.9 54.3 61.1z\" fill=\"#ABAAAA\" ></path><path d=\"M468.9 349H418c-6.1 0-11.1-5-11.1-11.1V336c0-6.1 5-11.1 11.1-11.1h50.9c6.1 0 11.1 5 11.1 11.1v1.9c0 6.1-5 11.1-11.1 11.1zM643 471.9H390c-6.6 0-12-5.4-12-12s5.4-12 12-12h253c6.6 0 12 5.4 12 12s-5.4 12-12 12zM609 349h-61.2c-6 0-11-4.9-11-11v-2.1c0-6 4.9-11 11-11H609c6 0 11 4.9 11 11v2.1c0 6.1-4.9 11-11 11z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '15',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M673.1 318.7c3.7-17.5 5.6-35.7 5.6-54.4 0-137.9-105.5-249.7-235.6-249.7S207.4 126.4 207.4 264.3c0 55.4 17.1 106.7 45.9 148.1-55.2 63.3-88.6 145.9-88.6 236.3 0 199.2 162.1 360.6 362.1 360.6 200 0 362.1-161.5 362.1-360.6 0.1-147.3-88.7-274-215.8-330z\" fill=\"#4F8A54\" ></path><path d=\"M392 246.2m-47.1 0a47.1 47.1 0 1 0 94.2 0 47.1 47.1 0 1 0-94.2 0Z\" fill=\"#FFFFFF\" ></path><path d=\"M386 252.8m-26.4 0a26.4 26.4 0 1 0 52.8 0 26.4 26.4 0 1 0-52.8 0Z\" fill=\"#040000\" ></path><path d=\"M505.6 246.2m-47.1 0a47.1 47.1 0 1 0 94.2 0 47.1 47.1 0 1 0-94.2 0Z\" fill=\"#FFFFFF\" ></path><path d=\"M501.4 252.8m-26.4 0a26.4 26.4 0 1 0 52.8 0 26.4 26.4 0 1 0-52.8 0Z\" fill=\"#040000\" ></path><path d=\"M474.3 364.8h-50.9c-6.1 0-11.1-5-11.1-11.1v-1.9c0-6.1 5-11.1 11.1-11.1h50.9c6.1 0 11.1 5 11.1 11.1v1.9c0 6.2-5 11.1-11.1 11.1z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '16',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M246.4 227.6c-166.9 101.1-461.9 344 87 564.1 1.5 0.6 2.9 1.1 4.4 1.6 80.7 27.7 392.8 165.4 641-198.1 40-58.6 38.5-136.2-3.7-193.3C892 289.5 727 201.1 429.1 182.7c-64.1-4-127.8 11.6-182.7 44.9z\" fill=\"#CF92BE\" ></path><path d=\"M617.1 393.4c-17.4 8.8-34.9 18.1-51.2 28.9-6.9 4.6-20.3 12.3-17.4 22.6 1.2 4.3 5.6 7 9 9.5 3.7 2.7 7.6 5 11.5 7.3 18.2 10.8 37.1 20.3 55.9 30 10 5.1 18.9-10 8.8-15.1-16.4-8.4-32.9-16.9-49-26-4.5-2.6-9.1-5.2-13.5-8l-4.5-3c-0.7-0.5-1.3-1-2-1.5 1.6 1.2 0.7 0.4-0.2-0.2-1.3-0.9-0.3-0.9-0.5-0.3 0.2 0.2 0.4 0.5 0.6 0.7 1 1.9 1.3 3.7 0.8 5.7 0.1-0.6 0.7-1.4-0.6 1.3 0.7-1.5-0.1 0-0.2 0.1 0.6-0.6 1.2-1.3 1.9-1.9l1.8-1.5c1.8-1.6-0.6 0.3 1.2-0.9 2-1.5 4.1-2.9 6.2-4.3 10-6.5 20.4-12.4 30.9-18 6.5-3.5 13.1-7 19.7-10.4 9.6-5 0.8-20.1-9.2-15zM323.1 408.5c15.9 8.1 31.7 16.5 46.8 26 2.2 1.4 4.3 2.8 6.5 4.2 1 0.7 1.9 1.3 2.8 2 0.5 0.3 1 0.7 1.4 1.1-1.1-0.9-0.3-0.3 0.3 0.3 1.1 1 2.2 2.2 3.3 3.1 1.4 1.1-1-1.7-0.1-0.1-0.6-1.1-0.9-4.1 0.3-6.7 2.2-4.8 0.7 0.1 0-0.5 0 0-1.1 0.9-1.3 1 2.3-1.9 0 0-0.5 0.4-0.8 0.5-1.5 1.1-2.3 1.6-4 2.7-8.1 5.1-12.3 7.5-17.3 10-35.1 19.1-52.8 28.2-10 5.1-1.2 20.2 8.8 15.1 17.5-9 35-17.9 52-27.7 7.3-4.2 15.9-8.6 21.8-14.7 9.3-9.7-4.3-19.7-11.5-24.7-10.1-7.1-20.9-13.1-31.7-19-7.6-4.2-15.2-8.2-22.9-12.1-9.7-5.2-18.6 9.9-8.6 15zM513 592.1c-12.2 0-24.6-1.4-36.3-4.3-8-2-13.9-8.2-15.4-16.2s1.7-15.8 8.4-20.5c23.2-16.3 60.5-31.9 106.2-13 6.4 2.6 11 8.3 12.3 15.1 1.3 6.7-0.8 13.6-5.7 18.3-13.5 13.1-40.9 20.6-69.5 20.6z m-37.4-32.5c-3.4 2.4-4.9 6.2-4.2 10.2 0.8 4.1 3.6 7.1 7.7 8.1 39.1 9.7 81.2 0.7 96.1-13.7 2.4-2.3 3.4-5.6 2.7-8.9-0.7-3.4-2.9-6.2-6.1-7.5-41.2-17.2-75.1-3.1-96.2 11.8z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '17',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M1008.6 465.7c0-124.9-95.5-226.2-213.4-226.2-12 0-23.8 1.1-35.2 3.1v-3.1c0-124.9-95.5-226.2-213.4-226.2S333.4 114.6 333.4 239.5c0 2.4 0 4.8 0.1 7.2-17.1-4.7-35-7.2-53.4-7.2-117.8 0-213.4 101.3-213.4 226.2 0 92.1 51.9 171.3 126.3 206.6-13.7 29.9-21.4 63.4-21.4 98.8 0 124.9 95.5 226.2 213.4 226.2 68.8 0 130-34.5 169-88.1 39 53.6 100.2 88.1 169 88.1 117.8 0 213.4-101.3 213.4-226.2 0-41.2-10.4-79.9-28.6-113.1 60.5-39.9 100.8-111.1 100.8-192.3z\" fill=\"#8CC66D\" ></path><path d=\"M437.8 400.7m-24.7 0a24.7 24.7 0 1 0 49.4 0 24.7 24.7 0 1 0-49.4 0Z\" fill=\"#040000\" ></path><path d=\"M649.7 400.7m-24.7 0a24.7 24.7 0 1 0 49.4 0 24.7 24.7 0 1 0-49.4 0Z\" fill=\"#040000\" ></path><path d=\"M527.3 625.9c6.3-14.2 13.1-28.3 17.9-43 6.2-19 8.3-38.6 10.5-58.3l2.1-19.2c0.7-6.2-9-6.1-9.7 0-1.7 16.3-2.8 32.8-5.7 48.9-4.2 23.7-13.8 45-23.5 66.7-2.5 5.6 5.9 10.5 8.4 4.9z\" fill=\"#252525\" ></path><path d=\"M447.7 522.3c20.3-0.1 40.6-0.2 61-0.4l96.6-0.6c7.5 0 14.9-0.1 22.4-0.1 16.6-0.1 16.7-25.9 0-25.8-20.3 0.1-40.6 0.2-61 0.4l-96.6 0.6c-7.5 0-14.9 0.1-22.4 0.1-16.6 0.1-16.7 25.9 0 25.8z\" fill=\"#040000\" ></path><path d=\"M495.4 508.2c-10.3 3.8-9.2 20.9-9.2 29.5 0.1 16 2.1 32.3 6.1 47.8 3.5 13.7 8.7 29.9 20.6 38.7 12.9 9.5 27.6 2.1 37.6-7.9 10.2-10.3 17.8-23 24.7-35.6 11.6-21.3 20.9-43.8 29.7-66.4 3-7.8-9.5-11.1-12.5-3.4-7.4 19.1-15.3 38.1-24.7 56.4-5.9 11.5-12.2 23-20.3 33.1-2.8 3.5-5.8 6.9-9.2 9.8-1.9 1.7-1.4 1.3-3.3 2.5-1.3 0.8-2.6 1.6-3.9 2.2-0.7 0.3 1-0.2-0.8 0.3-0.6 0.2-1.2 0.3-1.8 0.5-1.1 0.3-1.2 0.2-0.5 0.1-0.6 0-1.3 0-1.9 0.1-2.2 0.1 0.6 0.5-1.8-0.2l-1.8-0.6c1.5 0.5 0.2 0.1-0.5-0.3-0.8-0.5-2.9-2.1-1.7-1.1-1-0.9-2-1.7-2.8-2.7-0.4-0.5-0.9-1-1.3-1.5 0.4 0.5 0.1 0.2-0.5-0.7-0.8-1.3-1.7-2.5-2.4-3.9-0.7-1.3-1.4-2.5-2-3.8-0.4-0.8-0.8-1.6-1.1-2.4-0.1-0.2-0.5-1.1 0 0l-0.6-1.5a86.8 86.8 0 0 1-3.3-9.8c-4.4-14.9-6.2-27.9-6.8-42.8-0.3-6.6-0.3-13.1 0.4-19.7 0.2-1.5-0.3 1.5 0.1-0.5l0.3-1.8c0.2-0.9 0.5-1.8 0.7-2.8 0.4-1.9-0.7 1.1 0.3-0.7 0.5-1-1.3 1.2-0.3 0.5-0.3 0.3-1.1 0.8-2 1.1 7.7-2.9 4.3-15.4-3.5-12.5z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '18',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M75.4 739.8c-78.7-134.4-194-455.7 401.4-579.6 9.8-2 19.2-6.2 29.2-7.5C656.8 133 947.3 205 1000.1 578.4c42.6 223.8 29.7 392.1-822 233.6-43.1-8-80.6-34.4-102.7-72.2z\" fill=\"#F09495\" ></path><path d=\"M704.6 875.4c-129 0-301.8-20.5-526.6-62.3-43.5-8.1-81.2-34.6-103.5-72.7-19.3-32.9-44.8-84.3-57.1-142.5-13.9-65.1-8.8-125.3 15.1-179.2 54.3-122.3 203.7-209.6 444-259.6 4.1-0.9 8.3-2.1 12.3-3.4 5.5-1.7 11.1-3.4 16.9-4.2 29-3.8 75.7-5.9 133.8 5.7 54.5 10.9 105.3 31 150.8 59.9C843.7 251 888.2 296 922.7 351c39.7 63.1 66.1 139.6 78.5 227.3 8.1 42.4 15.2 87.3 12.5 127.9-2.8 42.6-16.4 75.5-41.5 100.7-42.5 42.7-120.3 65-237.8 68.1-9.6 0.2-19.6 0.4-29.8 0.4zM76.3 739.3c22 37.6 59.2 63.7 102.1 71.7 242.5 45.1 424.4 65.3 556.1 61.9 116.9-3.1 194.1-25.2 236.3-67.5 55.4-55.6 44.4-142.5 28.3-226.7C976 415.8 903.4 291.5 789.2 219c-124-78.7-248.1-69.9-283.2-65.3-5.6 0.7-11.2 2.4-16.6 4.1-4.1 1.2-8.3 2.5-12.5 3.4C237.3 211.1 88.5 298 34.5 419.6c-54.6 122.8 2.8 253 41.8 319.7z\" fill=\"#FFFFFF\" ></path><path d=\"M424.1 442.5m-24.7 0a24.7 24.7 0 1 0 49.4 0 24.7 24.7 0 1 0-49.4 0Z\" fill=\"#040000\" ></path><path d=\"M635.9 442.5m-24.7 0a24.7 24.7 0 1 0 49.4 0 24.7 24.7 0 1 0-49.4 0Z\" fill=\"#040000\" ></path><path d=\"M426.2 543.3c17.1 7.9 36.6 26 25.5 46.1-6.9 12.5-19.8 21.2-31.7 28.4-4.5 2.7-0.4 9.8 4.1 7.1 17.4-10.5 41.6-27.6 39-51.1-1.6-14-12.4-24.8-23.5-32.3-3-2-6.1-3.9-9.3-5.4-4.8-2.1-8.9 5-4.1 7.2zM629.5 535.4c-21.8 11.7-40.6 37-25.7 61.3 8.2 13.4 22.2 22.7 35.7 30.3 4.7 2.7 8.9-4.6 4.2-7.2-15.5-8.7-39.9-23.9-36.9-45.2 1.6-11.4 10.7-20.7 19.6-27.2 2.4-1.7 4.8-3.4 7.4-4.8 4.7-2.5 0.4-9.8-4.3-7.2z\" fill=\"#040000\" ></path><path d=\"M457.2 584.6c25.6 25.6 66.7 41 101.8 28.3 18.2-6.6 33.2-19.1 45.5-33.8 4.2-5.1-3-12.4-7.3-7.3-18.5 22-43.3 38.1-73 35-18.6-1.9-36.2-10.8-50.9-22-2.9-2.2-6.1-4.8-8.8-7.5-4.7-4.7-12 2.6-7.3 7.3z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '19',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M915.9 510.5c8.4-19 13.1-39.8 13.1-61.7 0-90-78.9-162.9-176.2-162.9-3.2 0-6.3 0.1-9.5 0.2v-0.2c0-94.8-116.2-171.6-259.6-171.6S224 191.2 224 286v2c-96.2 0-174.1 72-174.1 160.9 0 38 14.3 73 38.2 100.5-41.8 29.4-68.8 75.9-68.8 128.2 0 88.9 78 160.9 174.1 160.9 17.1 0 33.6-2.3 49.3-6.5 28.9 46.1 88.7 77.7 157.6 77.7 49.4 0 94-16.2 126-42.3 32 26.1 76.6 42.3 126 42.3 77.3 0 143-39.7 166.7-95 3.1 0.2 6.3 0.2 9.5 0.2 97.3 0 176.2-72.9 176.2-162.9 0-60.6-35.7-113.4-88.8-141.5z\" fill=\"#5A74B8\" ></path><path d=\"M357.6 449.5a46.6 73.2 0 1 0 93.2 0 46.6 73.2 0 1 0-93.2 0Z\" fill=\"#FEFEFD\" ></path><path d=\"M357.5 449.5a25.1 39.4 0 1 0 50.2 0 25.1 39.4 0 1 0-50.2 0Z\" fill=\"#040000\" ></path><path d=\"M531.3 449.5a46.6 73.2 0 1 0 93.2 0 46.6 73.2 0 1 0-93.2 0Z\" fill=\"#FEFEFD\" ></path><path d=\"M531.2 449.5a25.1 39.4 0 1 0 50.2 0 25.1 39.4 0 1 0-50.2 0Z\" fill=\"#040000\" ></path><path d=\"M426.7 574.6c20.9 29.9 59.7 52.2 96.2 38.6 19.2-7.2 34.7-21.2 47.6-36.9 2.8-3.5 3.4-8.3 0-11.7-2.9-2.9-8.9-3.5-11.7 0-16.5 20.2-40.9 40.9-68.1 35.5-17.3-3.4-31-13.2-42.9-25.9-2-2.2-3.9-4.4-5.8-6.7-1.6-1.9 1.1 1.5-0.4-0.6-0.2-0.2-0.3-0.5-0.5-0.7-6.2-8.7-20.6-0.4-14.4 8.4z\" fill=\"#040000\" ></path></svg>`\r\n      },\r\n      {\r\n        name: '20',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\" ><path d=\"M792.8 301.4c-8.2 0-16.2 0.4-24.2 1.3-12.3-81.8-129.2-145.9-271.8-145.9-137.1 0-250.5 59.3-269.9 136.6C105.3 295.5 7.4 391.2 7.4 508.9c0 119.1 100.2 215.6 223.7 215.6 5.3 0 10.6-0.2 15.8-0.5 14.4 80.5 130.4 143.2 271.3 143.2 135.9 0 248.6-58.3 269.4-134.6 1.7 0 3.4 0.1 5.1 0.1 123.6 0 223.7-96.5 223.7-215.6s-100-215.7-223.6-215.7z\" fill=\"#F6CD50\" ></path><path d=\"M435.9 431.5m-52.2 0a52.2 52.2 0 1 0 104.4 0 52.2 52.2 0 1 0-104.4 0Z\" fill=\"#FAFAFA\" ></path><path d=\"M588.1 431.5m-52.2 0a52.2 52.2 0 1 0 104.4 0 52.2 52.2 0 1 0-104.4 0Z\" fill=\"#FAFAFA\" ></path><path d=\"M435.9 431.5m-27.8 0a27.8 27.8 0 1 0 55.6 0 27.8 27.8 0 1 0-55.6 0Z\" fill=\"#040000\" ></path><path d=\"M601.9 407.4c-5.7 2.9-11.3 5.9-16.9 9-6.8 3.8-15.3 7.8-20.5 13.8-5.6 6.5 1.6 11.1 6.7 14.4 11.2 7.1 23.3 13 35.1 19 5.7 2.9 10.8-5.7 5.1-8.6-10.9-5.6-21.9-11.1-32.4-17.4-2.4-1.4-4.6-3.1-7-4.6 1 0.6-0.4-0.4-0.4-0.4-1.9-0.3-0.5 4.2 0.5 4.1-0.1 0-0.6 0.3 0.3-0.3 0.5-0.3 1-0.9 1.5-1.3 9.7-7.9 21.9-13.5 33.1-19.2 5.7-2.7 0.6-11.4-5.1-8.5zM406.6 547.6c11.5 14.4 27 26.7 42.7 36.3 32.2 19.8 71.2 27.2 107.6 15.4 29.5-9.6 54.6-29.1 75.5-51.6 10.8-11.6-6.6-29.1-17.5-17.5-9.4 10.1-19.5 19.7-30.8 27.7-4.6 3.2-9.3 6.2-14.2 8.9-5 2.8-9.9 5.1-14.1 6.7-4.6 1.7-9.3 3.2-14.1 4.4-2.2 0.5-4.4 1-6.6 1.4-1 0.2-2 0.3-2.9 0.5 2.6-0.4-2.1 0.2-2.5 0.3-4.1 0.4-8.3 0.5-12.5 0.4-2.2-0.1-4.4-0.2-6.6-0.4-1.1-0.1-2.2-0.2-3.2-0.3-1.5-0.2-1.4-0.2 0.1 0l-2.1-0.3c-7.8-1.3-15.4-3.4-22.8-6.2-0.9-0.4-1.8-0.7-2.8-1.1-3.1-1.2 2.3 1.1-0.7-0.3-1.5-0.7-2.9-1.3-4.4-2-3.7-1.8-7.2-3.7-10.8-5.8-5.7-3.4-11.1-7.1-16.4-11.1 3 2.3-1.1-0.9-1.8-1.5-1.1-0.9-2.1-1.7-3.1-2.6-2.1-1.8-4.2-3.7-6.3-5.6-4.4-4.1-8.7-8.4-12.4-13.1-4.2-5.2-13.1-4.3-17.5 0-5 5.1-4 12.2 0.2 17.4z\" fill=\"#040000\" ></path></svg>`\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: '标记图标',\r\n    type: 'sign',\r\n    list: [\r\n      {\r\n        name: '1',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M809.728 429.696a18.901333 18.901333 0 0 0-15.274667-12.885333l-183.466666-26.624-81.92-166.272a18.901333 18.901333 0 0 0-34.005334 0l-81.92 166.272-183.594666 26.624a19.029333 19.029333 0 0 0-10.496 32.298666l132.693333 129.536-31.274667 182.741334a18.816 18.816 0 0 0 27.477334 19.84l164.138666-86.186667 164.096 86.058667a18.773333 18.773333 0 1 0 27.434667-19.84l-31.36-182.741334 132.693333-129.408a18.901333 18.901333 0 0 0 4.778667-19.413333z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '2',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M644.565333 306.901333c32.128 0 65.834667-5.76 101.077334-17.237333a17.066667 17.066667 0 0 1 22.357333 16.213333v328.32c-1.109333 0.768 10.325333 27.093333-99.370667 19.84-109.653333-7.210667-181.76-45.098667-246.869333-45.098666-65.152 0-49.322667 2.688-74.154667 8.405333v168.064a24.746667 24.746667 0 0 1-24.490666 25.258667 22.528 22.528 0 0 1-17.28-7.253334 24.149333 24.149333 0 0 1-7.168-18.005333V281.258667C299.776 280.490667 328.106667 256 421.76 256s164.437333 50.901333 222.805333 50.901333z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '3',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M524.074667 225.408l274.517333 274.517333a17.066667 17.066667 0 0 1 0 24.149334l-274.517333 274.517333a17.066667 17.066667 0 0 1-24.149334 0l-274.517333-274.517333a17.066667 17.066667 0 0 1 0-24.149334l274.517333-274.517333a17.066667 17.066667 0 0 1 24.149334 0z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '4',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M317.866667 300.8h388.266666c9.386667 0 17.066667 7.68 17.066667 17.066667v388.266666a17.066667 17.066667 0 0 1-17.066667 17.066667h-388.266666a17.066667 17.066667 0 0 1-17.066667-17.066667v-388.266666c0-9.386667 7.68-17.066667 17.066667-17.066667z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '5',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M498.346667 279.082667L248.789333 701.44a15.829333 15.829333 0 0 0 13.653334 23.893333h499.114666a15.829333 15.829333 0 0 0 13.653334-23.893333l-249.6-422.357333a15.829333 15.829333 0 0 0-27.264 0z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '6',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M497.749333 798.549333l-31.445333-28.501333C313.941333 631.722667 213.333333 540.501333 213.333333 428.8a160.981333 160.981333 0 0 1 162.730667-162.730667c51.498667 0 100.906667 23.978667 133.12 61.696a177.536 177.536 0 0 1 133.162667-61.696 160.981333 160.981333 0 0 1 162.730666 162.730667c0 111.701333-100.608 202.965333-252.970666 341.333333l-31.445334 28.458667a17.066667 17.066667 0 0 1-22.912 0z\" fill=\"#FFFFFF\"></path><path d=\"M634.538667 487.808L555.050667 426.24 507.306667 256a201.002667 201.002667 0 0 0-23.594667 20.394667l-0.256-0.256L525.653333 426.666667l-133.290666 59.946666a14.08 14.08 0 0 0-8.021334 15.957334l28.757334 126.378666a14.208 14.208 0 0 0 27.733333-6.229333l-26.24-115.114667 126.037333-56.704 76.416 59.136a14.250667 14.250667 0 0 0 19.968-2.474666 14.08 14.08 0 0 0-2.474666-19.797334z\" fill=\"#6D768D\"></path></svg>`\r\n      },\r\n      {\r\n        name: '7',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M497.749333 798.549333l-31.445333-28.501333C313.941333 631.722667 213.333333 540.501333 213.333333 428.8a160.981333 160.981333 0 0 1 162.730667-162.730667c51.498667 0 100.906667 23.978667 133.12 61.696a177.536 177.536 0 0 1 133.162667-61.696 160.981333 160.981333 0 0 1 162.730666 162.730667c0 111.701333-100.608 202.965333-252.970666 341.333333l-31.445334 28.458667a17.066667 17.066667 0 0 1-22.912 0z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '8',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M374.656 273.194667c5.973333 4.48 12.117333 9.6 18.346667 15.36 6.272 5.717333 11.904 12.373333 16.896 19.84 2.517333 4.010667 5.504 8.490667 9.002666 13.482666a529.493333 529.493333 0 0 1 20.266667 32.213334h155.221333a169.813333 169.813333 0 0 0 9.770667-15.744c2.474667-4.48 5.248-8.96 8.234667-13.482667a460.842667 460.842667 0 0 1 23.253333-31.829333c4.992-6.229333 12.245333-12.373333 21.76-18.346667a34.261333 34.261333 0 0 0 10.112-9.728 31.274667 31.274667 0 0 0 5.248-11.989333 18.56 18.56 0 0 0-1.536-11.605334 17.664 17.664 0 0 0-10.112-8.618666c-4.48-1.493333-8.362667-2.005333-11.605333-1.493334a46.933333 46.933333 0 0 0-9.770667 2.602667c-3.242667 1.28-6.613333 2.645333-10.112 4.138667a32.426667 32.426667 0 0 1-12.757333 2.261333 26.026667 26.026667 0 0 1-12.373334-2.645333 45.653333 45.653333 0 0 1-8.96-6.357334l-8.661333-7.850666a30.336 30.336 0 0 0-11.989333-6.4c-9.984-3.968-18.005333-4.693333-24.021334-2.218667-5.973333 2.474667-11.946667 6.485333-17.962666 11.946667a88.618667 88.618667 0 0 1-11.989334 10.496 7.338667 7.338667 0 0 1-3.754666 1.493333 46.165333 46.165333 0 0 1-8.277334-5.205333 71.808 71.808 0 0 1-7.125333-4.906667 37.973333 37.973333 0 0 1-6.4-6.357333c-3.968-3.968-9.941333-6.613333-17.92-7.850667a31.061333 31.061333 0 0 0-21.76 4.138667c-8.533333 5.461333-14.506667 10.069333-18.048 13.824a29.354667 29.354667 0 0 1-15.744 7.893333 23.978667 23.978667 0 0 1-13.098667-0.768 987.733333 987.733333 0 0 0-14.634666-4.48 80.725333 80.725333 0 0 0-14.250667-2.986667 16.768 16.768 0 0 0-11.989333 2.986667c-6.997333 5.461333-9.258667 12.074667-6.741334 19.84a34.56 34.56 0 0 0 13.482667 18.346667z\" fill=\"#FFFFFF\"></path><path d=\"M780.757333 545.152a219.306667 219.306667 0 0 0-19.882666-65.536 224.981333 224.981333 0 0 0-33.365334-49.792 430.336 430.336 0 0 0-37.12-37.12c-14.506667-11.946667-27.264-23.296-38.272-34.048a544.512 544.512 0 0 1-27.733333-28.842667 305.28 305.28 0 0 1-22.485333-26.197333h-168.746667c-6.485333 8.490667-13.994667 17.493333-22.485333 26.965333a360.96 360.96 0 0 1-26.24 28.074667c-10.538667 10.24-22.272 21.12-35.285334 32.597333a305.493333 305.493333 0 0 0-41.6 44.16 250.026667 250.026667 0 0 0-49.493333 117.589334 216.106667 216.106667 0 0 0 1.877333 70.4 220.586667 220.586667 0 0 0 75.349334 126.549333c21.248 18.005333 47.146667 32.597333 77.653333 43.818667 30.464 11.264 65.493333 16.853333 104.96 16.853333 38.528 0 72.874667-4.864 103.125333-14.592a265.045333 265.045333 0 0 0 78.378667-39.338667c21.973333-16.469333 39.594667-35.797333 52.864-58.026666 13.226667-22.186667 22.101333-45.824 26.624-70.784 4.992-30.421333 5.632-58.026667 1.877333-82.773334z\" fill=\"#FFFFFF\"></path><path d=\"M593.322667 647.509333a20.48 20.48 0 0 1-11.861334 3.2h-50.133333v14.165334c0 4.266667-1.792 8.362667-5.376 12.373333a15.914667 15.914667 0 0 1-13.952 5.333333 24.917333 24.917333 0 0 1-14.336-3.882666c-3.84-2.602667-5.973333-7.210667-6.4-13.824v-14.165334h-48.725333a17.792 17.792 0 0 1-11.818667-3.882666 10.24 10.24 0 0 1-3.968-9.6c0-4.266667 1.578667-7.68 4.693333-10.24a16.768 16.768 0 0 1 11.093334-3.925334h48.682666v-24.789333h-48.682666a15.573333 15.573333 0 0 1-11.52-4.266667 13.525333 13.525333 0 0 1-4.266667-9.941333 15.36 15.36 0 0 1 4.693333-10.624 14.72 14.72 0 0 1 11.093334-4.949333h48.682666l0.725334-14.890667a1053.568 1053.568 0 0 1-40.832-42.538667l-10.752-9.898666a41.216 41.216 0 0 1-6.442667-11.690667c-1.92-4.992-0.938667-10.069333 2.858667-15.274667a13.653333 13.653333 0 0 1 15.786666-3.84c6.186667 2.090667 11.221333 4.821333 15.018667 8.106667 1.92 2.389333 5.248 5.888 10.026667 10.666667l15.061333 14.848 19.328 19.157333 22.186667-20.565333a987.605333 987.605333 0 0 1 29.397333-25.514667 21.162667 21.162667 0 0 1 14.293333-5.674667c5.290667 0 9.557333 2.133333 12.928 6.4 6.186667 7.082667 3.84 15.36-7.168 24.789334a179.072 179.072 0 0 0-12.885333 12.373333c-5.76 5.973333-11.52 11.733333-17.194667 17.408-6.698667 7.082667-14.08 14.378667-22.186666 21.973333v13.44h46.506666c6.698667 0 11.605333 1.536 14.72 4.608a14.165333 14.165333 0 0 1 4.650667 10.282667c0 4.266667-1.450667 7.936-4.309333 11.008-2.858667 3.029333-7.637333 4.352-14.336 3.84l-46.506667 0.768-0.768 24.064h45.866667c13.354667 0 20.053333 4.992 20.053333 14.933333 0.469333 4.693333-0.853333 8.106667-3.925333 10.24z\" fill=\"#6D768D\"></path></svg>`\r\n      },\r\n      {\r\n        name: '9',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M512 213.333333l234.666667 341.333334h-128v213.333333h-213.333334v-213.333333h-128L512 213.333333z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '10',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M533.333333 810.666667L298.666667 469.333333h128V256h213.333333v213.333333h128l-234.666667 341.333334z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '11',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M213.333333 533.333333L554.666667 298.666667v128h213.333333v213.333333h-213.333333v128l-341.333334-234.666667z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '12',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M810.666667 533.333333L469.333333 768v-128H256v-213.333333h213.333333V298.666667l341.333334 234.666666z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '13',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M0 512c0 282.752 229.248 512 512 512s512-229.248 512-512S794.752 0 512 0 0 229.248 0 512z\" fill=\"#6D768D\"></path><path d=\"M571.349333 508.586667l162.389334-162.346667a44.330667 44.330667 0 1 0-62.72-62.72l-162.389334 162.389333-162.517333-162.389333a44.330667 44.330667 0 1 0-62.72 62.72l162.389333 162.389333-162.389333 162.474667a44.330667 44.330667 0 1 0 62.72 62.72l162.389333-162.346667 162.389334 162.389334a44.330667 44.330667 0 1 0 62.72-62.72l-162.261334-162.56z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '14',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0C233.386667 0 0 225.877333 0 512s225.877333 512 512 512 512-225.877333 512-512S790.613333 0 512 0z\" fill=\"#6D768D\"></path><path d=\"M726.144 311.210667l-277.333333 305.066666-124.8-124.8c-13.866667-13.866667-41.6-13.866667-55.466667 0-13.866667 13.866667-13.866667 41.6 0 55.466667l159.445333 152.533333c13.866667 13.866667 41.6 13.866667 55.466667 0l305.066667-332.8c13.866667-13.866667 13.866667-41.6 0-55.466666-20.778667-13.866667-48.512-13.866667-62.378667 0z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '15',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M541.952 755.626667a40.618667 40.618667 0 0 1-29.824 12.373333 41.344 41.344 0 0 1-30.122667-12.373333 40.106667 40.106667 0 0 1-12.672-30.122667c0-11.605333 4.096-21.845333 12.672-30.122667a40.405333 40.405333 0 0 1 30.122667-12.714666c11.605333 0 21.546667 4.138667 29.824 12.714666a40.32 40.32 0 0 1 12.714667 30.122667c0 11.861333-4.096 21.76-12.714667 30.122667zM450.986667 241.28A77.866667 77.866667 0 0 1 512.256 213.333333c24.874667 0 45.354667 8.917333 61.354667 27.946667 15.488 18.432 23.722667 41.685333 23.722666 69.674667 0 23.765333-33.152 200.533333-44.672 329.045333h-80.128C463.146667 511.402667 426.666667 334.677333 426.666667 310.954667c0-27.392 8.277333-50.645333 24.32-69.674667z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '16',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 0C229.248 0 0 229.248 0 512s229.248 512 512 512 512-229.248 512-512S794.794667 0 512 0z\" fill=\"#6D768D\"></path><path d=\"M490.666667 682.666667a64 64 0 1 1 0 128 64 64 0 0 1 0-128z m13.994666-490.752c61.397333 0 112.341333 14.634667 153.002667 43.946666 40.533333 29.269333 60.885333 72.618667 60.885333 130.133334 0 35.242667-12.373333 64.938667-29.952 89.045333-10.282667 14.677333-33.664 33.408-62.890666 56.192l-32.426667 22.357333c-15.701333 12.202667-29.696 26.453333-34.858667 42.666667-1.706667 5.546667-3.072 14.677333-3.968 24.533333-0.426667 4.949333-4.864 15.018667-15.232 15.018667h-83.328c-13.568 0-15.957333-10.581333-15.744-15.786667 1.493333-34.005333 4.608-64.213333 18.474667-80.469333 28.074667-32.896 91.904-73.813333 91.904-73.813333a104.106667 104.106667 0 0 0 23.552-24.021334c10.837333-14.933333 19.797333-31.317333 19.797333-49.237333 0-20.565333-6.016-39.338667-18.090666-56.32-12.032-16.938667-34.090667-25.386667-66.005334-25.386667-31.445333 0-53.76 10.410667-66.901333 31.274667-9.685333 15.445333-15.786667 29.610667-18.346667 45.013333-0.853333 5.461333-4.394667 16.981333-16.042666 16.981334H327.210667c-17.322667 0-21.12-11.221333-20.650667-16.64 6.272-68.138667 32.896-114.688 80-144.597334 32-20.565333 71.381333-30.890667 118.101333-30.890666z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '17',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M336.256 410.026667H253.312a40.021333 40.021333 0 0 0-39.850667 43.264l23.296 278.101333c1.706667 20.693333 19.072 36.608 39.850667 36.608h59.648c11.050667 0 20.010667-8.96 20.010667-19.968v-318.037333a19.968 19.968 0 0 0-20.010667-19.968z m434.432 0h-178.944C653.312 182.314667 548.949333 170.666667 548.949333 170.666667c-44.288 0-35.114667 34.986667-38.442666 40.832 0 84.48-68.010667 155.093333-101.034667 184.362666a39.552 39.552 0 0 0-13.226667 29.653334v322.56c0 11.008 8.96 19.925333 20.010667 19.925333h233.728c30.378667 0 58.154667-17.152 71.68-44.373333 18.176-36.736 40.448-90.112 54.656-133.973334 13.781333-42.410667 26.24-94.976 33.578667-131.968a39.850667 39.850667 0 0 0-39.253334-47.658666z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '18',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M796.16 413.909333c-31.146667-0.298667-115.626667-0.085333-146.858667-0.085333h-158.464c8.533333-7.68 15.914667-14.506667 23.594667-20.906667 29.781333-24.874667 25.813333-71.082667-14.208-88.874666-22.954667-10.24-44.970667-5.632-64 11.52-34.944 31.274667-69.632 62.677333-104.277333 93.994666a15.488 15.488 0 0 1-11.178667 4.437334c-11.221333-0.085333-26.88-0.128-46.933333-0.170667a17.066667 17.066667 0 0 0-17.109334 17.066667L256 719.701333a17.066667 17.066667 0 0 0 17.066667 17.152l49.578666-0.085333c3.968 0 7.466667 0.768 10.88 2.602667 15.829333 8.832 31.701333 17.493333 47.616 26.24a18.133333 18.133333 0 0 0 9.301334 2.346666h168.405333c6.186667 0 11.946667-0.981333 17.834667-2.56 29.44-7.253333 40.021333-30.293333 38.528-52.565333-0.768-9.728-4.266667-18.346667-9.984-26.24 19.626667-5.76 35.114667-16.213333 42.112-36.096 7.125333-20.394667 1.621333-38.4-12.672-53.333333 28.16-19.754667 34.858667-44.672 18.645333-75.648h140.458667c6.570667 0 13.013333-0.597333 19.370666-2.645334 31.957333-9.813333 48.810667-42.88 35.626667-71.552-10.154667-22.186667-28.629333-33.152-52.608-33.450666z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '19',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M270.506667 413.909333c31.146667-0.298667 115.626667-0.085333 146.858666-0.085333h158.464c-8.533333-7.68-15.914667-14.506667-23.594666-20.906667-29.781333-24.874667-25.813333-71.082667 14.208-88.874666 22.954667-10.24 44.970667-5.632 64 11.52 34.944 31.274667 69.632 62.677333 104.277333 93.994666 3.413333 2.986667 6.528 4.437333 11.178667 4.437334 11.221333-0.085333 26.88-0.128 46.933333-0.170667a17.066667 17.066667 0 0 1 17.109333 17.066667l0.682667 288.853333a17.066667 17.066667 0 0 1-17.066667 17.152l-49.578666-0.085333a22.101333 22.101333 0 0 0-10.88 2.602666c-15.829333 8.832-31.701333 17.493333-47.616 26.24a18.133333 18.133333 0 0 1-9.301334 2.346667h-168.405333a68.693333 68.693333 0 0 1-17.834667-2.56c-29.44-7.253333-40.021333-30.293333-38.528-52.565333 0.768-9.728 4.266667-18.346667 9.984-26.24-19.626667-5.76-35.114667-16.213333-42.112-36.096-7.125333-20.394667-1.621333-38.4 12.672-53.333334-28.16-19.754667-34.858667-44.672-18.645333-75.648H272.853333c-6.570667 0-13.013333-0.597333-19.370666-2.645333-31.957333-9.813333-48.810667-42.88-35.626667-71.552 10.154667-22.186667 28.629333-33.152 52.608-33.450667z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '20',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M667.733333 480.128H400v-111.36a97.706667 97.706667 0 0 1 97.621333-97.621333 97.706667 97.706667 0 0 1 97.578667 97.621333 28.885333 28.885333 0 0 0 57.813333 0A155.605333 155.605333 0 0 0 497.621333 213.333333a155.605333 155.605333 0 0 0-155.392 155.434667v111.36h-14.677333A28.885333 28.885333 0 0 0 298.666667 509.013333v292.010667a28.885333 28.885333 0 0 0 28.885333 28.885333h340.138667a28.885333 28.885333 0 0 0 28.928-28.885333V509.013333a28.885333 28.885333 0 0 0-28.928-28.885333z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '21',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M400.042667 437.461333v-111.36a97.706667 97.706667 0 0 1 97.621333-97.621333 97.706667 97.706667 0 0 1 97.578667 97.621333 28.885333 28.885333 0 0 0 57.813333 0A155.605333 155.605333 0 0 0 497.621333 170.666667a155.605333 155.605333 0 0 0-155.392 155.434666v111.36h-14.677333A28.885333 28.885333 0 0 0 298.666667 466.346667v292.010666a28.885333 28.885333 0 0 0 28.885333 28.885334h340.138667a28.885333 28.885333 0 0 0 28.928-28.885334V466.346667a28.885333 28.885333 0 0 0-28.928-28.885334H400.042667z\" fill=\"#FFFFFF\"></path><path d=\"M595.242667 437.461333v-111.36a97.706667 97.706667 0 0 0-97.621334-97.621333 97.706667 97.706667 0 0 0-97.578666 97.621333 28.885333 28.885333 0 0 1-57.813334 0A155.605333 155.605333 0 0 1 497.621333 170.666667a155.605333 155.605333 0 0 1 155.434667 155.434666v111.36h14.634667c16 0 28.928 12.928 28.928 28.885334v292.010666a28.885333 28.885333 0 0 1-28.928 28.885334H327.552A28.885333 28.885333 0 0 1 298.666667 758.357333V466.346667c0-15.957333 12.928-28.885333 28.885333-28.885334h267.690667z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '22',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M511.999787 512.000213m-511.999787 0a511.999787 511.999787 0 1 0 1023.999573 0 511.999787 511.999787 0 1 0-1023.999573 0Z\" fill=\"#6D768D\"></path><path d=\"M381.354508 364.586941c0 54.015977 29.013321 103.935957 75.946635 130.986613a152.53327 152.53327 0 0 0 151.935936 0 151.12527 151.12527 0 0 0 75.946636-130.986613A151.594604 151.594604 0 0 0 533.333111 213.333671a151.594604 151.594604 0 0 0-151.89327 151.25327zM660.479725 498.901552a185.258589 185.258589 0 0 1-127.146614 50.346646c-49.066646 0-93.866628-19.199992-127.06128-50.346646C317.141201 544.853533 255.999893 637.440161 255.999893 744.106783c0 13.183995 10.709329 23.850657 23.978657 23.850657h506.709122a23.893323 23.893323 0 0 0 23.978657-23.893323c0-106.538622-61.098641-199.25325-150.186604-245.205232z\" fill=\"#FFFFFF\"></path></svg>`\r\n      },\r\n      {\r\n        name: '23',\r\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 1024 1024\"><path d=\"M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z\" fill=\"#6D768D\"></path><path d=\"M445.610667 401.578667a129.322667 129.322667 0 1 0 258.645333 0 129.322667 129.322667 0 0 0-258.645333 0z m237.568 114.901333a157.354667 157.354667 0 0 1-216.362667 0 236.373333 236.373333 0 0 0-127.957333 209.706667c0 11.264 9.130667 20.394667 20.394666 20.394666h431.402667a20.394667 20.394667 0 0 0 20.394667-20.394666 236.373333 236.373333 0 0 0-127.872-209.706667zM409.813333 401.578667c0-40.362667 14.592-77.397333 38.698667-106.112a112.725333 112.725333 0 0 0-29.013333-3.925334 112.64 112.64 0 0 0-112.426667 112.469334 112.64 112.64 0 0 0 144.853333 107.648 164.693333 164.693333 0 0 1-42.112-110.08z m-18.602666 136.704a136.533333 136.533333 0 0 1-65.706667-34.474667 205.44 205.44 0 0 0-111.232 182.4c0 9.813333 7.936 17.706667 17.706667 17.706667H303.36a273.621333 273.621333 0 0 1 87.893333-165.632z\" fill=\"#FFFFFF\"></path></svg>`\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\n//  获取nodeIconList icon内容\r\nconst getNodeIconListIcon = (name, extendIconList = []) => {\r\n  let arr = name.split('_')\r\n  const iconList = mergerIconList([...nodeIconList, ...extendIconList])\r\n  let typeData = iconList.find(item => {\r\n    return item.type === arr[0]\r\n  })\r\n  if (typeData) {\r\n    let typeName = typeData.list.find(item => {\r\n      return item.name === arr[1]\r\n    })\r\n    if (typeName) {\r\n      return typeName.icon\r\n    }\r\n    return ''\r\n  } else {\r\n    return ''\r\n  }\r\n}\r\n\r\nexport default {\r\n  hyperlink,\r\n  note,\r\n  attachment,\r\n  nodeIconList,\r\n  getNodeIconListIcon\r\n}\r\n", "import {\r\n  resizeImgSize,\r\n  removeRichTextStyes,\r\n  checkIsRichText,\r\n  isUndef,\r\n  createForeignObjectNode,\r\n  addXmlns,\r\n  generateColorByContent,\r\n  camelCaseToHyphen,\r\n  getNodeRichTextStyles\r\n} from '../../../utils'\r\nimport { Image as SVGImage, SVG, A, G, Rect, Text } from '@svgdotjs/svg.js'\r\nimport iconsSvg from '../../../svg/icons'\r\nimport { noneRichTextNodeLineHeight } from '../../../constants/constant'\r\n\r\n// 测量svg文本宽高\r\nconst measureText = (text, style) => {\r\n  const g = new G()\r\n  const node = new Text().text(text)\r\n  style.text(node)\r\n  g.add(node)\r\n  return g.bbox()\r\n}\r\n\r\n// 标签默认的样式\r\nconst defaultTagStyle = {\r\n  radius: 3, // 标签矩形的圆角大小\r\n  fontSize: 12, // 字号，建议文字高度不要大于height\r\n  fill: '', // 标签矩形的背景颜色\r\n  height: 20, // 标签矩形的高度\r\n  paddingX: 8 // 水平内边距，如果设置了width，将忽略该配置\r\n  //width: 30 // 标签矩形的宽度，如果不设置，默认以文字的宽度+paddingX*2为宽度\r\n}\r\n\r\n//  创建图片节点\r\nfunction createImgNode() {\r\n  const img = this.getData('image')\r\n  if (!img) {\r\n    return\r\n  }\r\n  const imgSize = this.getImgShowSize()\r\n  const node = new SVGImage().load(img).size(...imgSize)\r\n  // 如果指定了加载失败显示的图片，那么加载一下图片检测是否失败\r\n  const { defaultNodeImage } = this.mindMap.opt\r\n  if (defaultNodeImage) {\r\n    const imgEl = new Image()\r\n    imgEl.onerror = () => {\r\n      node.load(defaultNodeImage)\r\n    }\r\n    imgEl.src = img\r\n  }\r\n  if (this.getData('imageTitle')) {\r\n    node.attr('title', this.getData('imageTitle'))\r\n  }\r\n  node.on('click', e => {\r\n    this.mindMap.emit('node_img_click', this, node, e)\r\n  })\r\n  node.on('dblclick', e => {\r\n    this.mindMap.emit('node_img_dblclick', this, e, node)\r\n  })\r\n  node.on('mouseenter', e => {\r\n    this.mindMap.emit('node_img_mouseenter', this, node, e)\r\n  })\r\n  node.on('mouseleave', e => {\r\n    this.mindMap.emit('node_img_mouseleave', this, node, e)\r\n  })\r\n  node.on('mousemove', e => {\r\n    this.mindMap.emit('node_img_mousemove', this, node, e)\r\n  })\r\n  return {\r\n    node,\r\n    width: imgSize[0],\r\n    height: imgSize[1]\r\n  }\r\n}\r\n\r\n//  获取图片显示宽高\r\nfunction getImgShowSize() {\r\n  const { custom, width, height } = this.getData('imageSize')\r\n  // 如果是自定义了图片的宽高，那么不受最大宽高限制\r\n  if (custom) return [width, height]\r\n  return resizeImgSize(\r\n    width,\r\n    height,\r\n    this.mindMap.themeConfig.imgMaxWidth,\r\n    this.mindMap.themeConfig.imgMaxHeight\r\n  )\r\n}\r\n\r\n//  创建icon节点\r\nfunction createIconNode() {\r\n  let _data = this.getData()\r\n  if (!_data.icon || _data.icon.length <= 0) {\r\n    return []\r\n  }\r\n  let iconSize = this.mindMap.themeConfig.iconSize\r\n  return _data.icon.map(item => {\r\n    let src = iconsSvg.getNodeIconListIcon(\r\n      item,\r\n      this.mindMap.opt.iconList || []\r\n    )\r\n    let node = null\r\n    // svg图标\r\n    if (/^<svg/.test(src)) {\r\n      node = SVG(src)\r\n    } else {\r\n      // 图片图标\r\n      node = new SVGImage().load(src)\r\n    }\r\n    node.size(iconSize, iconSize)\r\n    node.on('click', e => {\r\n      this.mindMap.emit('node_icon_click', this, item, e, node)\r\n    })\r\n    node.on('mouseenter', e => {\r\n      this.mindMap.emit('node_icon_mouseenter', this, item, e, node)\r\n    })\r\n    node.on('mouseleave', e => {\r\n      this.mindMap.emit('node_icon_mouseleave', this, item, e, node)\r\n    })\r\n    return {\r\n      node,\r\n      width: iconSize,\r\n      height: iconSize\r\n    }\r\n  })\r\n}\r\n\r\n// 创建富文本节点\r\nfunction createRichTextNode(specifyText) {\r\n  const hasCustomWidth = this.hasCustomWidth()\r\n  let text =\r\n    typeof specifyText === 'string' ? specifyText : this.getData('text')\r\n  let { textAutoWrapWidth, emptyTextMeasureHeightText } = this.mindMap.opt\r\n  textAutoWrapWidth = hasCustomWidth ? this.customTextWidth : textAutoWrapWidth\r\n  const g = new G()\r\n  // 创建富文本结构，或复位富文本样式\r\n  let recoverText = false\r\n  if (this.getData('resetRichText')) {\r\n    delete this.nodeData.data.resetRichText\r\n    recoverText = true\r\n  }\r\n  if (recoverText && !isUndef(text)) {\r\n    if (checkIsRichText(text)) {\r\n      // 如果是富文本那么移除内联样式\r\n      text = removeRichTextStyes(text)\r\n    } else {\r\n      // 非富文本则改为富文本结构\r\n      text = `<p>${text}</p>`\r\n    }\r\n    this.setData({\r\n      text\r\n    })\r\n  }\r\n  // 节点的富文本样式数据\r\n  const nodeTextStyleList = []\r\n  const nodeRichTextStyles = getNodeRichTextStyles(this)\r\n  Object.keys(nodeRichTextStyles).forEach(prop => {\r\n    nodeTextStyleList.push([prop, nodeRichTextStyles[prop]])\r\n  })\r\n  // 测量文本大小\r\n  if (!this.mindMap.commonCaches.measureRichtextNodeTextSizeEl) {\r\n    this.mindMap.commonCaches.measureRichtextNodeTextSizeEl =\r\n      document.createElement('div')\r\n    this.mindMap.commonCaches.measureRichtextNodeTextSizeEl.style.position =\r\n      'fixed'\r\n    this.mindMap.commonCaches.measureRichtextNodeTextSizeEl.style.left =\r\n      '-999999px'\r\n    this.mindMap.el.appendChild(\r\n      this.mindMap.commonCaches.measureRichtextNodeTextSizeEl\r\n    )\r\n  }\r\n  const div = this.mindMap.commonCaches.measureRichtextNodeTextSizeEl\r\n  // 应用节点的文本样式\r\n  nodeTextStyleList.forEach(([prop, value]) => {\r\n    div.style[prop] = value\r\n  })\r\n  div.style.lineHeight = 1.2\r\n  const html = `<div>${text}</div>`\r\n  div.innerHTML = html\r\n  const el = div.children[0]\r\n  el.classList.add('smm-richtext-node-wrap')\r\n  addXmlns(el)\r\n  el.style.maxWidth = textAutoWrapWidth + 'px'\r\n  if (hasCustomWidth) {\r\n    el.style.width = this.customTextWidth + 'px'\r\n  } else {\r\n    el.style.width = ''\r\n  }\r\n  let { width, height } = el.getBoundingClientRect()\r\n  // 如果文本为空，那么需要计算一个默认高度\r\n  if (height <= 0) {\r\n    div.innerHTML = `<p>${emptyTextMeasureHeightText}</p>`\r\n    let elTmp = div.children[0]\r\n    elTmp.classList.add('smm-richtext-node-wrap')\r\n    height = elTmp.getBoundingClientRect().height\r\n    div.innerHTML = html\r\n  }\r\n  width = Math.min(Math.ceil(width) + 1, textAutoWrapWidth) // 修复getBoundingClientRect方法对实际宽度是小数的元素获取到的值是整数，导致宽度不够文本发生换行的问题\r\n  height = Math.ceil(height)\r\n  g.attr('data-width', width)\r\n  g.attr('data-height', height)\r\n  const foreignObject = createForeignObjectNode({\r\n    el: div.children[0],\r\n    width,\r\n    height\r\n  })\r\n  // 应用节点文本样式\r\n  // 进入文本编辑时，这个样式也会同样添加到文本编辑框的元素上\r\n  const foreignObjectStyle = {\r\n    'line-height': 1.2\r\n  }\r\n  nodeTextStyleList.forEach(([prop, value]) => {\r\n    foreignObjectStyle[camelCaseToHyphen(prop)] = value\r\n  })\r\n  foreignObject.css(foreignObjectStyle)\r\n  g.add(foreignObject)\r\n  return {\r\n    node: g,\r\n    nodeContent: foreignObject,\r\n    width,\r\n    height\r\n  }\r\n}\r\n\r\n//  创建文本节点\r\nfunction createTextNode(specifyText) {\r\n  if (this.getData('needUpdate')) {\r\n    delete this.nodeData.data.needUpdate\r\n  }\r\n  // 如果是富文本内容，那么转给富文本函数\r\n  if (this.getData('richText')) {\r\n    return this.createRichTextNode(specifyText)\r\n  }\r\n  const text =\r\n    typeof specifyText === 'string' ? specifyText : this.getData('text')\r\n  if (this.getData('resetRichText')) {\r\n    delete this.nodeData.data.resetRichText\r\n  }\r\n  const g = new G()\r\n  const fontSize = this.getStyle('fontSize', false)\r\n  const textAlign = this.getStyle('textAlign', false)\r\n  // 文本超长自动换行\r\n  let textArr = []\r\n  if (!isUndef(text)) {\r\n    textArr = String(text).split(/\\n/gim)\r\n  }\r\n  const { textAutoWrapWidth: maxWidth, emptyTextMeasureHeightText } =\r\n    this.mindMap.opt\r\n  let isMultiLine = textArr.length > 1\r\n  textArr.forEach((item, index) => {\r\n    let arr = item.split('')\r\n    let lines = []\r\n    let line = []\r\n    while (arr.length) {\r\n      let str = arr.shift()\r\n      let text = [...line, str].join('')\r\n      if (measureText(text, this.style).width <= maxWidth) {\r\n        line.push(str)\r\n      } else {\r\n        lines.push(line.join(''))\r\n        line = [str]\r\n      }\r\n    }\r\n    if (line.length > 0) {\r\n      lines.push(line.join(''))\r\n    }\r\n    if (lines.length > 1) {\r\n      isMultiLine = true\r\n    }\r\n    textArr[index] = lines.join('\\n')\r\n  })\r\n  textArr = textArr.join('\\n').replace(/\\n$/g, '').split(/\\n/gim)\r\n  textArr.forEach((item, index) => {\r\n    // 避免尾部的空行不占宽度\r\n    // 同时解决该问题：https://github.com/wanglin2/mind-map/issues/1037\r\n    if (item === '') {\r\n      item = '\uFEFF'\r\n    }\r\n    const node = new Text().text(item)\r\n    node.addClass('smm-text-node-wrap')\r\n    node.attr(\r\n      'text-anchor',\r\n      {\r\n        left: 'start',\r\n        center: 'middle',\r\n        right: 'end'\r\n      }[textAlign] || 'start'\r\n    )\r\n    this.style.text(node)\r\n    node.y(\r\n      fontSize * noneRichTextNodeLineHeight * index +\r\n        ((noneRichTextNodeLineHeight - 1) * fontSize) / 2\r\n    )\r\n    g.add(node)\r\n  })\r\n  let { width, height } = g.bbox()\r\n  // 如果文本为空，那么需要计算一个默认高度\r\n  if (height <= 0) {\r\n    const tmpNode = new Text().text(emptyTextMeasureHeightText)\r\n    this.style.text(tmpNode)\r\n    const tmpBbox = tmpNode.bbox()\r\n    height = tmpBbox.height\r\n  }\r\n  width = Math.min(Math.ceil(width), maxWidth)\r\n  height = Math.ceil(height)\r\n  g.attr('data-width', width)\r\n  g.attr('data-height', height)\r\n  g.attr('data-ismultiLine', isMultiLine || textArr.length > 1)\r\n  return {\r\n    node: g,\r\n    width,\r\n    height\r\n  }\r\n}\r\n\r\n//  创建超链接节点\r\nfunction createHyperlinkNode() {\r\n  const { hyperlink, hyperlinkTitle } = this.getData()\r\n  if (!hyperlink) {\r\n    return\r\n  }\r\n  const { customHyperlinkJump, hyperlinkIcon } = this.mindMap.opt\r\n  const { icon, style } = hyperlinkIcon\r\n  const iconSize = this.getNodeIconSize('hyperlinkIcon')\r\n  const node = new SVG().size(iconSize, iconSize)\r\n  // 超链接节点\r\n  const a = new A().to(hyperlink).target('_blank')\r\n  a.node.addEventListener('click', e => {\r\n    if (typeof customHyperlinkJump === 'function') {\r\n      e.preventDefault()\r\n      customHyperlinkJump(hyperlink, this)\r\n    }\r\n  })\r\n  if (hyperlinkTitle) {\r\n    node.add(SVG(`<title>${hyperlinkTitle}</title>`))\r\n  }\r\n  // 添加一个透明的层，作为鼠标区域\r\n  a.rect(iconSize, iconSize).fill({ color: 'transparent' })\r\n  // 超链接图标\r\n  const iconNode = SVG(icon || iconsSvg.hyperlink).size(iconSize, iconSize)\r\n  this.style.iconNode(iconNode, style.color)\r\n  a.add(iconNode)\r\n  node.add(a)\r\n  return {\r\n    node,\r\n    width: iconSize,\r\n    height: iconSize\r\n  }\r\n}\r\n\r\n//  创建标签节点\r\nfunction createTagNode() {\r\n  const tagData = this.getData('tag')\r\n  if (!tagData || tagData.length <= 0) {\r\n    return []\r\n  }\r\n  let { maxTag, tagsColorMap } = this.mindMap.opt\r\n  tagsColorMap = tagsColorMap || {}\r\n  const nodes = []\r\n  tagData.slice(0, maxTag).forEach((item, index) => {\r\n    let str = ''\r\n    let style = {\r\n      ...defaultTagStyle\r\n    }\r\n    // 旧版只支持字符串类型\r\n    if (typeof item === 'string') {\r\n      str = item\r\n    } else {\r\n      // v0.10.3+版本支持对象类型\r\n      str = item.text\r\n      style = { ...defaultTagStyle, ...item.style }\r\n    }\r\n    // 是否手动设置了标签宽度\r\n    const hasCustomWidth = typeof style.width !== 'undefined'\r\n    // 创建容器节点\r\n    const tag = new G()\r\n    tag.on('click', () => {\r\n      this.mindMap.emit('node_tag_click', this, item, index, tag)\r\n    })\r\n    // 标签文本\r\n    const text = new Text().text(str)\r\n    this.style.tagText(text, style)\r\n    // 获取文本宽高\r\n    const { width: textWidth, height: textHeight } = text.bbox()\r\n    // 矩形宽度\r\n    const rectWidth = hasCustomWidth\r\n      ? style.width\r\n      : textWidth + style.paddingX * 2\r\n    // 取文本和矩形最大宽高作为标签宽高\r\n    const maxWidth = hasCustomWidth ? Math.max(rectWidth, textWidth) : rectWidth\r\n    const maxHeight = Math.max(style.height, textHeight)\r\n    // 文本居中\r\n    if (hasCustomWidth) {\r\n      text.x((maxWidth - textWidth) / 2)\r\n    } else {\r\n      text.x(hasCustomWidth ? 0 : style.paddingX)\r\n    }\r\n    text.cy(-maxHeight / 2)\r\n    // 标签矩形\r\n    const rect = new Rect().size(rectWidth, style.height).cy(-maxHeight / 2)\r\n    if (hasCustomWidth) {\r\n      rect.x((maxWidth - rectWidth) / 2)\r\n    }\r\n    this.style.tagRect(rect, {\r\n      ...style,\r\n      fill:\r\n        style.fill || // 优先节点自身配置\r\n        tagsColorMap[text.node.textContent] || // 否则尝试从实例化选项tagsColorMap映射中获取颜色\r\n        generateColorByContent(text.node.textContent) // 否则按照标签内容生成\r\n    })\r\n    tag.add(rect).add(text)\r\n    nodes.push({\r\n      node: tag,\r\n      width: maxWidth,\r\n      height: maxHeight\r\n    })\r\n  })\r\n  return nodes\r\n}\r\n\r\n//  创建备注节点\r\nfunction createNoteNode() {\r\n  if (!this.getData('note')) {\r\n    return null\r\n  }\r\n  const { icon, style } = this.mindMap.opt.noteIcon\r\n  const iconSize = this.getNodeIconSize('noteIcon')\r\n  const node = new SVG()\r\n    .attr('cursor', 'pointer')\r\n    .addClass('smm-node-note')\r\n    .size(iconSize, iconSize)\r\n  // 透明的层，用来作为鼠标区域\r\n  node.add(new Rect().size(iconSize, iconSize).fill({ color: 'transparent' }))\r\n  // 备注图标\r\n  const iconNode = SVG(icon || iconsSvg.note).size(iconSize, iconSize)\r\n  this.style.iconNode(iconNode, style.color)\r\n  node.add(iconNode)\r\n  // 备注tooltip\r\n  if (!this.mindMap.opt.customNoteContentShow) {\r\n    if (!this.noteEl) {\r\n      this.noteEl = document.createElement('div')\r\n      this.noteEl.style.cssText = `\r\n          position: fixed;\r\n          padding: 10px;\r\n          border-radius: 5px;\r\n          box-shadow: 0 2px 5px rgb(0 0 0 / 10%);\r\n          display: none;\r\n          background-color: #fff;\r\n          z-index: ${this.mindMap.opt.nodeNoteTooltipZIndex}\r\n      `\r\n      const targetNode =\r\n        this.mindMap.opt.customInnerElsAppendTo || document.body\r\n      targetNode.appendChild(this.noteEl)\r\n    }\r\n    this.noteEl.innerText = this.getData('note')\r\n  }\r\n  node.on('mouseover', () => {\r\n    const { left, top } = this.getNoteContentPosition()\r\n    if (!this.mindMap.opt.customNoteContentShow) {\r\n      this.noteEl.style.left = left + 'px'\r\n      this.noteEl.style.top = top + 'px'\r\n      this.noteEl.style.display = 'block'\r\n    } else {\r\n      this.mindMap.opt.customNoteContentShow.show(\r\n        this.getData('note'),\r\n        left,\r\n        top,\r\n        this\r\n      )\r\n    }\r\n  })\r\n  node.on('mouseout', () => {\r\n    if (!this.mindMap.opt.customNoteContentShow) {\r\n      this.noteEl.style.display = 'none'\r\n    } else {\r\n      this.mindMap.opt.customNoteContentShow.hide()\r\n    }\r\n  })\r\n  node.on('click', e => {\r\n    this.mindMap.emit('node_note_click', this, e, node)\r\n  })\r\n  node.on('dblclick', e => {\r\n    this.mindMap.emit('node_note_dblclick', this, e, node)\r\n  })\r\n  return {\r\n    node,\r\n    width: iconSize,\r\n    height: iconSize\r\n  }\r\n}\r\n\r\n//  创建附件节点\r\nfunction createAttachmentNode() {\r\n  const { attachmentUrl, attachmentName } = this.getData()\r\n  if (!attachmentUrl) {\r\n    return\r\n  }\r\n  const iconSize = this.getNodeIconSize('attachmentIcon')\r\n  const { icon, style } = this.mindMap.opt.attachmentIcon\r\n  const node = new SVG().attr('cursor', 'pointer').size(iconSize, iconSize)\r\n  if (attachmentName) {\r\n    node.add(SVG(`<title>${attachmentName}</title>`))\r\n  }\r\n  // 透明的层，用来作为鼠标区域\r\n  node.add(new Rect().size(iconSize, iconSize).fill({ color: 'transparent' }))\r\n  // 备注图标\r\n  const iconNode = SVG(icon || iconsSvg.attachment).size(iconSize, iconSize)\r\n  this.style.iconNode(iconNode, style.color)\r\n  node.add(iconNode)\r\n  node.on('click', e => {\r\n    this.mindMap.emit('node_attachmentClick', this, e, node)\r\n  })\r\n  node.on('contextmenu', e => {\r\n    this.mindMap.emit('node_attachmentContextmenu', this, e, node)\r\n  })\r\n  return {\r\n    node,\r\n    width: iconSize,\r\n    height: iconSize\r\n  }\r\n}\r\n\r\n// 获取节点图标大小\r\nfunction getNodeIconSize(prop) {\r\n  const { style } = this.mindMap.opt[prop]\r\n  return isUndef(style.size) ? this.mindMap.themeConfig.iconSize : style.size\r\n}\r\n\r\n// 获取节点备注显示位置\r\nfunction getNoteContentPosition() {\r\n  const iconSize = this.getNodeIconSize('noteIcon')\r\n  const { scaleY } = this.mindMap.view.getTransformData().transform\r\n  const iconSizeAddScale = iconSize * scaleY\r\n  let { left, top } = this._noteData.node.node.getBoundingClientRect()\r\n  top += iconSizeAddScale\r\n  return {\r\n    left,\r\n    top\r\n  }\r\n}\r\n\r\n// 测量自定义节点内容元素的宽高\r\nfunction measureCustomNodeContentSize(content) {\r\n  if (!this.mindMap.commonCaches.measureCustomNodeContentSizeEl) {\r\n    this.mindMap.commonCaches.measureCustomNodeContentSizeEl =\r\n      document.createElement('div')\r\n    this.mindMap.commonCaches.measureCustomNodeContentSizeEl.style.cssText = `\r\n      position: fixed;\r\n      left: -99999px;\r\n      top: -99999px;\r\n    `\r\n    this.mindMap.el.appendChild(\r\n      this.mindMap.commonCaches.measureCustomNodeContentSizeEl\r\n    )\r\n  }\r\n  this.mindMap.commonCaches.measureCustomNodeContentSizeEl.innerHTML = ''\r\n  this.mindMap.commonCaches.measureCustomNodeContentSizeEl.appendChild(content)\r\n  let rect =\r\n    this.mindMap.commonCaches.measureCustomNodeContentSizeEl.getBoundingClientRect()\r\n  return {\r\n    width: rect.width,\r\n    height: rect.height\r\n  }\r\n}\r\n\r\n// 是否使用的是自定义节点内容\r\nfunction isUseCustomNodeContent() {\r\n  return !!this._customNodeContent\r\n}\r\n\r\nexport default {\r\n  createImgNode,\r\n  getImgShowSize,\r\n  createIconNode,\r\n  createRichTextNode,\r\n  createTextNode,\r\n  createHyperlinkNode,\r\n  createTagNode,\r\n  createNoteNode,\r\n  createAttachmentNode,\r\n  getNoteContentPosition,\r\n  getNodeIconSize,\r\n  measureCustomNodeContentSize,\r\n  isUseCustomNodeContent\r\n}\r\n", "import { Rect } from '@svgdotjs/svg.js'\r\n\r\n// 渲染展开收起按钮的隐藏占位元素\r\nfunction renderExpandBtnPlaceholderRect() {\r\n  // 根节点或没有子节点不需要渲染\r\n  if (this.getChildrenLength() <= 0 || this.isRoot) {\r\n    return\r\n  }\r\n  // 默认显示展开按钮的情况下或不显示展开收起按钮的情况下不需要渲染\r\n  const { alwaysShowExpandBtn, notShowExpandBtn, expandBtnSize } =\r\n    this.mindMap.opt\r\n  if (!alwaysShowExpandBtn && !notShowExpandBtn) {\r\n    let { width, height } = this\r\n    if (!this._unVisibleRectRegionNode) {\r\n      this._unVisibleRectRegionNode = new Rect()\r\n      this._unVisibleRectRegionNode.fill({\r\n        color: 'transparent'\r\n      })\r\n    }\r\n    this.group.add(this._unVisibleRectRegionNode)\r\n    this.renderer.layout.renderExpandBtnRect(\r\n      this._unVisibleRectRegionNode,\r\n      expandBtnSize,\r\n      width,\r\n      height,\r\n      this\r\n    )\r\n  }\r\n}\r\n\r\n// 删除展开收起按钮的隐藏占位元素\r\nfunction clearExpandBtnPlaceholderRect() {\r\n  if (!this._unVisibleRectRegionNode) {\r\n    return\r\n  }\r\n  this._unVisibleRectRegionNode.remove()\r\n  this._unVisibleRectRegionNode = null\r\n}\r\n\r\n// 更新展开收起按钮的隐藏占位元素\r\nfunction updateExpandBtnPlaceholderRect() {\r\n  // 布局改变需要重新渲染\r\n  if (this.needRerenderExpandBtnPlaceholderRect) {\r\n    this.needRerenderExpandBtnPlaceholderRect = false\r\n    this.renderExpandBtnPlaceholderRect()\r\n  }\r\n  // 没有子节点到有子节点需要渲染\r\n  if (this.getChildrenLength() > 0) {\r\n    if (!this._unVisibleRectRegionNode) {\r\n      this.renderExpandBtnPlaceholderRect()\r\n    }\r\n  } else {\r\n    // 有子节点到没子节点，需要删除\r\n    if (this._unVisibleRectRegionNode) {\r\n      this.clearExpandBtnPlaceholderRect()\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  renderExpandBtnPlaceholderRect,\r\n  clearExpandBtnPlaceholderRect,\r\n  updateExpandBtnPlaceholderRect\r\n}\r\n", "import { Rect } from '@svgdotjs/svg.js'\r\n\r\n// 初始化拖拽\r\nfunction initDragHandle() {\r\n  if (!this.checkEnableDragModifyNodeWidth()) {\r\n    return\r\n  }\r\n  // 拖拽手柄元素\r\n  this._dragHandleNodes = null\r\n  // 手柄元素的宽度\r\n  this.dragHandleWidth = 4\r\n  // 鼠标按下时的x坐标\r\n  this.dragHandleMousedownX = 0\r\n  // 鼠标是否处于按下状态\r\n  this.isDragHandleMousedown = false\r\n  // 当前拖拽的手柄序号\r\n  this.dragHandleIndex = 0\r\n  // 鼠标按下时记录当前的customTextWidth值\r\n  this.dragHandleMousedownCustomTextWidth = 0\r\n  // 鼠标按下时记录当前的手型样式\r\n  this.dragHandleMousedownBodyCursor = ''\r\n  // 鼠标按下时记录当前节点的left值\r\n  this.dragHandleMousedownLeft = 0\r\n\r\n  this.onDragMousemoveHandle = this.onDragMousemoveHandle.bind(this)\r\n  window.addEventListener('mousemove', this.onDragMousemoveHandle)\r\n  this.onDragMouseupHandle = this.onDragMouseupHandle.bind(this)\r\n  window.addEventListener('mouseup', this.onDragMouseupHandle)\r\n  this.mindMap.on('node_mouseup', this.onDragMouseupHandle)\r\n}\r\n\r\n// 鼠标移动事件\r\nfunction onDragMousemoveHandle(e) {\r\n  if (!this.isDragHandleMousedown) return\r\n  e.stopPropagation()\r\n  e.preventDefault()\r\n  let {\r\n    minNodeTextModifyWidth,\r\n    maxNodeTextModifyWidth,\r\n    isUseCustomNodeContent,\r\n    customCreateNodeContent\r\n  } = this.mindMap.opt\r\n  const useCustomContent =\r\n    isUseCustomNodeContent && customCreateNodeContent && this._customNodeContent\r\n  document.body.style.cursor = 'ew-resize'\r\n  this.group.css({\r\n    cursor: 'ew-resize'\r\n  })\r\n  const { scaleX } = this.mindMap.draw.transform()\r\n  const ox = e.clientX - this.dragHandleMousedownX\r\n  let newWidth =\r\n    this.dragHandleMousedownCustomTextWidth +\r\n    (this.dragHandleIndex === 0 ? -ox : ox) / scaleX\r\n  newWidth = Math.max(newWidth, minNodeTextModifyWidth)\r\n  if (maxNodeTextModifyWidth !== -1) {\r\n    newWidth = Math.min(newWidth, maxNodeTextModifyWidth)\r\n  }\r\n  // 如果存在图片，那么最小值需要考虑图片宽度\r\n  if (!useCustomContent && this.getData('image')) {\r\n    const imgSize = this.getImgShowSize()\r\n    if (\r\n      this._rectInfo.textContentWidth - this.customTextWidth + newWidth <=\r\n      imgSize[0]\r\n    ) {\r\n      newWidth =\r\n        imgSize[0] + this.customTextWidth - this._rectInfo.textContentWidth\r\n    }\r\n  }\r\n  this.customTextWidth = newWidth\r\n  if (this.dragHandleIndex === 0) {\r\n    this.left = this.dragHandleMousedownLeft + ox / scaleX\r\n  }\r\n  // 自定义内容不重新渲染，交给开发者\r\n  this.reRender(useCustomContent ? [] : ['text'], {\r\n    ignoreUpdateCustomTextWidth: true\r\n  })\r\n}\r\n\r\n// 鼠标松开事件\r\nfunction onDragMouseupHandle() {\r\n  if (!this.isDragHandleMousedown) return\r\n  document.body.style.cursor = this.dragHandleMousedownBodyCursor\r\n  this.group.css({\r\n    cursor: 'default'\r\n  })\r\n  this.isDragHandleMousedown = false\r\n  this.dragHandleMousedownX = 0\r\n  this.dragHandleIndex = 0\r\n  this.dragHandleMousedownCustomTextWidth = 0\r\n  this.setData({\r\n    customTextWidth: this.customTextWidth\r\n  })\r\n  this.mindMap.render()\r\n  this.mindMap.emit('dragModifyNodeWidthEnd', this)\r\n}\r\n\r\n// 插件拖拽手柄元素\r\nfunction createDragHandleNode() {\r\n  const list = [new Rect(), new Rect()]\r\n  list.forEach((node, index) => {\r\n    node\r\n      .size(this.dragHandleWidth, this.height)\r\n      .fill({\r\n        color: 'transparent'\r\n      })\r\n      .css({\r\n        cursor: 'ew-resize'\r\n      })\r\n    node.on('mousedown', e => {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      this.dragHandleMousedownX = e.clientX\r\n      this.dragHandleIndex = index\r\n      this.dragHandleMousedownCustomTextWidth =\r\n        this.customTextWidth === undefined\r\n          ? this._textData\r\n            ? this._textData.width\r\n            : this.width\r\n          : this.customTextWidth\r\n      this.dragHandleMousedownBodyCursor = document.body.style.cursor\r\n      this.dragHandleMousedownLeft = this.left\r\n      this.isDragHandleMousedown = true\r\n    })\r\n  })\r\n  return list\r\n}\r\n\r\n// 更新拖拽按钮的显隐和位置尺寸\r\nfunction updateDragHandle() {\r\n  if (!this.checkEnableDragModifyNodeWidth()) return\r\n  if (!this._dragHandleNodes) {\r\n    this._dragHandleNodes = this.createDragHandleNode()\r\n  }\r\n  if (this.getData('isActive')) {\r\n    this._dragHandleNodes.forEach(node => {\r\n      node.height(this.height)\r\n      this.group.add(node)\r\n    })\r\n    this._dragHandleNodes[1].x(this.width - this.dragHandleWidth)\r\n  } else {\r\n    this._dragHandleNodes.forEach(node => {\r\n      node.remove()\r\n    })\r\n  }\r\n}\r\n\r\nexport default {\r\n  initDragHandle,\r\n  onDragMousemoveHandle,\r\n  onDragMouseupHandle,\r\n  createDragHandleNode,\r\n  updateDragHandle\r\n}\r\n", "import { Circle, G, Text, Image } from '@svgdotjs/svg.js'\r\nimport { generateColorByContent } from '../../../utils/index'\r\n\r\n// 协同相关功能\r\n\r\n// 创建容器\r\nfunction createUserListNode() {\r\n  // 如果没有注册协作插件，那么需要创建\r\n  if (!this.mindMap.cooperate) return\r\n  this._userListGroup = new G()\r\n  this.group.add(this._userListGroup)\r\n}\r\n\r\n// 创建文本头像\r\nfunction createTextAvatar(item) {\r\n  const { avatarSize, fontSize } = this.mindMap.opt.cooperateStyle\r\n  const g = new G()\r\n  const str = item.isMore ? item.name : String(item.name)[0]\r\n  // 圆\r\n  const circle = new Circle().size(avatarSize, avatarSize)\r\n  circle.fill({\r\n    color: item.color || generateColorByContent(str)\r\n  })\r\n  // 文本\r\n  const text = new Text()\r\n    .text(str)\r\n    .fill({\r\n      color: '#fff'\r\n    })\r\n    .css({\r\n      'font-size': fontSize + 'px'\r\n    })\r\n    .dx(-fontSize / 2)\r\n    .dy((avatarSize - fontSize) / 2)\r\n  g.add(circle).add(text)\r\n  return g\r\n}\r\n\r\n// 创建图片头像\r\nfunction createImageAvatar(item) {\r\n  const { avatarSize } = this.mindMap.opt.cooperateStyle\r\n  return new Image().load(item.avatar).size(avatarSize, avatarSize)\r\n}\r\n\r\n// 更新渲染\r\nfunction updateUserListNode() {\r\n  if (!this._userListGroup) return\r\n  const { avatarSize } = this.mindMap.opt.cooperateStyle\r\n  this._userListGroup.clear()\r\n  // 根据当前节点长度计算最多能显示几个\r\n  const length = this.userList.length\r\n  const maxShowCount = Math.floor(this.width / avatarSize)\r\n  const list = []\r\n  if (length > maxShowCount) {\r\n    // 如果当前用户数量比最多能显示的多，最后需要显示一个提示信息\r\n    list.push(...this.userList.slice(0, maxShowCount - 1), {\r\n      isMore: true,\r\n      name: '+' + (length - maxShowCount + 1)\r\n    })\r\n  } else {\r\n    list.push(...this.userList)\r\n  }\r\n  list.forEach((item, index) => {\r\n    let node = null\r\n    if (item.avatar) {\r\n      node = this.createImageAvatar(item)\r\n    } else {\r\n      node = this.createTextAvatar(item)\r\n    }\r\n    node.on('click', (e) => {\r\n      this.mindMap.emit('node_cooperate_avatar_click', item, this, node, e)\r\n    })\r\n    node.on('mouseenter', (e) => {\r\n      this.mindMap.emit('node_cooperate_avatar_mouseenter', item, this, node, e)\r\n    })\r\n    node.on('mouseleave', (e) => {\r\n      this.mindMap.emit('node_cooperate_avatar_mouseleave', item, this, node, e)\r\n    })\r\n    node.x(index * avatarSize).cy(-avatarSize / 2)\r\n    this._userListGroup.add(node)\r\n  })\r\n}\r\n\r\n// 添加用户\r\nfunction addUser(userInfo) {\r\n  if (\r\n    this.userList.find(item => {\r\n      return item.id == userInfo.id\r\n    })\r\n  )\r\n    return\r\n  this.userList.push(userInfo)\r\n  this.updateUserListNode()\r\n}\r\n\r\n// 移除用户\r\nfunction removeUser(userInfo) {\r\n  const index = this.userList.findIndex(item => {\r\n    return item.id == userInfo.id\r\n  })\r\n  if (index === -1) return\r\n  this.userList.splice(index, 1)\r\n  this.updateUserListNode()\r\n}\r\n\r\n// 清空用户\r\nfunction emptyUser() {\r\n  this.userList = []\r\n  this.updateUserListNode()\r\n}\r\n\r\nexport default {\r\n  createUserListNode,\r\n  updateUserListNode,\r\n  createTextAvatar,\r\n  createImageAvatar,\r\n  addUser,\r\n  removeUser,\r\n  emptyUser\r\n}\r\n", "import btnsSvg from '../../../svg/btns'\r\nimport { SVG, Circle, G } from '@svgdotjs/svg.js'\r\n\r\nfunction initQuickCreateChildBtn() {\r\n  if (this.isGeneralization) return\r\n  this._quickCreateChildBtn = null\r\n  this._showQuickCreateChildBtn = false\r\n}\r\n\r\n// 显示按钮\r\nfunction showQuickCreateChildBtn() {\r\n  if (this.isGeneralization || this.getChildrenLength() > 0) return\r\n  // 创建按钮\r\n  if (this._quickCreateChildBtn) {\r\n    this.group.add(this._quickCreateChildBtn)\r\n  } else {\r\n    const { quickCreateChildBtnIcon, expandBtnStyle, expandBtnSize } =\r\n      this.mindMap.opt\r\n    const { icon, style } = quickCreateChildBtnIcon\r\n    let { color, fill } = expandBtnStyle || {\r\n      color: '#808080',\r\n      fill: '#fff'\r\n    }\r\n    color = style.color || color\r\n    // 图标节点\r\n    const iconNode = SVG(icon || btnsSvg.quickCreateChild).size(\r\n      expandBtnSize,\r\n      expandBtnSize\r\n    )\r\n    iconNode.css({\r\n      cursor: 'pointer'\r\n    })\r\n    iconNode.x(0).y(-expandBtnSize / 2)\r\n    this.style.iconNode(iconNode, color)\r\n    // 填充节点\r\n    const fillNode = new Circle().size(expandBtnSize)\r\n    fillNode.x(0).y(-expandBtnSize / 2)\r\n    fillNode.fill({ color: fill }).css({\r\n      cursor: 'pointer'\r\n    })\r\n    // 容器节点\r\n    this._quickCreateChildBtn = new G()\r\n    this._quickCreateChildBtn.add(fillNode).add(iconNode)\r\n    this._quickCreateChildBtn.on('click', e => {\r\n      e.stopPropagation()\r\n      this.mindMap.emit('quick_create_btn_click', this)\r\n      const { customQuickCreateChildBtnClick } = this.mindMap.opt\r\n      if (typeof customQuickCreateChildBtnClick === 'function') {\r\n        customQuickCreateChildBtnClick(this)\r\n        return\r\n      }\r\n      this.mindMap.execCommand('INSERT_CHILD_NODE', true, [this])\r\n    })\r\n    this._quickCreateChildBtn.on('dblclick', e => {\r\n      e.stopPropagation()\r\n    })\r\n    this._quickCreateChildBtn.addClass('smm-quick-create-child-btn')\r\n    this.group.add(this._quickCreateChildBtn)\r\n  }\r\n  this._showQuickCreateChildBtn = true\r\n  // 更新按钮\r\n  this.renderer.layout.renderExpandBtn(this, this._quickCreateChildBtn)\r\n}\r\n\r\n//  移除按钮\r\nfunction removeQuickCreateChildBtn() {\r\n  if (this.isGeneralization) return\r\n  if (this._quickCreateChildBtn && this._showQuickCreateChildBtn) {\r\n    this._quickCreateChildBtn.remove()\r\n    this._showQuickCreateChildBtn = false\r\n  }\r\n}\r\n\r\n// 隐藏按钮\r\nfunction hideQuickCreateChildBtn() {\r\n  if (this.isGeneralization) return\r\n  const { isActive } = this.getData()\r\n  if (!isActive) {\r\n    this.removeQuickCreateChildBtn()\r\n  }\r\n}\r\n\r\nexport default {\r\n  initQuickCreateChildBtn,\r\n  showQuickCreateChildBtn,\r\n  removeQuickCreateChildBtn,\r\n  hideQuickCreateChildBtn\r\n}\r\n", "import { CONSTANTS } from '../../../constants/constant'\r\nimport { G, Rect } from '@svgdotjs/svg.js'\r\nimport { createForeignObjectNode } from '../../../utils/index'\r\n\r\n// 根据图片放置位置返回图片和文本的间距值\r\nfunction getImgTextMarin(dir, imgWidth, textWidth, imgHeight, textHeight) {\r\n  // 图片和文字节点的间距\r\n  const { imgTextMargin } = this.mindMap.opt\r\n  if (dir === 'v') {\r\n    // 垂直\r\n    return imgHeight > 0 && textHeight > 0 ? imgTextMargin : 0\r\n  } else {\r\n    // 水平\r\n    return imgWidth > 0 && textWidth > 0 ? imgTextMargin : 0\r\n  }\r\n}\r\n\r\n// 获取标签内容的大小\r\nfunction getTagContentSize(space) {\r\n  let maxTagHeight = 0\r\n  let width = this._tagData.reduce((sum, cur) => {\r\n    maxTagHeight = Math.max(maxTagHeight, cur.height)\r\n    return (sum += cur.width)\r\n  }, 0)\r\n  width += (this._tagData.length - 1) * space\r\n  return {\r\n    width,\r\n    height: maxTagHeight\r\n  }\r\n}\r\n\r\n//  计算节点尺寸信息\r\nfunction getNodeRect() {\r\n  // 自定义节点内容\r\n  if (this.isUseCustomNodeContent()) {\r\n    const rect = this.measureCustomNodeContentSize(this._customNodeContent)\r\n    return {\r\n      width: this.hasCustomWidth() ? this.customTextWidth : rect.width,\r\n      height: rect.height\r\n    }\r\n  }\r\n  const { TAG_PLACEMENT, IMG_PLACEMENT } = CONSTANTS\r\n  const { textContentMargin } = this.mindMap.opt\r\n  const tagPlacement = this.getStyle('tagPlacement') || TAG_PLACEMENT.RIGHT\r\n  const tagIsBottom = tagPlacement === TAG_PLACEMENT.BOTTOM\r\n  const imgPlacement = this.getStyle('imgPlacement') || IMG_PLACEMENT.TOP\r\n  // 宽高\r\n  let imgContentWidth = 0\r\n  let imgContentHeight = 0\r\n  let textContentWidth = 0\r\n  let textContentHeight = 0\r\n  let tagContentWidth = 0\r\n  let tagContentHeight = 0\r\n  let spaceCount = 0\r\n  // 存在图片\r\n  if (this._imgData) {\r\n    imgContentWidth = this._imgData.width\r\n    imgContentHeight = this._imgData.height\r\n  }\r\n  // 库前置内容\r\n  this.mindMap.nodeInnerPrefixList.forEach(item => {\r\n    const itemData = this[`_${item.name}Data`]\r\n    if (itemData) {\r\n      textContentWidth += itemData.width\r\n      textContentHeight = Math.max(textContentHeight, itemData.height)\r\n      spaceCount++\r\n    }\r\n  })\r\n  // 自定义前置内容\r\n  if (this._prefixData) {\r\n    textContentWidth += this._prefixData.width\r\n    textContentHeight = Math.max(textContentHeight, this._prefixData.height)\r\n    spaceCount++\r\n  }\r\n  // 图标\r\n  if (this._iconData.length > 0) {\r\n    textContentWidth +=\r\n      this._iconData.reduce((sum, cur) => {\r\n        textContentHeight = Math.max(textContentHeight, cur.height)\r\n        return (sum += cur.width)\r\n      }, 0) +\r\n      (this._iconData.length - 1) * textContentMargin\r\n    spaceCount++\r\n  }\r\n  // 文字\r\n  if (this._textData) {\r\n    textContentWidth += this._textData.width\r\n    textContentHeight = Math.max(textContentHeight, this._textData.height)\r\n    spaceCount++\r\n  }\r\n  // 超链接\r\n  if (this._hyperlinkData) {\r\n    textContentWidth += this._hyperlinkData.width\r\n    textContentHeight = Math.max(textContentHeight, this._hyperlinkData.height)\r\n    spaceCount++\r\n  }\r\n  // 标签\r\n  if (this._tagData.length > 0) {\r\n    const { width: totalTagWidth, height: maxTagHeight } =\r\n      this.getTagContentSize(textContentMargin)\r\n    if (tagIsBottom) {\r\n      // 文字下方\r\n      tagContentWidth = totalTagWidth\r\n      tagContentHeight = maxTagHeight\r\n    } else {\r\n      // 否则在右侧\r\n      textContentWidth += totalTagWidth\r\n      textContentHeight = Math.max(textContentHeight, maxTagHeight)\r\n      spaceCount++\r\n    }\r\n  }\r\n  // 备注\r\n  if (this._noteData) {\r\n    textContentWidth += this._noteData.width\r\n    textContentHeight = Math.max(textContentHeight, this._noteData.height)\r\n    spaceCount++\r\n  }\r\n  // 附件\r\n  if (this._attachmentData) {\r\n    textContentWidth += this._attachmentData.width\r\n    textContentHeight = Math.max(textContentHeight, this._attachmentData.height)\r\n    spaceCount++\r\n  }\r\n  // 自定义后置内容\r\n  if (this._postfixData) {\r\n    textContentWidth += this._postfixData.width\r\n    textContentHeight = Math.max(textContentHeight, this._postfixData.height)\r\n    spaceCount++\r\n  }\r\n  textContentWidth += (spaceCount - 1) * textContentMargin\r\n  // 文字内容部分的尺寸\r\n  if (tagIsBottom && textContentWidth > 0 && tagContentHeight > 0) {\r\n    this._rectInfo.textContentWidthWithoutTag = textContentWidth\r\n    textContentWidth = Math.max(textContentWidth, tagContentWidth)\r\n    textContentHeight = textContentHeight + textContentMargin + tagContentHeight\r\n  }\r\n  this._rectInfo.textContentWidth = textContentWidth\r\n  this._rectInfo.textContentHeight = textContentHeight\r\n\r\n  // 纯内容宽高\r\n  let _width = 0\r\n  let _height = 0\r\n  if ([IMG_PLACEMENT.TOP, IMG_PLACEMENT.BOTTOM].includes(imgPlacement)) {\r\n    // 图片在上下\r\n    _width = Math.max(imgContentWidth, textContentWidth)\r\n    _height =\r\n      imgContentHeight +\r\n      textContentHeight +\r\n      this.getImgTextMarin('v', 0, 0, imgContentHeight, textContentHeight)\r\n  } else {\r\n    // 图片在左右\r\n    _width =\r\n      imgContentWidth +\r\n      textContentWidth +\r\n      this.getImgTextMarin('h', imgContentWidth, textContentWidth)\r\n    _height = Math.max(imgContentHeight, textContentHeight)\r\n  }\r\n  const { paddingX, paddingY } = this.getPaddingVale()\r\n  // 计算节点形状需要的附加内边距\r\n  const { paddingX: shapePaddingX, paddingY: shapePaddingY } =\r\n    this.shapeInstance.getShapePadding(_width, _height, paddingX, paddingY)\r\n  this.shapePadding.paddingX = shapePaddingX\r\n  this.shapePadding.paddingY = shapePaddingY\r\n  // 边框宽度，因为边框是以中线向两端发散，所以边框会超出节点\r\n  const borderWidth = this.getBorderWidth()\r\n  return {\r\n    width: _width + paddingX * 2 + shapePaddingX * 2 + borderWidth,\r\n    height: _height + paddingY * 2 + shapePaddingY * 2 + borderWidth\r\n  }\r\n}\r\n\r\n//  定位节点内容\r\nfunction layout() {\r\n  if (!this.group) return\r\n  // 清除之前的内容\r\n  this.group.clear()\r\n  const {\r\n    hoverRectPadding,\r\n    openRealtimeRenderOnNodeTextEdit,\r\n    textContentMargin,\r\n    addCustomContentToNode\r\n  } = this.mindMap.opt\r\n  // 避免编辑过程中展开收起按钮闪烁的问题\r\n  // 暂时去掉，带来的问题太多\r\n  // if (\r\n  //   openRealtimeRenderOnNodeTextEdit &&\r\n  //   this._expandBtn &&\r\n  //   this.getChildrenLength() > 0\r\n  // ) {\r\n  //   this.group.add(this._expandBtn)\r\n  // }\r\n  const { width, height } = this\r\n  let { paddingX, paddingY } = this.getPaddingVale()\r\n  const halfBorderWidth = this.getBorderWidth() / 2\r\n  paddingX += this.shapePadding.paddingX + halfBorderWidth\r\n  paddingY += this.shapePadding.paddingY + halfBorderWidth\r\n  // 节点形状\r\n  this.shapeNode = this.shapeInstance.createShape()\r\n  this.shapeNode.addClass('smm-node-shape')\r\n  this.shapeNode.translate(halfBorderWidth, halfBorderWidth)\r\n  this.style.shape(this.shapeNode)\r\n  this.group.add(this.shapeNode)\r\n  // 渲染一个隐藏的矩形区域，用来触发展开收起按钮的显示\r\n  this.renderExpandBtnPlaceholderRect()\r\n  // 创建协同头像节点\r\n  if (this.createUserListNode) this.createUserListNode()\r\n  // 概要节点添加一个带所属节点id的类名\r\n  if (this.isGeneralization && this.generalizationBelongNode) {\r\n    this.group.addClass('generalization_' + this.generalizationBelongNode.uid)\r\n  }\r\n  // 激活hover和激活边框\r\n  const addHoverNode = () => {\r\n    this.hoverNode = new Rect()\r\n      .size(width + hoverRectPadding * 2, height + hoverRectPadding * 2)\r\n      .x(-hoverRectPadding)\r\n      .y(-hoverRectPadding)\r\n    this.hoverNode.addClass('smm-hover-node')\r\n    this.style.hoverNode(this.hoverNode, width, height)\r\n    this.group.add(this.hoverNode)\r\n  }\r\n  // 如果存在自定义节点内容，那么使用自定义节点内容\r\n  if (this.isUseCustomNodeContent()) {\r\n    const foreignObject = createForeignObjectNode({\r\n      el: this._customNodeContent,\r\n      width,\r\n      height\r\n    })\r\n    this.group.add(foreignObject)\r\n    addHoverNode()\r\n    return\r\n  }\r\n  const { IMG_PLACEMENT, TAG_PLACEMENT } = CONSTANTS\r\n  const imgPlacement = this.getStyle('imgPlacement') || IMG_PLACEMENT.TOP\r\n  const tagPlacement = this.getStyle('tagPlacement') || TAG_PLACEMENT.RIGHT\r\n  const tagIsBottom = tagPlacement === TAG_PLACEMENT.BOTTOM\r\n  let { textContentWidth, textContentHeight, textContentWidthWithoutTag } =\r\n    this._rectInfo\r\n  const textContentHeightWithTag = textContentHeight\r\n  // 如果存在显示在文本下方的标签，那么非标签内容的整体高度需要减去标签高度\r\n  let totalTagWidth = 0\r\n  let maxTagHeight = 0\r\n  const hasTagContent = this._tagData && this._tagData.length > 0\r\n  if (hasTagContent) {\r\n    const res = this.getTagContentSize(textContentMargin)\r\n    totalTagWidth = res.width\r\n    maxTagHeight = res.height\r\n    if (tagIsBottom) {\r\n      textContentHeight -= maxTagHeight + textContentMargin\r\n    }\r\n  }\r\n  // 图片节点\r\n  let imgWidth = 0\r\n  let imgHeight = 0\r\n  if (this._imgData) {\r\n    imgWidth = this._imgData.width\r\n    imgHeight = this._imgData.height\r\n    this.group.add(this._imgData.node)\r\n    switch (imgPlacement) {\r\n      case IMG_PLACEMENT.TOP:\r\n        this._imgData.node.cx(width / 2).y(paddingY)\r\n        break\r\n      case IMG_PLACEMENT.BOTTOM:\r\n        this._imgData.node.cx(width / 2).y(height - paddingY - imgHeight)\r\n        break\r\n      case IMG_PLACEMENT.LEFT:\r\n        this._imgData.node.x(paddingX).cy(height / 2)\r\n        break\r\n      case IMG_PLACEMENT.RIGHT:\r\n        this._imgData.node.x(width - paddingX - imgWidth).cy(height / 2)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  // 内容节点\r\n  let textContentNested = new G()\r\n  let textContentOffsetX = 0\r\n  if (hasTagContent && tagIsBottom) {\r\n    textContentOffsetX =\r\n      textContentWidthWithoutTag < textContentWidth\r\n        ? (textContentWidth - textContentWidthWithoutTag) / 2\r\n        : 0\r\n  }\r\n  // 库前置内容\r\n  this.mindMap.nodeInnerPrefixList.forEach(item => {\r\n    const itemData = this[`_${item.name}Data`]\r\n    if (itemData) {\r\n      itemData.node\r\n        .x(textContentOffsetX)\r\n        .y((textContentHeight - itemData.height) / 2)\r\n      textContentNested.add(itemData.node)\r\n      textContentOffsetX += itemData.width + textContentMargin\r\n    }\r\n  })\r\n  // 自定义前置内容\r\n  if (this._prefixData) {\r\n    const foreignObject = createForeignObjectNode({\r\n      el: this._prefixData.el,\r\n      width: this._prefixData.width,\r\n      height: this._prefixData.height\r\n    })\r\n    foreignObject\r\n      .x(textContentOffsetX)\r\n      .y((textContentHeight - this._prefixData.height) / 2)\r\n    textContentNested.add(foreignObject)\r\n    textContentOffsetX += this._prefixData.width + textContentMargin\r\n  }\r\n  // icon\r\n  let iconNested = new G()\r\n  if (this._iconData && this._iconData.length > 0) {\r\n    let iconLeft = 0\r\n    this._iconData.forEach(item => {\r\n      item.node\r\n        .x(textContentOffsetX + iconLeft)\r\n        .y((textContentHeight - item.height) / 2)\r\n      iconNested.add(item.node)\r\n      iconLeft += item.width + textContentMargin\r\n    })\r\n    textContentNested.add(iconNested)\r\n    textContentOffsetX += iconLeft\r\n  }\r\n  // 文字\r\n  if (this._textData) {\r\n    const oldX = this._textData.node.attr('data-offsetx') || 0\r\n    this._textData.node.attr('data-offsetx', textContentOffsetX)\r\n    // 修复safari浏览器节点存在图标时文字位置不正确的问题\r\n    ;(this._textData.nodeContent || this._textData.node)\r\n      .x(-oldX) // 修复非富文本模式下同时存在图标和换行的文本时，被收起和展开时图标与文字距离会逐渐拉大的问题\r\n      .x(textContentOffsetX)\r\n      .y((textContentHeight - this._textData.height) / 2)\r\n    // 如果开启了文本编辑实时渲染，需要判断当前渲染的节点是否是正在编辑的节点，是的话将透明度设置为0不显示\r\n    if (openRealtimeRenderOnNodeTextEdit) {\r\n      this._textData.node.opacity(\r\n        this.mindMap.renderer.textEdit.getCurrentEditNode() === this ? 0 : 1\r\n      )\r\n    }\r\n    textContentNested.add(this._textData.node)\r\n    textContentOffsetX += this._textData.width + textContentMargin\r\n  }\r\n  // 超链接\r\n  if (this._hyperlinkData) {\r\n    this._hyperlinkData.node\r\n      .x(textContentOffsetX)\r\n      .y((textContentHeight - this._hyperlinkData.height) / 2)\r\n    textContentNested.add(this._hyperlinkData.node)\r\n    textContentOffsetX += this._hyperlinkData.width + textContentMargin\r\n  }\r\n  // 标签\r\n  let tagNested = new G()\r\n  if (hasTagContent) {\r\n    if (tagIsBottom) {\r\n      // 标签显示在文字下方\r\n      let tagLeft = 0\r\n      this._tagData.forEach(item => {\r\n        item.node.x(tagLeft).y((maxTagHeight - item.height) / 2)\r\n        tagNested.add(item.node)\r\n        tagLeft += item.width + textContentMargin\r\n      })\r\n      tagNested\r\n        .x((textContentWidth - totalTagWidth) / 2)\r\n        .y(textContentHeightWithTag - maxTagHeight)\r\n      textContentNested.add(tagNested)\r\n    } else {\r\n      // 标签显示在文字右侧\r\n      let tagLeft = 0\r\n      this._tagData.forEach(item => {\r\n        item.node\r\n          .x(textContentOffsetX + tagLeft)\r\n          .y((textContentHeight - item.height) / 2)\r\n        tagNested.add(item.node)\r\n        tagLeft += item.width + textContentMargin\r\n      })\r\n      textContentNested.add(tagNested)\r\n      textContentOffsetX += tagLeft\r\n    }\r\n  }\r\n  // 备注\r\n  if (this._noteData) {\r\n    this._noteData.node\r\n      .x(textContentOffsetX)\r\n      .y((textContentHeight - this._noteData.height) / 2)\r\n    textContentNested.add(this._noteData.node)\r\n    textContentOffsetX += this._noteData.width + textContentMargin\r\n  }\r\n  // 附件\r\n  if (this._attachmentData) {\r\n    this._attachmentData.node\r\n      .x(textContentOffsetX)\r\n      .y((textContentHeight - this._attachmentData.height) / 2)\r\n    textContentNested.add(this._attachmentData.node)\r\n    textContentOffsetX += this._attachmentData.width + textContentMargin\r\n  }\r\n  // 自定义后置内容\r\n  if (this._postfixData) {\r\n    const foreignObject = createForeignObjectNode({\r\n      el: this._postfixData.el,\r\n      width: this._postfixData.width,\r\n      height: this._postfixData.height\r\n    })\r\n    foreignObject\r\n      .x(textContentOffsetX)\r\n      .y((textContentHeight - this._postfixData.height) / 2)\r\n    textContentNested.add(foreignObject)\r\n    textContentOffsetX += this._postfixData.width\r\n  }\r\n  this.group.add(textContentNested)\r\n  // 文字内容整体\r\n  const { width: bboxWidth, height: bboxHeight } = textContentNested.bbox()\r\n  let translateX = 0\r\n  let translateY = 0\r\n  switch (imgPlacement) {\r\n    case IMG_PLACEMENT.TOP:\r\n      translateX = width / 2 - bboxWidth / 2\r\n      translateY =\r\n        paddingY + // 内边距\r\n        imgHeight + // 图片高度\r\n        this.getImgTextMarin('v', 0, 0, imgHeight, textContentHeightWithTag) // 和图片的间距\r\n      break\r\n    case IMG_PLACEMENT.BOTTOM:\r\n      translateX = width / 2 - bboxWidth / 2\r\n      translateY = paddingY\r\n      break\r\n    case IMG_PLACEMENT.LEFT:\r\n      translateX =\r\n        imgWidth +\r\n        paddingX +\r\n        this.getImgTextMarin('h', imgWidth, textContentWidth)\r\n      translateY = height / 2 - bboxHeight / 2\r\n      break\r\n    case IMG_PLACEMENT.RIGHT:\r\n      translateX = paddingX\r\n      translateY = height / 2 - bboxHeight / 2\r\n      break\r\n  }\r\n  textContentNested.translate(translateX, translateY)\r\n  addHoverNode()\r\n  if (this._customContentAddToNodeAdd && this._customContentAddToNodeAdd.el) {\r\n    const foreignObject = createForeignObjectNode(\r\n      this._customContentAddToNodeAdd\r\n    )\r\n    this.group.add(foreignObject)\r\n    if (\r\n      addCustomContentToNode &&\r\n      typeof addCustomContentToNode.handle === 'function'\r\n    ) {\r\n      addCustomContentToNode.handle({\r\n        content: this._customContentAddToNodeAdd,\r\n        element: foreignObject,\r\n        node: this\r\n      })\r\n    }\r\n  }\r\n  this.mindMap.emit('node_layout_end', this)\r\n}\r\n\r\nexport default {\r\n  getImgTextMarin,\r\n  getTagContentSize,\r\n  getNodeRect,\r\n  layout\r\n}\r\n", "import Style from './Style'\r\nimport Shape from './Shape'\r\nimport { G, Rect, Text, SVG } from '@svgdotjs/svg.js'\r\nimport nodeGeneralizationMethods from './nodeGeneralization'\r\nimport nodeExpandBtnMethods from './nodeExpandBtn'\r\nimport nodeCommandWrapsMethods from './nodeCommandWraps'\r\nimport nodeCreateContentsMethods from './nodeCreateContents'\r\nimport nodeExpandBtnPlaceholderRectMethods from './nodeExpandBtnPlaceholderRect'\r\nimport nodeModifyWidthMethods from './nodeModifyWidth'\r\nimport nodeCooperateMethods from './nodeCooperate'\r\nimport quickCreateChildBtnMethods from './quickCreateChildBtn'\r\nimport nodeLayoutMethods from './nodeLayout'\r\nimport { CONSTANTS } from '../../../constants/constant'\r\nimport { copyNodeTree, createUid, addXmlns } from '../../../utils/index'\r\n\r\n//  节点类\r\nclass MindMapNode {\r\n  //  构造函数\r\n  constructor(opt = {}) {\r\n    this.opt = opt\r\n    // 节点数据\r\n    this.nodeData = this.handleData(opt.data || {})\r\n    // 保存本次更新时的节点数据快照\r\n    this.nodeDataSnapshot = ''\r\n    // uid\r\n    this.uid = opt.uid\r\n    // 控制实例\r\n    this.mindMap = opt.mindMap\r\n    // 渲染实例\r\n    this.renderer = opt.renderer\r\n    // 渲染器\r\n    this.draw = this.mindMap.draw\r\n    this.nodeDraw = this.mindMap.nodeDraw\r\n    this.lineDraw = this.mindMap.lineDraw\r\n    // 样式实例\r\n    this.style = new Style(this)\r\n    // 节点当前生效的全部样式\r\n    this.effectiveStyles = {}\r\n    // 形状实例\r\n    this.shapeInstance = new Shape(this)\r\n    this.shapePadding = {\r\n      paddingX: 0,\r\n      paddingY: 0\r\n    }\r\n    // 是否是根节点\r\n    this.isRoot = opt.isRoot === undefined ? false : opt.isRoot\r\n    // 是否是概要节点\r\n    this.isGeneralization =\r\n      opt.isGeneralization === undefined ? false : opt.isGeneralization\r\n    this.generalizationBelongNode = null\r\n    // 节点层级\r\n    this.layerIndex = opt.layerIndex === undefined ? 0 : opt.layerIndex\r\n    // 节点宽\r\n    this.width = opt.width || 0\r\n    // 节点高\r\n    this.height = opt.height || 0\r\n    // 自定义文本的宽度\r\n    this.customTextWidth = opt.data.data.customTextWidth || undefined\r\n    // left\r\n    this._left = opt.left || 0\r\n    // top\r\n    this._top = opt.top || 0\r\n    // 自定义位置\r\n    this.customLeft = opt.data.data.customLeft || undefined\r\n    this.customTop = opt.data.data.customTop || undefined\r\n    // 是否正在拖拽中\r\n    this.isDrag = false\r\n    // 父节点\r\n    this.parent = opt.parent || null\r\n    // 子节点\r\n    this.children = opt.children || []\r\n    // 当前同时操作该节点的用户列表\r\n    this.userList = []\r\n    // 节点内容的容器\r\n    this.group = null\r\n    this.shapeNode = null // 节点形状节点\r\n    this.hoverNode = null // 节点hover和激活的节点\r\n    // 节点内容对象\r\n    this._customNodeContent = null\r\n    this._imgData = null\r\n    this._iconData = null\r\n    this._textData = null\r\n    this._hyperlinkData = null\r\n    this._tagData = null\r\n    this._noteData = null\r\n    this.noteEl = null\r\n    this.noteContentIsShow = false\r\n    this._attachmentData = null\r\n    this._prefixData = null\r\n    this._postfixData = null\r\n    this._expandBtn = null\r\n    this._lastExpandBtnType = null\r\n    this._showExpandBtn = false\r\n    this._openExpandNode = null\r\n    this._closeExpandNode = null\r\n    this._fillExpandNode = null\r\n    this._userListGroup = null\r\n    this._lines = []\r\n    this._generalizationList = []\r\n    this._unVisibleRectRegionNode = null\r\n    this._isMouseenter = false\r\n    this._customContentAddToNodeAdd = null\r\n    // 尺寸信息\r\n    this._rectInfo = {\r\n      textContentWidth: 0,\r\n      textContentHeight: 0,\r\n      textContentWidthWithoutTag: 0\r\n    }\r\n    // 概要节点的宽高\r\n    this._generalizationNodeWidth = 0\r\n    this._generalizationNodeHeight = 0\r\n    // 展开收缩按钮尺寸\r\n    this.expandBtnSize = this.mindMap.opt.expandBtnSize\r\n    // 是否是多选节点\r\n    this.isMultipleChoice = false\r\n    // 是否需要重新layout\r\n    this.needLayout = false\r\n    // 当前是否是隐藏状态\r\n    this.isHide = false\r\n    const proto = Object.getPrototypeOf(this)\r\n    if (!proto.bindEvent) {\r\n      // 节点尺寸计算和布局相关方法\r\n      Object.keys(nodeLayoutMethods).forEach(item => {\r\n        proto[item] = nodeLayoutMethods[item]\r\n      })\r\n      // 概要相关方法\r\n      Object.keys(nodeGeneralizationMethods).forEach(item => {\r\n        proto[item] = nodeGeneralizationMethods[item]\r\n      })\r\n      // 展开收起按钮相关方法\r\n      Object.keys(nodeExpandBtnMethods).forEach(item => {\r\n        proto[item] = nodeExpandBtnMethods[item]\r\n      })\r\n      // 展开收起按钮占位元素相关方法\r\n      Object.keys(nodeExpandBtnPlaceholderRectMethods).forEach(item => {\r\n        proto[item] = nodeExpandBtnPlaceholderRectMethods[item]\r\n      })\r\n      // 命令的相关方法\r\n      Object.keys(nodeCommandWrapsMethods).forEach(item => {\r\n        proto[item] = nodeCommandWrapsMethods[item]\r\n      })\r\n      // 创建节点内容的相关方法\r\n      Object.keys(nodeCreateContentsMethods).forEach(item => {\r\n        proto[item] = nodeCreateContentsMethods[item]\r\n      })\r\n      // 协同相关\r\n      if (this.mindMap.cooperate) {\r\n        Object.keys(nodeCooperateMethods).forEach(item => {\r\n          proto[item] = nodeCooperateMethods[item]\r\n        })\r\n      }\r\n      // 拖拽调整节点宽度\r\n      Object.keys(nodeModifyWidthMethods).forEach(item => {\r\n        proto[item] = nodeModifyWidthMethods[item]\r\n      })\r\n      // 快捷创建子节点按钮\r\n      if (this.mindMap.opt.isShowCreateChildBtnIcon) {\r\n        Object.keys(quickCreateChildBtnMethods).forEach(item => {\r\n          proto[item] = quickCreateChildBtnMethods[item]\r\n        })\r\n        this.initQuickCreateChildBtn()\r\n      }\r\n      proto.bindEvent = true\r\n    }\r\n    // 初始化\r\n    this.getSize()\r\n    // 初始需要计算一下概要节点的大小，否则计算布局时获取不到概要的大小\r\n    this.updateGeneralization()\r\n    this.initDragHandle()\r\n  }\r\n\r\n  // 支持自定义位置\r\n  get left() {\r\n    return this.customLeft || this._left\r\n  }\r\n\r\n  set left(val) {\r\n    this._left = val\r\n  }\r\n\r\n  get top() {\r\n    return this.customTop || this._top\r\n  }\r\n\r\n  set top(val) {\r\n    this._top = val\r\n  }\r\n\r\n  //  复位部分布局时会重新设置的数据\r\n  reset() {\r\n    this.children = []\r\n    this.parent = null\r\n    this.isRoot = false\r\n    this.layerIndex = 0\r\n    this.left = 0\r\n    this.top = 0\r\n  }\r\n\r\n  // 节点被删除时需要复位的数据\r\n  resetWhenDelete() {\r\n    this._isMouseenter = false\r\n  }\r\n\r\n  //  处理数据\r\n  handleData(data) {\r\n    data.data.expand = data.data.expand === false ? false : true\r\n    data.data.isActive = data.data.isActive === true ? true : false\r\n    data.children = data.children || []\r\n    return data\r\n  }\r\n\r\n  //  创建节点的各个内容对象数据\r\n  // recreateTypes：[] custom、image、icon、text、hyperlink、tag、note、attachment、numbers、prefix、postfix、checkbox\r\n  createNodeData(recreateTypes) {\r\n    // 自定义节点内容\r\n    const {\r\n      isUseCustomNodeContent,\r\n      customCreateNodeContent,\r\n      createNodePrefixContent,\r\n      createNodePostfixContent,\r\n      addCustomContentToNode\r\n    } = this.mindMap.opt\r\n    // 需要创建的内容类型\r\n    const typeList = [\r\n      'custom',\r\n      'image',\r\n      'icon',\r\n      'text',\r\n      'hyperlink',\r\n      'tag',\r\n      'note',\r\n      'attachment',\r\n      'prefix',\r\n      'postfix',\r\n      ...this.mindMap.nodeInnerPrefixList.map(item => {\r\n        return item.name\r\n      })\r\n    ]\r\n    const createTypes = {}\r\n    if (Array.isArray(recreateTypes)) {\r\n      // 重新创建指定的内容类型\r\n      typeList.forEach(item => {\r\n        if (recreateTypes.includes(item)) {\r\n          createTypes[item] = true\r\n        }\r\n      })\r\n    } else {\r\n      // 创建所有类型\r\n      typeList.forEach(item => {\r\n        createTypes[item] = true\r\n      })\r\n    }\r\n    if (\r\n      isUseCustomNodeContent &&\r\n      customCreateNodeContent &&\r\n      createTypes.custom\r\n    ) {\r\n      this._customNodeContent = customCreateNodeContent(this)\r\n    }\r\n    // 如果没有返回内容，那么还是使用内置的节点内容\r\n    if (this._customNodeContent) {\r\n      addXmlns(this._customNodeContent)\r\n      return\r\n    }\r\n    if (createTypes.image) this._imgData = this.createImgNode()\r\n    if (createTypes.icon) this._iconData = this.createIconNode()\r\n    if (createTypes.text) this._textData = this.createTextNode()\r\n    if (createTypes.hyperlink) this._hyperlinkData = this.createHyperlinkNode()\r\n    if (createTypes.tag) this._tagData = this.createTagNode()\r\n    if (createTypes.note) this._noteData = this.createNoteNode()\r\n    if (createTypes.attachment)\r\n      this._attachmentData = this.createAttachmentNode()\r\n    this.mindMap.nodeInnerPrefixList.forEach(item => {\r\n      if (createTypes[item.name]) {\r\n        this[`_${item.name}Data`] = item.createContent(this)\r\n      }\r\n    })\r\n    if (createTypes.prefix) {\r\n      this._prefixData = createNodePrefixContent\r\n        ? createNodePrefixContent(this)\r\n        : null\r\n      if (this._prefixData && this._prefixData.el) {\r\n        addXmlns(this._prefixData.el)\r\n      }\r\n    }\r\n    if (createTypes.postfix) {\r\n      this._postfixData = createNodePostfixContent\r\n        ? createNodePostfixContent(this)\r\n        : null\r\n      if (this._postfixData && this._postfixData.el) {\r\n        addXmlns(this._postfixData.el)\r\n      }\r\n    }\r\n    if (\r\n      addCustomContentToNode &&\r\n      typeof addCustomContentToNode.create === 'function'\r\n    ) {\r\n      this._customContentAddToNodeAdd = addCustomContentToNode.create(this)\r\n      if (\r\n        this._customContentAddToNodeAdd &&\r\n        this._customContentAddToNodeAdd.el\r\n      ) {\r\n        addXmlns(this._customContentAddToNodeAdd.el)\r\n      }\r\n    }\r\n  }\r\n\r\n  //  计算节点的宽高\r\n  getSize(recreateTypes, opt = {}) {\r\n    const ignoreUpdateCustomTextWidth = opt.ignoreUpdateCustomTextWidth || false\r\n    if (!ignoreUpdateCustomTextWidth) {\r\n      this.customTextWidth = this.getData('customTextWidth') || undefined\r\n    }\r\n    this.customLeft = this.getData('customLeft') || undefined\r\n    this.customTop = this.getData('customTop') || undefined\r\n    // 这里不要更新概要，不然即使概要没修改，每次也会重新渲染\r\n    // this.updateGeneralization()\r\n    this.createNodeData(recreateTypes)\r\n    const { width, height } = this.getNodeRect()\r\n    // 判断节点尺寸是否有变化\r\n    const changed = this.width !== width || this.height !== height\r\n    this.width = width\r\n    this.height = height\r\n    return changed\r\n  }\r\n\r\n  // 给节点绑定事件\r\n  bindGroupEvent() {\r\n    // 单击事件，选中节点\r\n    this.group.on('click', e => {\r\n      this.mindMap.emit('node_click', this, e)\r\n      if (this.isMultipleChoice) {\r\n        e.stopPropagation()\r\n        this.isMultipleChoice = false\r\n        return\r\n      }\r\n      if (\r\n        this.mindMap.opt.onlyOneEnableActiveNodeOnCooperate &&\r\n        this.userList.length > 0\r\n      ) {\r\n        return\r\n      }\r\n      this.active(e)\r\n    })\r\n    this.group.on('mousedown', e => {\r\n      const {\r\n        readonly,\r\n        enableCtrlKeyNodeSelection,\r\n        useLeftKeySelectionRightKeyDrag,\r\n        mousedownEventPreventDefault\r\n      } = this.mindMap.opt\r\n      if (mousedownEventPreventDefault) {\r\n        e.preventDefault()\r\n      }\r\n      // 只读模式不需要阻止冒泡\r\n      if (!readonly) {\r\n        if (this.isRoot) {\r\n          // 根节点，右键拖拽画布模式下不需要阻止冒泡\r\n          if (e.which === 3 && !useLeftKeySelectionRightKeyDrag) {\r\n            e.stopPropagation()\r\n          }\r\n        } else {\r\n          // 非根节点，且按下的是非鼠标中键，需要阻止事件冒泡\r\n          if (e.which !== 2) {\r\n            e.stopPropagation()\r\n          }\r\n        }\r\n      }\r\n      // 多选和取消多选\r\n      if (!readonly && (e.ctrlKey || e.metaKey) && enableCtrlKeyNodeSelection) {\r\n        this.isMultipleChoice = true\r\n        const isActive = this.getData('isActive')\r\n        if (!isActive)\r\n          this.mindMap.emit(\r\n            'before_node_active',\r\n            this,\r\n            this.renderer.activeNodeList\r\n          )\r\n        this.mindMap.renderer[\r\n          isActive ? 'removeNodeFromActiveList' : 'addNodeToActiveList'\r\n        ](this, true)\r\n        this.renderer.emitNodeActiveEvent(isActive ? null : this)\r\n      }\r\n      this.mindMap.emit('node_mousedown', this, e)\r\n    })\r\n    this.group.on('mouseup', e => {\r\n      if (!this.isRoot && e.which !== 2 && !this.mindMap.opt.readonly) {\r\n        e.stopPropagation()\r\n      }\r\n      this.mindMap.emit('node_mouseup', this, e)\r\n    })\r\n    this.group.on('mouseenter', e => {\r\n      if (this.isDrag) return\r\n      this._isMouseenter = true\r\n      // 显示展开收起按钮\r\n      this.showExpandBtn()\r\n      if (this.isGeneralization) {\r\n        this.handleGeneralizationMouseenter()\r\n      }\r\n      this.mindMap.emit('node_mouseenter', this, e)\r\n    })\r\n    this.group.on('mouseleave', e => {\r\n      if (!this._isMouseenter) return\r\n      this._isMouseenter = false\r\n      this.hideExpandBtn()\r\n      if (this.isGeneralization) {\r\n        this.handleGeneralizationMouseleave()\r\n      }\r\n      this.mindMap.emit('node_mouseleave', this, e)\r\n    })\r\n    // 双击事件\r\n    this.group.on('dblclick', e => {\r\n      const { readonly, onlyOneEnableActiveNodeOnCooperate } = this.mindMap.opt\r\n      if (readonly || e.ctrlKey || e.metaKey) {\r\n        return\r\n      }\r\n      e.stopPropagation()\r\n      if (onlyOneEnableActiveNodeOnCooperate && this.userList.length > 0) {\r\n        return\r\n      }\r\n      this.mindMap.emit('node_dblclick', this, e)\r\n    })\r\n    // 右键菜单事件\r\n    this.group.on('contextmenu', e => {\r\n      const { readonly, useLeftKeySelectionRightKeyDrag } = this.mindMap.opt\r\n      // Mac上按住ctrl键点击鼠标左键不知为何触发的是contextmenu事件\r\n      if (readonly || e.ctrlKey) {\r\n        return\r\n      }\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      // 如果是多选节点结束，那么不要触发右键菜单事件\r\n      if (\r\n        this.mindMap.select &&\r\n        !useLeftKeySelectionRightKeyDrag &&\r\n        this.mindMap.select.hasSelectRange()\r\n      ) {\r\n        return\r\n      }\r\n      // 如果有且只有当前节点激活了，那么不需要重新激活\r\n      if (\r\n        !(this.getData('isActive') && this.renderer.activeNodeList.length === 1)\r\n      ) {\r\n        this.renderer.clearActiveNodeList()\r\n        this.active(e)\r\n      }\r\n      this.mindMap.emit('node_contextmenu', e, this)\r\n    })\r\n  }\r\n\r\n  //  激活节点\r\n  active(e) {\r\n    if (this.mindMap.opt.readonly) {\r\n      return\r\n    }\r\n    e && e.stopPropagation()\r\n    if (this.getData('isActive')) {\r\n      return\r\n    }\r\n    this.mindMap.emit('before_node_active', this, this.renderer.activeNodeList)\r\n    this.renderer.clearActiveNodeList()\r\n    this.renderer.addNodeToActiveList(this, true)\r\n    this.renderer.emitNodeActiveEvent(this)\r\n  }\r\n\r\n  // 取消激活该节点\r\n  deactivate() {\r\n    this.mindMap.renderer.removeNodeFromActiveList(this)\r\n    this.mindMap.renderer.emitNodeActiveEvent()\r\n  }\r\n\r\n  //  更新节点\r\n  update(forceRender) {\r\n    if (!this.group) {\r\n      return\r\n    }\r\n    this.updateNodeActiveClass()\r\n    const { alwaysShowExpandBtn, notShowExpandBtn, isShowCreateChildBtnIcon } =\r\n      this.mindMap.opt\r\n    const childrenLength = this.getChildrenLength()\r\n    // 不显示展开收起按钮则不需要处理\r\n    if (!notShowExpandBtn) {\r\n      if (alwaysShowExpandBtn) {\r\n        // 需要移除展开收缩按钮\r\n        if (this._expandBtn && childrenLength <= 0) {\r\n          this.removeExpandBtn()\r\n        } else {\r\n          // 更新展开收起按钮\r\n          this.renderExpandBtn()\r\n        }\r\n      } else {\r\n        const { isActive, expand } = this.getData()\r\n        // 展开状态且非激活状态，且当前鼠标不在它上面，才隐藏\r\n        if (childrenLength <= 0) {\r\n          this.removeExpandBtn()\r\n        } else if (expand && !isActive && !this._isMouseenter) {\r\n          this.hideExpandBtn()\r\n        } else {\r\n          this.showExpandBtn()\r\n        }\r\n      }\r\n    }\r\n    // 更新快速创建子节点按钮\r\n    if (isShowCreateChildBtnIcon) {\r\n      if (childrenLength > 0) {\r\n        this.removeQuickCreateChildBtn()\r\n      } else {\r\n        const { isActive } = this.getData()\r\n        if (isActive) {\r\n          this.showQuickCreateChildBtn()\r\n        } else {\r\n          this.hideQuickCreateChildBtn()\r\n        }\r\n      }\r\n    }\r\n    // 更新拖拽手柄的显示与否\r\n    this.updateDragHandle()\r\n    // 更新概要\r\n    this.renderGeneralization(forceRender)\r\n    // 更新协同头像\r\n    if (this.updateUserListNode) this.updateUserListNode()\r\n    // 更新节点位置\r\n    const t = this.group.transform()\r\n    // 保存一份当前节点数据快照\r\n    this.nodeDataSnapshot = JSON.stringify(this.getData())\r\n    // 节点位置变化才更新，因为即使值没有变化属性设置操作也是耗时的\r\n    if (this.left !== t.translateX || this.top !== t.translateY) {\r\n      this.group.translate(this.left - t.translateX, this.top - t.translateY)\r\n    }\r\n  }\r\n\r\n  // 获取节点相当于画布的位置\r\n  getNodePosInClient(_left, _top) {\r\n    const drawTransform = this.mindMap.draw.transform()\r\n    const { scaleX, scaleY, translateX, translateY } = drawTransform\r\n    const left = _left * scaleX + translateX\r\n    const top = _top * scaleY + translateY\r\n    return {\r\n      left,\r\n      top\r\n    }\r\n  }\r\n\r\n  // 判断节点是否可见\r\n  checkIsInClient(padding = 0) {\r\n    const { left: nx, top: ny } = this.getNodePosInClient(this.left, this.top)\r\n    return (\r\n      nx + this.width > 0 - padding &&\r\n      ny + this.height > 0 - padding &&\r\n      nx < this.mindMap.width + padding &&\r\n      ny < this.mindMap.height + padding\r\n    )\r\n  }\r\n\r\n  // 重新渲染节点，即重新创建节点内容、计算节点大小、计算节点内容布局、更新展开收起按钮，概要及位置\r\n  reRender(recreateTypes, opt) {\r\n    const sizeChange = this.getSize(recreateTypes, opt)\r\n    this.layout()\r\n    this.update()\r\n    return sizeChange\r\n  }\r\n\r\n  // 更新节点激活状态\r\n  updateNodeActiveClass() {\r\n    if (!this.group) return\r\n    const isActive = this.getData('isActive')\r\n    this.group[isActive ? 'addClass' : 'removeClass']('active')\r\n  }\r\n\r\n  // 根据是否激活更新节点\r\n  updateNodeByActive(active) {\r\n    if (this.group) {\r\n      const { isShowCreateChildBtnIcon } = this.mindMap.opt\r\n      // 切换激活状态，需要切换展开收起按钮的显隐\r\n      if (active) {\r\n        this.showExpandBtn()\r\n        if (isShowCreateChildBtnIcon) {\r\n          this.showQuickCreateChildBtn()\r\n        }\r\n      } else {\r\n        this.hideExpandBtn()\r\n        if (isShowCreateChildBtnIcon) {\r\n          this.hideQuickCreateChildBtn()\r\n        }\r\n      }\r\n      this.updateNodeActiveClass()\r\n      this.updateDragHandle()\r\n    }\r\n  }\r\n\r\n  // 递归渲染\r\n  // forceRender：强制渲染，无论是否处于画布可视区域\r\n  // async：异步渲染\r\n  render(callback = () => {}, forceRender = false, async = false) {\r\n    // 节点\r\n    // 重新渲染连线\r\n    this.renderLine()\r\n    const { openPerformance, performanceConfig } = this.mindMap.opt\r\n    // 强制渲染、或没有开启性能模式、或不在画布可视区域内不渲染节点内容\r\n    // 根节点不进行懒加载，始终渲染，因为滚动条插件依赖根节点进行计算\r\n    if (\r\n      forceRender ||\r\n      !openPerformance ||\r\n      this.checkIsInClient(performanceConfig.padding) ||\r\n      this.isRoot\r\n    ) {\r\n      if (!this.group) {\r\n        // 创建组\r\n        this.group = new G()\r\n        this.group.addClass('smm-node')\r\n        this.group.css({\r\n          cursor: 'default'\r\n        })\r\n        this.bindGroupEvent()\r\n        this.nodeDraw.add(this.group)\r\n        this.layout()\r\n        this.update(forceRender)\r\n      } else {\r\n        if (!this.nodeDraw.has(this.group)) {\r\n          this.nodeDraw.add(this.group)\r\n        }\r\n        if (this.needLayout) {\r\n          this.needLayout = false\r\n          this.layout()\r\n        }\r\n        this.updateExpandBtnPlaceholderRect()\r\n        this.update(forceRender)\r\n      }\r\n    } else if (openPerformance && performanceConfig.removeNodeWhenOutCanvas) {\r\n      this.removeSelf()\r\n    }\r\n    // 子节点\r\n    if (\r\n      this.children &&\r\n      this.children.length &&\r\n      this.getData('expand') !== false\r\n    ) {\r\n      let index = 0\r\n      this.children.forEach(item => {\r\n        const renderChild = () => {\r\n          item.render(\r\n            () => {\r\n              index++\r\n              if (index >= this.children.length) {\r\n                callback()\r\n              }\r\n            },\r\n            forceRender,\r\n            async\r\n          )\r\n        }\r\n        if (async) {\r\n          setTimeout(renderChild, 0)\r\n        } else {\r\n          renderChild()\r\n        }\r\n      })\r\n    } else {\r\n      callback()\r\n    }\r\n    // 手动插入的节点立即获得焦点并且开启编辑模式\r\n    if (this.nodeData.inserting) {\r\n      delete this.nodeData.inserting\r\n      this.active()\r\n      // setTimeout(() => {\r\n      this.mindMap.emit('node_dblclick', this, null, true)\r\n      // }, 0)\r\n    }\r\n  }\r\n\r\n  // 删除自身，只是从画布删除，节点容器还在，后续还可以重新插回画布\r\n  removeSelf() {\r\n    if (!this.group) return\r\n    this.group.remove()\r\n    this.removeGeneralization()\r\n  }\r\n\r\n  //  递归删除，只是从画布删除，节点容器还在，后续还可以重新插回画布\r\n  remove() {\r\n    if (!this.group) return\r\n    this.group.remove()\r\n    this.removeGeneralization()\r\n    this.removeLine()\r\n    // 子节点\r\n    if (this.children && this.children.length) {\r\n      this.children.forEach(item => {\r\n        item.remove()\r\n      })\r\n    }\r\n  }\r\n\r\n  // 销毁节点，不但会从画布删除，而且原节点直接置空，后续无法再插回画布\r\n  destroy() {\r\n    this.removeLine()\r\n    if (this.parent) {\r\n      this.parent.removeLine()\r\n    }\r\n    if (!this.group) return\r\n    if (this.emptyUser) {\r\n      this.emptyUser()\r\n    }\r\n    this.resetWhenDelete()\r\n    this.group.remove()\r\n    this.removeGeneralization()\r\n    this.group = null\r\n    this.style.onRemove()\r\n  }\r\n\r\n  //  隐藏节点\r\n  hide() {\r\n    if (this.group) this.group.hide()\r\n    this.hideGeneralization()\r\n    if (this.parent) {\r\n      const index = this.parent.children.indexOf(this)\r\n      this.parent._lines[index] && this.parent._lines[index].hide()\r\n      this._lines.forEach(item => {\r\n        item.hide()\r\n      })\r\n    }\r\n    // 子节点\r\n    if (this.children && this.children.length) {\r\n      this.children.forEach(item => {\r\n        item.hide()\r\n      })\r\n    }\r\n  }\r\n\r\n  //  显示节点\r\n  show() {\r\n    if (!this.group) {\r\n      return\r\n    }\r\n    this.group.show()\r\n    this.showGeneralization()\r\n    if (this.parent) {\r\n      const index = this.parent.children.indexOf(this)\r\n      this.parent._lines[index] && this.parent._lines[index].show()\r\n      this._lines.forEach(item => {\r\n        item.show()\r\n      })\r\n    }\r\n    // 子节点\r\n    if (this.children && this.children.length) {\r\n      this.children.forEach(item => {\r\n        item.show()\r\n      })\r\n    }\r\n  }\r\n\r\n  // 设置节点透明度\r\n  // 包括连接线和下级节点\r\n  setOpacity(val) {\r\n    // 自身及连线\r\n    if (this.group) this.group.opacity(val)\r\n    this._lines.forEach(line => {\r\n      line.opacity(val)\r\n    })\r\n    // 子节点\r\n    this.children.forEach(item => {\r\n      item.setOpacity(val)\r\n    })\r\n    // 概要节点\r\n    this.setGeneralizationOpacity(val)\r\n  }\r\n\r\n  // 隐藏子节点\r\n  hideChildren() {\r\n    this._lines.forEach(item => {\r\n      item.hide()\r\n    })\r\n    if (this.children && this.children.length) {\r\n      this.children.forEach(item => {\r\n        item.hide()\r\n      })\r\n    }\r\n  }\r\n\r\n  // 显示子节点\r\n  showChildren() {\r\n    this._lines.forEach(item => {\r\n      item.show()\r\n    })\r\n    if (this.children && this.children.length) {\r\n      this.children.forEach(item => {\r\n        item.show()\r\n      })\r\n    }\r\n  }\r\n\r\n  // 被拖拽中\r\n  startDrag() {\r\n    this.isDrag = true\r\n    if (this.group) this.group.addClass('smm-node-dragging')\r\n  }\r\n\r\n  // 拖拽结束\r\n  endDrag() {\r\n    this.isDrag = false\r\n    if (this.group) this.group.removeClass('smm-node-dragging')\r\n  }\r\n\r\n  //  连线\r\n  renderLine(deep = false) {\r\n    if (this.getData('expand') === false) {\r\n      return\r\n    }\r\n    let childrenLen = this.getChildrenLength()\r\n    // 切换为鱼骨结构时，清空根节点和二级节点的连线\r\n    if (\r\n      this.mindMap.opt.layout === CONSTANTS.LAYOUT.FISHBONE &&\r\n      (this.isRoot || this.layerIndex === 1)\r\n    ) {\r\n      childrenLen = 0\r\n    }\r\n    if (childrenLen > this._lines.length) {\r\n      // 创建缺少的线\r\n      new Array(childrenLen - this._lines.length).fill(0).forEach(() => {\r\n        this._lines.push(this.lineDraw.path())\r\n      })\r\n    } else if (childrenLen < this._lines.length) {\r\n      // 删除多余的线\r\n      this._lines.slice(childrenLen).forEach(line => {\r\n        line.remove()\r\n      })\r\n      this._lines = this._lines.slice(0, childrenLen)\r\n    }\r\n    // 画线\r\n    this.renderer.layout.renderLine(\r\n      this,\r\n      this._lines,\r\n      (...args) => {\r\n        // 添加样式\r\n        this.styleLine(...args)\r\n      },\r\n      this.style.getStyle('lineStyle', true)\r\n    )\r\n    // 子级的连线也需要更新\r\n    if (deep && this.children && this.children.length > 0) {\r\n      this.children.forEach(item => {\r\n        item.renderLine(deep)\r\n      })\r\n    }\r\n  }\r\n\r\n  //  获取节点形状\r\n  getShape() {\r\n    // 节点使用功能横线风格的话不支持设置形状，直接使用默认的矩形\r\n    return this.mindMap.themeConfig.nodeUseLineStyle\r\n      ? CONSTANTS.SHAPE.RECTANGLE\r\n      : this.style.getStyle('shape', false, false)\r\n  }\r\n\r\n  //  检查节点是否存在自定义数据\r\n  hasCustomPosition() {\r\n    return this.customLeft !== undefined && this.customTop !== undefined\r\n  }\r\n\r\n  //  检查节点是否存在自定义位置的祖先节点，包含自身\r\n  ancestorHasCustomPosition() {\r\n    let node = this\r\n    while (node) {\r\n      if (node.hasCustomPosition()) {\r\n        return true\r\n      }\r\n      node = node.parent\r\n    }\r\n    return false\r\n  }\r\n\r\n  //  检查是否存在有概要的祖先节点\r\n  ancestorHasGeneralization() {\r\n    let node = this.parent\r\n    while (node) {\r\n      if (node.checkHasGeneralization()) {\r\n        return true\r\n      }\r\n      node = node.parent\r\n    }\r\n    return false\r\n  }\r\n\r\n  //  添加子节点\r\n  addChildren(node) {\r\n    this.children.push(node)\r\n  }\r\n\r\n  //  设置连线样式\r\n  styleLine(line, childNode, enableMarker) {\r\n    const { enableInheritAncestorLineStyle } = this.mindMap.opt\r\n    const getName = enableInheritAncestorLineStyle\r\n      ? 'getSelfInhertStyle'\r\n      : 'getSelfStyle'\r\n    const width =\r\n      childNode[getName]('lineWidth') || childNode.getStyle('lineWidth', true)\r\n    const color =\r\n      childNode[getName]('lineColor') ||\r\n      this.getRainbowLineColor(childNode) ||\r\n      childNode.getStyle('lineColor', true)\r\n    const dasharray =\r\n      childNode[getName]('lineDasharray') ||\r\n      childNode.getStyle('lineDasharray', true)\r\n    this.style.line(\r\n      line,\r\n      {\r\n        width,\r\n        color,\r\n        dasharray\r\n      },\r\n      enableMarker,\r\n      childNode\r\n    )\r\n  }\r\n\r\n  // 获取彩虹线条颜色\r\n  getRainbowLineColor(node) {\r\n    return this.mindMap.rainbowLines\r\n      ? this.mindMap.rainbowLines.getNodeColor(node)\r\n      : ''\r\n  }\r\n\r\n  //  移除连线\r\n  removeLine() {\r\n    this._lines.forEach(line => {\r\n      line.remove()\r\n    })\r\n    this._lines = []\r\n  }\r\n\r\n  //  检测当前节点是否是某个节点的祖先节点\r\n  isAncestor(node) {\r\n    if (this.uid === node.uid) {\r\n      return false\r\n    }\r\n    let parent = node.parent\r\n    while (parent) {\r\n      if (this.uid === parent.uid) {\r\n        return true\r\n      }\r\n      parent = parent.parent\r\n    }\r\n    return false\r\n  }\r\n\r\n  // 检查当前节点是否是某个节点的父节点\r\n  isParent(node) {\r\n    if (this.uid === node.uid) {\r\n      return false\r\n    }\r\n    const parent = node.parent\r\n    if (parent && this.uid === parent.uid) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  //  检测当前节点是否是某个节点的兄弟节点\r\n  isBrother(node) {\r\n    if (!this.parent || this.uid === node.uid) {\r\n      return false\r\n    }\r\n    return this.parent.children.find(item => {\r\n      return item.uid === node.uid\r\n    })\r\n  }\r\n\r\n  // 获取该节点在兄弟节点列表中的索引\r\n  getIndexInBrothers() {\r\n    return this.parent && this.parent.children\r\n      ? this.parent.children.findIndex(item => {\r\n          return item.uid === this.uid\r\n        })\r\n      : -1\r\n  }\r\n\r\n  //  获取padding值\r\n  getPaddingVale() {\r\n    return {\r\n      paddingX: this.getStyle('paddingX'),\r\n      paddingY: this.getStyle('paddingY')\r\n    }\r\n  }\r\n\r\n  //  获取某个样式\r\n  getStyle(prop, root) {\r\n    const v = this.style.merge(prop, root)\r\n    return v === undefined ? '' : v\r\n  }\r\n\r\n  //  获取自定义样式\r\n  getSelfStyle(prop) {\r\n    return this.style.getSelfStyle(prop)\r\n  }\r\n\r\n  //   获取最近一个存在自身自定义样式的祖先节点的自定义样式\r\n  getParentSelfStyle(prop) {\r\n    if (this.parent) {\r\n      return (\r\n        this.parent.getSelfStyle(prop) || this.parent.getParentSelfStyle(prop)\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n  //  获取自身可继承的自定义样式\r\n  getSelfInhertStyle(prop) {\r\n    return (\r\n      this.getSelfStyle(prop) || // 自身\r\n      this.getParentSelfStyle(prop)\r\n    ) // 父级\r\n  }\r\n\r\n  // 获取节点非节点状态的边框大小\r\n  getBorderWidth() {\r\n    return this.style.merge('borderWidth', false) || 0\r\n  }\r\n\r\n  //  获取数据\r\n  getData(key) {\r\n    return key ? this.nodeData.data[key] : this.nodeData.data\r\n  }\r\n\r\n  // 获取该节点的纯数据，即不包含对节点实例的引用\r\n  getPureData(removeActiveState = true, removeId = false) {\r\n    return copyNodeTree({}, this, removeActiveState, removeId)\r\n  }\r\n\r\n  // 获取祖先节点列表\r\n  getAncestorNodes() {\r\n    const list = []\r\n    let parent = this.parent\r\n    while (parent) {\r\n      list.unshift(parent)\r\n      parent = parent.parent\r\n    }\r\n    return list\r\n  }\r\n\r\n  // 是否存在自定义样式\r\n  hasCustomStyle() {\r\n    return this.style.hasCustomStyle()\r\n  }\r\n\r\n  // 获取节点的尺寸和位置信息，宽高是应用了缩放效果后的实际宽高，位置是相对于浏览器窗口左上角的位置\r\n  getRect() {\r\n    return this.group ? this.group.rbox() : null\r\n  }\r\n\r\n  // 获取节点的尺寸和位置信息，宽高是应用了缩放效果后的实际宽高，位置信息相对于画布\r\n  getRectInSvg() {\r\n    const { scaleX, scaleY, translateX, translateY } =\r\n      this.mindMap.draw.transform()\r\n    let { left, top, width, height } = this\r\n    const right = (left + width) * scaleX + translateX\r\n    const bottom = (top + height) * scaleY + translateY\r\n    left = left * scaleX + translateX\r\n    top = top * scaleY + translateY\r\n    return {\r\n      left,\r\n      right,\r\n      top,\r\n      bottom,\r\n      width: width * scaleX,\r\n      height: height * scaleY\r\n    }\r\n  }\r\n\r\n  // 高亮节点\r\n  highlight() {\r\n    if (this.group) this.group.addClass('smm-node-highlight')\r\n  }\r\n\r\n  // 取消高亮节点\r\n  closeHighlight() {\r\n    if (this.group) this.group.removeClass('smm-node-highlight')\r\n  }\r\n\r\n  // 伪克隆节点\r\n  // 克隆出的节点并不能真正当做一个节点使用\r\n  fakeClone() {\r\n    const newNode = new MindMapNode({\r\n      ...this.opt,\r\n      uid: createUid()\r\n    })\r\n    Object.keys(this).forEach(item => {\r\n      newNode[item] = this[item]\r\n    })\r\n    return newNode\r\n  }\r\n\r\n  // 创建SVG文本节点\r\n  createSvgTextNode(text = '') {\r\n    return new Text().text(text)\r\n  }\r\n\r\n  // 获取SVG.js库的一些对象\r\n  getSvgObjects() {\r\n    return {\r\n      SVG,\r\n      G,\r\n      Rect\r\n    }\r\n  }\r\n\r\n  // 检查是否支持拖拽调整宽度\r\n  // 1.富文本模式\r\n  // 2.自定义节点内容\r\n  checkEnableDragModifyNodeWidth() {\r\n    const {\r\n      enableDragModifyNodeWidth,\r\n      isUseCustomNodeContent,\r\n      customCreateNodeContent\r\n    } = this.mindMap.opt\r\n    return (\r\n      enableDragModifyNodeWidth &&\r\n      (this.mindMap.richText ||\r\n        (isUseCustomNodeContent && customCreateNodeContent))\r\n    )\r\n  }\r\n\r\n  // 是否存在自定义宽度\r\n  hasCustomWidth() {\r\n    return (\r\n      this.checkEnableDragModifyNodeWidth() &&\r\n      this.customTextWidth !== undefined\r\n    )\r\n  }\r\n\r\n  // 获取子节点的数量\r\n  getChildrenLength() {\r\n    return this.nodeData.children ? this.nodeData.children.length : 0\r\n  }\r\n}\r\n\r\nexport default MindMapNode\r\n", "// LRU缓存类\r\nexport default class Lru {\r\n  constructor(max) {\r\n    this.max = max || 1000\r\n    this.size = 0\r\n    this.pool = new Map()\r\n  }\r\n\r\n  add(key, value) {\r\n    const isExist = this.has(key)\r\n    // 如果该key之前不存在，并且现在数量已经超出最大值，则不再继续添加\r\n    if (!isExist && this.size >= this.max) {\r\n      return false\r\n    }\r\n    // 已经存在则可以更新，因为不影响数量\r\n    // 如果该key是否已经存在，则先删除\r\n    this.delete(key)\r\n    // 添加\r\n    this.pool.set(key, value)\r\n    this.size++\r\n    // 删除最早的没啥意义，详见：https://github.com/wanglin2/mind-map/issues/467\r\n    // if (this.size > this.max) {\r\n    //   let keys = this.pool.keys()\r\n    //   let last = keys.next()\r\n    //   this.delete(last.value)\r\n    // }\r\n    return true\r\n  }\r\n\r\n  delete(key) {\r\n    if (this.pool.has(key)) {\r\n      this.pool.delete(key)\r\n      this.size--\r\n    }\r\n  }\r\n\r\n  has(key) {\r\n    return this.pool.has(key)\r\n  }\r\n\r\n  get(key) {\r\n    if (this.pool.has(key)) {\r\n      return this.pool.get(key)\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.size = 0\r\n    this.pool = new Map()\r\n  }\r\n}\r\n", "import MindMapNode from '../core/render/node/MindMapNode'\r\nimport { CONSTANTS, initRootNodePositionMap } from '../constants/constant'\r\nimport Lru from '../utils/Lru'\r\nimport { createUid } from '../utils/index'\r\n\r\n//  布局基类\r\nclass Base {\r\n  //  构造函数\r\n  constructor(renderer) {\r\n    // 渲染实例\r\n    this.renderer = renderer\r\n    // 控制实例\r\n    this.mindMap = renderer.mindMap\r\n    // 绘图对象\r\n    this.draw = this.mindMap.draw\r\n    this.lineDraw = this.mindMap.lineDraw\r\n    // 根节点\r\n    this.root = null\r\n    this.lru = new Lru(this.mindMap.opt.maxNodeCacheCount)\r\n    // 当initRootNodePosition不为默认的值时，根节点的位置距默认的配置时根节点距离的差值\r\n    this.rootNodeCenterOffset = null\r\n  }\r\n\r\n  //  计算节点位置\r\n  doLayout() {\r\n    throw new Error('【computed】方法为必要方法，需要子类进行重写！')\r\n  }\r\n\r\n  //  连线\r\n  renderLine() {\r\n    throw new Error('【renderLine】方法为必要方法，需要子类进行重写！')\r\n  }\r\n\r\n  //  定位展开收缩按钮\r\n  renderExpandBtn() {\r\n    throw new Error('【renderExpandBtn】方法为必要方法，需要子类进行重写！')\r\n  }\r\n\r\n  //  概要节点\r\n  renderGeneralization() {}\r\n\r\n  // 通过uid缓存节点\r\n  cacheNode(uid, node) {\r\n    // 记录本次渲染时的节点\r\n    this.renderer.nodeCache[uid] = node\r\n    // 缓存所有渲染过的节点\r\n    this.lru.add(uid, node)\r\n  }\r\n\r\n  // 检查当前来源是否需要重新计算节点大小\r\n  checkIsNeedResizeSources() {\r\n    return [CONSTANTS.CHANGE_THEME].includes(this.renderer.renderSource)\r\n  }\r\n\r\n  // 层级类型改变\r\n  checkIsLayerTypeChange(oldIndex, newIndex) {\r\n    if (oldIndex >= 2 && newIndex >= 2) return false\r\n    if (oldIndex >= 2 && newIndex < 2) return true\r\n    if (oldIndex < 2 && newIndex >= 2) return true\r\n  }\r\n\r\n  // 检查是否是结构布局改变重新渲染展开收起按钮占位元素\r\n  checkIsLayoutChangeRerenderExpandBtnPlaceholderRect(node) {\r\n    if (this.renderer.renderSource === CONSTANTS.CHANGE_LAYOUT) {\r\n      node.needRerenderExpandBtnPlaceholderRect = true\r\n    }\r\n  }\r\n\r\n  // 节点节点数据是否发生了改变\r\n  checkIsNodeDataChange(lastData, curData) {\r\n    if (lastData) {\r\n      // 对比忽略激活状态和展开收起状态\r\n      lastData = typeof lastData === 'string' ? JSON.parse(lastData) : lastData\r\n      lastData.isActive = curData.isActive\r\n      lastData.expand = curData.expand\r\n      lastData = JSON.stringify(lastData)\r\n    }\r\n    return lastData !== JSON.stringify(curData)\r\n  }\r\n\r\n  //  创建节点实例\r\n  createNode(data, parent, isRoot, layerIndex, index, ancestors) {\r\n    // 创建节点\r\n    // 库前置内容数据\r\n    const nodeInnerPrefixData = {}\r\n    this.mindMap.nodeInnerPrefixList.forEach(item => {\r\n      if (item.createNodeData) {\r\n        const [key, value] = item.createNodeData({\r\n          data,\r\n          parent,\r\n          ancestors,\r\n          layerIndex,\r\n          index\r\n        })\r\n        nodeInnerPrefixData[key] = value\r\n      }\r\n    })\r\n    const uid = data.data.uid\r\n    let newNode = null\r\n    // 数据上保存了节点引用，那么直接复用节点\r\n    if (data && data._node && !this.renderer.reRender) {\r\n      newNode = data._node\r\n      // 节点层级改变了\r\n      const isLayerTypeChange = this.checkIsLayerTypeChange(\r\n        newNode.layerIndex,\r\n        layerIndex\r\n      )\r\n      newNode.reset()\r\n      newNode.layerIndex = layerIndex\r\n      if (isRoot) {\r\n        newNode.isRoot = true\r\n      } else {\r\n        newNode.parent = parent._node\r\n      }\r\n      this.cacheNode(data._node.uid, newNode)\r\n      this.checkIsLayoutChangeRerenderExpandBtnPlaceholderRect(newNode)\r\n      // 库前置内容是否改变了\r\n      let isNodeInnerPrefixChange = false\r\n      this.mindMap.nodeInnerPrefixList.forEach(item => {\r\n        if (item.updateNodeData) {\r\n          const isChange = item.updateNodeData(newNode, nodeInnerPrefixData)\r\n          if (isChange) {\r\n            isNodeInnerPrefixChange = isChange\r\n          }\r\n        }\r\n      })\r\n      // 主题或主题配置改变了\r\n      const isResizeSource = this.checkIsNeedResizeSources()\r\n      // 节点数据改变了\r\n      const isNodeDataChange = this.checkIsNodeDataChange(\r\n        data._node.nodeDataSnapshot,\r\n        data.data\r\n      )\r\n      // 重新计算节点大小和布局\r\n      if (\r\n        isResizeSource ||\r\n        isNodeDataChange ||\r\n        isLayerTypeChange ||\r\n        newNode.getData('resetRichText') ||\r\n        newNode.getData('needUpdate') ||\r\n        isNodeInnerPrefixChange\r\n      ) {\r\n        newNode.getSize()\r\n        newNode.needLayout = true\r\n      }\r\n      this.checkGetGeneralizationChange(newNode, isResizeSource)\r\n    } else if (\r\n      (this.lru.has(uid) || this.renderer.lastNodeCache[uid]) &&\r\n      !this.renderer.reRender\r\n    ) {\r\n      // 节点数据上没有节点实例\r\n      // 但是通过uid在节点缓存池中找到了缓存的节点\r\n      // 或者在上一次渲染缓存对象中找到了节点\r\n      // 也可以直接复用\r\n      newNode = this.lru.get(uid) || this.renderer.lastNodeCache[uid]\r\n      // 保存该节点上一次的数据\r\n      const lastData = JSON.stringify(newNode.getData())\r\n      // 节点层级改变了\r\n      const isLayerTypeChange = this.checkIsLayerTypeChange(\r\n        newNode.layerIndex,\r\n        layerIndex\r\n      )\r\n      newNode.reset()\r\n      newNode.nodeData = newNode.handleData(data || {})\r\n      newNode.layerIndex = layerIndex\r\n      if (isRoot) {\r\n        newNode.isRoot = true\r\n      } else {\r\n        newNode.parent = parent._node\r\n      }\r\n      this.cacheNode(uid, newNode)\r\n      this.checkIsLayoutChangeRerenderExpandBtnPlaceholderRect(newNode)\r\n      data._node = newNode\r\n      // 主题或主题配置改变了需要重新计算节点大小和布局\r\n      const isResizeSource = this.checkIsNeedResizeSources()\r\n      // 点数据改变了\r\n      const isNodeDataChange = this.checkIsNodeDataChange(lastData, data.data)\r\n      // 库前置内容是否改变了\r\n      let isNodeInnerPrefixChange = false\r\n      this.mindMap.nodeInnerPrefixList.forEach(item => {\r\n        if (item.updateNodeData) {\r\n          const isChange = item.updateNodeData(newNode, nodeInnerPrefixData)\r\n          if (isChange) {\r\n            isNodeInnerPrefixChange = isChange\r\n          }\r\n        }\r\n      })\r\n      // 重新计算节点大小和布局\r\n      if (\r\n        isResizeSource ||\r\n        isNodeDataChange ||\r\n        isLayerTypeChange ||\r\n        newNode.getData('resetRichText') ||\r\n        newNode.getData('needUpdate') ||\r\n        isNodeInnerPrefixChange\r\n      ) {\r\n        newNode.getSize()\r\n        newNode.needLayout = true\r\n      }\r\n      this.checkGetGeneralizationChange(newNode, isResizeSource)\r\n    } else {\r\n      // 创建新节点\r\n      const newUid = uid || createUid()\r\n      newNode = new MindMapNode({\r\n        data,\r\n        uid: newUid,\r\n        renderer: this.renderer,\r\n        mindMap: this.mindMap,\r\n        draw: this.draw,\r\n        layerIndex,\r\n        isRoot,\r\n        parent: !isRoot ? parent._node : null,\r\n        ...nodeInnerPrefixData\r\n      })\r\n      // uid保存到数据上，为了节点复用\r\n      data.data.uid = newUid\r\n      this.cacheNode(newUid, newNode)\r\n      // 数据关联实际节点\r\n      data._node = newNode\r\n    }\r\n    // 如果该节点数据是已激活状态，那么添加到激活节点列表里\r\n    if (data.data.isActive) {\r\n      this.renderer.addNodeToActiveList(newNode)\r\n    }\r\n    // 如果当前节点在激活节点列表里，那么添加上激活的状态\r\n    if (this.mindMap.renderer.findActiveNodeIndex(newNode) !== -1) {\r\n      newNode.setData({\r\n        isActive: true\r\n      })\r\n    }\r\n    // 根节点\r\n    if (isRoot) {\r\n      this.root = newNode\r\n    } else {\r\n      // 互相收集\r\n      parent._node.addChildren(newNode)\r\n    }\r\n    return newNode\r\n  }\r\n\r\n  // 检查概要节点是否需要更新\r\n  checkGetGeneralizationChange(node, isResizeSource) {\r\n    const generalizationList = node.getData('generalization')\r\n    if (\r\n      generalizationList &&\r\n      node._generalizationList &&\r\n      node._generalizationList.length > 0\r\n    ) {\r\n      node._generalizationList.forEach((item, index) => {\r\n        const gNode = item.generalizationNode\r\n        const oldData = gNode.getData()\r\n        const newData = generalizationList[index]\r\n        if (\r\n          isResizeSource ||\r\n          (newData && JSON.stringify(oldData) !== JSON.stringify(newData))\r\n        ) {\r\n          if (newData) {\r\n            gNode.nodeData.data = newData\r\n          }\r\n          gNode.getSize()\r\n          gNode.needLayout = true\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  // 格式化节点位置\r\n  formatPosition(value, size, nodeSize) {\r\n    if (typeof value === 'number') {\r\n      return value\r\n    } else if (initRootNodePositionMap[value] !== undefined) {\r\n      return size * initRootNodePositionMap[value]\r\n    } else if (/^\\d\\d*%$/.test(value)) {\r\n      return (Number.parseFloat(value) / 100) * size\r\n    } else {\r\n      return (size - nodeSize) / 2\r\n    }\r\n  }\r\n\r\n  // 规范initRootNodePosition配置\r\n  formatInitRootNodePosition(pos) {\r\n    const { CENTER } = CONSTANTS.INIT_ROOT_NODE_POSITION\r\n    if (!pos || !Array.isArray(pos) || pos.length < 2) {\r\n      pos = [CENTER, CENTER]\r\n    }\r\n    return pos\r\n  }\r\n\r\n  //  定位节点到画布中间\r\n  setNodeCenter(node, position) {\r\n    let { initRootNodePosition } = this.mindMap.opt\r\n    initRootNodePosition = this.formatInitRootNodePosition(\r\n      position || initRootNodePosition\r\n    )\r\n    node.left = this.formatPosition(\r\n      initRootNodePosition[0],\r\n      this.mindMap.width,\r\n      node.width\r\n    )\r\n    node.top = this.formatPosition(\r\n      initRootNodePosition[1],\r\n      this.mindMap.height,\r\n      node.height\r\n    )\r\n  }\r\n\r\n  // 当initRootNodePosition配置不为默认的['center','center']时，计算当前配置和默认配置情况下，根节点位置的差值\r\n  getRootCenterOffset(width, height) {\r\n    // 因为根节点的大小不会影响这个差值，所以计算一次就足够了\r\n    if (this.rootNodeCenterOffset) return this.rootNodeCenterOffset\r\n    let { initRootNodePosition } = this.mindMap.opt\r\n    const { CENTER } = CONSTANTS.INIT_ROOT_NODE_POSITION\r\n    initRootNodePosition = this.formatInitRootNodePosition(initRootNodePosition)\r\n    if (\r\n      initRootNodePosition[0] === CENTER &&\r\n      initRootNodePosition[1] === CENTER\r\n    ) {\r\n      // 如果initRootNodePosition是默认的，那么不需要计算\r\n      this.rootNodeCenterOffset = {\r\n        x: 0,\r\n        y: 0\r\n      }\r\n    } else {\r\n      // 否则需要计算当前配置和默认配置的差值\r\n      const tmpNode = {\r\n        width: width,\r\n        height: height\r\n      }\r\n      const tmpNode2 = {\r\n        width: width,\r\n        height: height\r\n      }\r\n      this.setNodeCenter(tmpNode, [CENTER, CENTER])\r\n      this.setNodeCenter(tmpNode2)\r\n      this.rootNodeCenterOffset = {\r\n        x: tmpNode2.left - tmpNode.left,\r\n        y: tmpNode2.top - tmpNode.top\r\n      }\r\n    }\r\n    return this.rootNodeCenterOffset\r\n  }\r\n\r\n  //  更新子节点属性\r\n  updateChildren(children, prop, offset) {\r\n    children.forEach(item => {\r\n      item[prop] += offset\r\n      if (item.children && item.children.length && !item.hasCustomPosition()) {\r\n        // 适配自定义位置\r\n        this.updateChildren(item.children, prop, offset)\r\n      }\r\n    })\r\n  }\r\n\r\n  //  更新子节点多个属性\r\n  updateChildrenPro(children, props) {\r\n    children.forEach(item => {\r\n      Object.keys(props).forEach(prop => {\r\n        item[prop] += props[prop]\r\n      })\r\n      if (item.children && item.children.length && !item.hasCustomPosition()) {\r\n        // 适配自定义位置\r\n        this.updateChildrenPro(item.children, props)\r\n      }\r\n    })\r\n  }\r\n\r\n  //  递归计算节点的宽度\r\n  getNodeAreaWidth(node, withGeneralization = false) {\r\n    let widthArr = []\r\n    let totalGeneralizationNodeWidth = 0\r\n    let loop = (node, width) => {\r\n      if (withGeneralization && node.checkHasGeneralization()) {\r\n        totalGeneralizationNodeWidth += node._generalizationNodeWidth\r\n      }\r\n      if (node.children.length) {\r\n        width += node.width / 2\r\n        node.children.forEach(item => {\r\n          loop(item, width)\r\n        })\r\n      } else {\r\n        width += node.width\r\n        widthArr.push(width)\r\n      }\r\n    }\r\n    loop(node, 0)\r\n    return Math.max(...widthArr) + totalGeneralizationNodeWidth\r\n  }\r\n\r\n  //  二次贝塞尔曲线\r\n  quadraticCurvePath(x1, y1, x2, y2, v = false) {\r\n    let cx, cy\r\n    if (v) {\r\n      cx = x1 + (x2 - x1) * 0.8\r\n      cy = y1 + (y2 - y1) * 0.2\r\n    } else {\r\n      cx = x1 + (x2 - x1) * 0.2\r\n      cy = y1 + (y2 - y1) * 0.8\r\n    }\r\n    return `M ${x1},${y1} Q ${cx},${cy} ${x2},${y2}`\r\n  }\r\n\r\n  //  三次贝塞尔曲线\r\n  cubicBezierPath(x1, y1, x2, y2, v = false) {\r\n    let cx1, cy1, cx2, cy2\r\n    if (v) {\r\n      cx1 = x1\r\n      cy1 = y1 + (y2 - y1) / 2\r\n      cx2 = x2\r\n      cy2 = cy1\r\n    } else {\r\n      cx1 = x1 + (x2 - x1) / 2\r\n      cy1 = y1\r\n      cx2 = cx1\r\n      cy2 = y2\r\n    }\r\n    return `M ${x1},${y1} C ${cx1},${cy1} ${cx2},${cy2} ${x2},${y2}`\r\n  }\r\n\r\n  // 根据a,b两个点的位置，计算去除圆角大小后的新的b点\r\n  computeNewPoint(a, b, radius = 0) {\r\n    // x坐标相同\r\n    if (a[0] === b[0]) {\r\n      // b在a下方\r\n      if (b[1] > a[1]) {\r\n        return [b[0], b[1] - radius]\r\n      } else {\r\n        // b在a上方\r\n        return [b[0], b[1] + radius]\r\n      }\r\n    } else if (a[1] === b[1]) {\r\n      // y坐标相同\r\n      // b在a右边\r\n      if (b[0] > a[0]) {\r\n        return [b[0] - radius, b[1]]\r\n      } else {\r\n        return [b[0] + radius, b[1]]\r\n      }\r\n    }\r\n  }\r\n\r\n  // 创建一段折线路径\r\n  // 最后一个拐角支持圆角\r\n  createFoldLine(list) {\r\n    const { lineRadius } = this.mindMap.themeConfig\r\n    const len = list.length\r\n    let path = ''\r\n    let radiusPath = ''\r\n    if (len >= 3 && lineRadius > 0) {\r\n      const start = list[len - 3]\r\n      const center = list[len - 2]\r\n      const end = list[len - 1]\r\n      // 如果三点在一条直线，那么不用处理\r\n      const isOneLine =\r\n        (start[0].toFixed(0) === center[0].toFixed(0) &&\r\n          center[0].toFixed(0) === end[0].toFixed(0)) ||\r\n        (start[1].toFixed(0) === center[1].toFixed(0) &&\r\n          center[1].toFixed(0) === end[1].toFixed(0))\r\n      if (!isOneLine) {\r\n        const cStart = this.computeNewPoint(start, center, lineRadius)\r\n        const cEnd = this.computeNewPoint(end, center, lineRadius)\r\n        radiusPath = `Q ${center[0]},${center[1]} ${cEnd[0]},${cEnd[1]}`\r\n        list.splice(len - 2, 1, cStart, radiusPath)\r\n      }\r\n    }\r\n    list.forEach((item, index) => {\r\n      if (typeof item === 'string') {\r\n        path += item\r\n      } else {\r\n        const [x, y] = item\r\n        if (index === 0) {\r\n          path += `M ${x},${y}`\r\n        } else {\r\n          path += `L ${x},${y}`\r\n        }\r\n      }\r\n    })\r\n    return path\r\n  }\r\n\r\n  //   获取节点的marginX\r\n  getMarginX(layerIndex) {\r\n    const { themeConfig, opt } = this.mindMap\r\n    const { second, node } = themeConfig\r\n    const hoverRectPadding = opt.hoverRectPadding * 2\r\n    return layerIndex === 1\r\n      ? second.marginX + hoverRectPadding\r\n      : node.marginX + hoverRectPadding\r\n  }\r\n\r\n  //  获取节点的marginY\r\n  getMarginY(layerIndex) {\r\n    const { themeConfig, opt } = this.mindMap\r\n    const { second, node } = themeConfig\r\n    const hoverRectPadding = opt.hoverRectPadding * 2\r\n    return layerIndex === 1\r\n      ? second.marginY + hoverRectPadding\r\n      : node.marginY + hoverRectPadding\r\n  }\r\n\r\n  //  获取节点包括概要在内的宽度\r\n  getNodeWidthWithGeneralization(node) {\r\n    return Math.max(\r\n      node.width,\r\n      node.checkHasGeneralization() ? node._generalizationNodeWidth : 0\r\n    )\r\n  }\r\n\r\n  //  获取节点包括概要在内的高度\r\n  getNodeHeightWithGeneralization(node) {\r\n    return Math.max(\r\n      node.height,\r\n      node.checkHasGeneralization() ? node._generalizationNodeHeight : 0\r\n    )\r\n  }\r\n\r\n  //  获取节点的边界值\r\n  /**\r\n   * dir：生长方向，h（水平）、v（垂直）\r\n   * isLeft：是否向左生长\r\n   */\r\n  getNodeBoundaries(node, dir) {\r\n    let { generalizationLineMargin, generalizationNodeMargin } =\r\n      this.mindMap.themeConfig\r\n    let walk = root => {\r\n      let _left = Infinity\r\n      let _right = -Infinity\r\n      let _top = Infinity\r\n      let _bottom = -Infinity\r\n      if (root.children && root.children.length > 0) {\r\n        root.children.forEach(child => {\r\n          let { left, right, top, bottom } = walk(child)\r\n          // 概要内容的宽度\r\n          let generalizationWidth =\r\n            child.checkHasGeneralization() && child.getData('expand')\r\n              ? child._generalizationNodeWidth + generalizationNodeMargin\r\n              : 0\r\n          // 概要内容的高度\r\n          let generalizationHeight =\r\n            child.checkHasGeneralization() && child.getData('expand')\r\n              ? child._generalizationNodeHeight + generalizationNodeMargin\r\n              : 0\r\n          if (left - (dir === 'h' ? generalizationWidth : 0) < _left) {\r\n            _left = left - (dir === 'h' ? generalizationWidth : 0)\r\n          }\r\n          if (right + (dir === 'h' ? generalizationWidth : 0) > _right) {\r\n            _right = right + (dir === 'h' ? generalizationWidth : 0)\r\n          }\r\n          if (top < _top) {\r\n            _top = top\r\n          }\r\n          if (bottom + (dir === 'v' ? generalizationHeight : 0) > _bottom) {\r\n            _bottom = bottom + (dir === 'v' ? generalizationHeight : 0)\r\n          }\r\n        })\r\n      }\r\n      let cur = {\r\n        left: root.left,\r\n        right: root.left + root.width,\r\n        top: root.top,\r\n        bottom: root.top + root.height\r\n      }\r\n      return {\r\n        left: cur.left < _left ? cur.left : _left,\r\n        right: cur.right > _right ? cur.right : _right,\r\n        top: cur.top < _top ? cur.top : _top,\r\n        bottom: cur.bottom > _bottom ? cur.bottom : _bottom\r\n      }\r\n    }\r\n    let { left, right, top, bottom } = walk(node)\r\n    return {\r\n      left,\r\n      right,\r\n      top,\r\n      bottom,\r\n      generalizationLineMargin,\r\n      generalizationNodeMargin\r\n    }\r\n  }\r\n\r\n  // 获取指定索引区间的子节点的边界范围\r\n  getChildrenBoundaries(node, dir, startIndex = 0, endIndex) {\r\n    let { generalizationLineMargin, generalizationNodeMargin } =\r\n      this.mindMap.themeConfig\r\n    const children = node.children.slice(startIndex, endIndex + 1)\r\n    let left = Infinity\r\n    let right = -Infinity\r\n    let top = Infinity\r\n    let bottom = -Infinity\r\n    children.forEach(item => {\r\n      const cur = this.getNodeBoundaries(item, dir)\r\n      left = cur.left < left ? cur.left : left\r\n      right = cur.right > right ? cur.right : right\r\n      top = cur.top < top ? cur.top : top\r\n      bottom = cur.bottom > bottom ? cur.bottom : bottom\r\n    })\r\n    return {\r\n      left,\r\n      right,\r\n      top,\r\n      bottom,\r\n      generalizationLineMargin,\r\n      generalizationNodeMargin\r\n    }\r\n  }\r\n\r\n  // 获取节点概要的渲染边界\r\n  getNodeGeneralizationRenderBoundaries(item, dir) {\r\n    let res = null\r\n    // 区间\r\n    if (item.range) {\r\n      res = this.getChildrenBoundaries(\r\n        item.node,\r\n        dir,\r\n        item.range[0],\r\n        item.range[1]\r\n      )\r\n    } else {\r\n      // 整体概要\r\n      res = this.getNodeBoundaries(item.node, dir)\r\n    }\r\n    return res\r\n  }\r\n\r\n  // 获取节点实际存在几个子节点\r\n  getNodeActChildrenLength(node) {\r\n    return node.nodeData.children && node.nodeData.children.length\r\n  }\r\n\r\n  // 设置连线样式\r\n  setLineStyle(style, line, path, childNode) {\r\n    line.plot(this.transformPath(path))\r\n    style && style(line, childNode, true)\r\n  }\r\n\r\n  // 转换路径，可以转换成特殊风格的线条样式\r\n  transformPath(path) {\r\n    const { customTransformNodeLinePath } = this.mindMap.opt\r\n    if (customTransformNodeLinePath) {\r\n      return customTransformNodeLinePath(path)\r\n    } else {\r\n      return path\r\n    }\r\n  }\r\n}\r\n\r\nexport default Base\r\n", "import Base from './Base'\r\nimport { walk, asyncRun, getNodeIndexInNodeList } from '../utils'\r\nimport { CONSTANTS } from '../constants/constant'\r\n\r\n//  逻辑结构图\r\nclass LogicalStructure extends Base {\r\n  //  构造函数\r\n  constructor(opt = {}, layout) {\r\n    super(opt)\r\n    this.isUseLeft = layout === CONSTANTS.LAYOUT.LOGICAL_STRUCTURE_LEFT\r\n  }\r\n\r\n  //  布局\r\n  doLayout(callback) {\r\n    let task = [\r\n      () => {\r\n        this.computedBaseValue()\r\n      },\r\n      () => {\r\n        this.computedTopValue()\r\n      },\r\n      () => {\r\n        this.adjustTopValue()\r\n      },\r\n      () => {\r\n        callback(this.root)\r\n      }\r\n    ]\r\n    asyncRun(task)\r\n  }\r\n\r\n  //  遍历数据计算节点的left、width、height\r\n  computedBaseValue() {\r\n    let sortIndex = 0\r\n    walk(\r\n      this.renderer.renderTree,\r\n      null,\r\n      (cur, parent, isRoot, layerIndex, index, ancestors) => {\r\n        let newNode = this.createNode(cur, parent, isRoot, layerIndex, index, ancestors)\r\n        newNode.sortIndex = sortIndex\r\n        sortIndex++\r\n        // 根节点定位在画布中心位置\r\n        if (isRoot) {\r\n          this.setNodeCenter(newNode)\r\n        } else {\r\n          // 非根节点\r\n          // 定位到父节点右侧\r\n          if (this.isUseLeft) {\r\n            newNode.left =\r\n              parent._node.left - newNode.width - this.getMarginX(layerIndex)\r\n          } else {\r\n            newNode.left =\r\n              parent._node.left +\r\n              parent._node.width +\r\n              this.getMarginX(layerIndex)\r\n          }\r\n        }\r\n        if (!cur.data.expand) {\r\n          return true\r\n        }\r\n      },\r\n      (cur, parent, isRoot, layerIndex) => {\r\n        // 返回时计算节点的areaHeight，也就是子节点所占的高度之和，包括外边距\r\n        let len = cur.data.expand === false ? 0 : cur._node.children.length\r\n        cur._node.childrenAreaHeight = len\r\n          ? cur._node.children.reduce((h, item) => {\r\n              return h + item.height\r\n            }, 0) +\r\n            (len + 1) * this.getMarginY(layerIndex + 1)\r\n          : 0\r\n        // 如果存在概要，则和概要的高度取最大值\r\n        let generalizationNodeHeight = cur._node.checkHasGeneralization()\r\n          ? cur._node._generalizationNodeHeight +\r\n            this.getMarginY(layerIndex + 1)\r\n          : 0\r\n        cur._node.childrenAreaHeight2 = Math.max(\r\n          cur._node.childrenAreaHeight,\r\n          generalizationNodeHeight\r\n        )\r\n      },\r\n      true,\r\n      0\r\n    )\r\n  }\r\n\r\n  //  遍历节点树计算节点的top\r\n  computedTopValue() {\r\n    walk(\r\n      this.root,\r\n      null,\r\n      (node, parent, isRoot, layerIndex) => {\r\n        if (node.getData('expand') && node.children && node.children.length) {\r\n          let marginY = this.getMarginY(layerIndex + 1)\r\n          // 第一个子节点的top值 = 该节点中心的top值 - 子节点的高度之和的一半\r\n          let top = node.top + node.height / 2 - node.childrenAreaHeight / 2\r\n          let totalTop = top + marginY\r\n          node.children.forEach(cur => {\r\n            cur.top = totalTop\r\n            totalTop += cur.height + marginY\r\n          })\r\n        }\r\n      },\r\n      null,\r\n      true\r\n    )\r\n  }\r\n\r\n  //  调整节点top\r\n  adjustTopValue() {\r\n    walk(\r\n      this.root,\r\n      null,\r\n      (node, parent, isRoot, layerIndex) => {\r\n        if (!node.getData('expand')) {\r\n          return\r\n        }\r\n        // 判断子节点所占的高度之和是否大于该节点自身，大于则需要调整位置\r\n        let difference =\r\n          node.childrenAreaHeight2 -\r\n          this.getMarginY(layerIndex + 1) * 2 -\r\n          node.height\r\n        if (difference > 0) {\r\n          this.updateBrothers(node, difference / 2)\r\n        }\r\n      },\r\n      null,\r\n      true\r\n    )\r\n  }\r\n\r\n  //  更新兄弟节点的top\r\n  updateBrothers(node, addHeight) {\r\n    if (node.parent) {\r\n      let childrenList = node.parent.children\r\n      let index = getNodeIndexInNodeList(node, childrenList)\r\n      childrenList.forEach((item, _index) => {\r\n        if (item.uid === node.uid || item.hasCustomPosition()) {\r\n          // 适配自定义位置\r\n          return\r\n        }\r\n        let _offset = 0\r\n        // 上面的节点往上移\r\n        if (_index < index) {\r\n          _offset = -addHeight\r\n        } else if (_index > index) {\r\n          // 下面的节点往下移\r\n          _offset = addHeight\r\n        }\r\n        item.top += _offset\r\n        // 同步更新子节点的位置\r\n        if (item.children && item.children.length) {\r\n          this.updateChildren(item.children, 'top', _offset)\r\n        }\r\n      })\r\n      // 更新父节点的位置\r\n      this.updateBrothers(node.parent, addHeight)\r\n    }\r\n  }\r\n\r\n  //  绘制连线，连接该节点到其子节点\r\n  renderLine(node, lines, style, lineStyle) {\r\n    if (lineStyle === 'curve') {\r\n      this.renderLineCurve(node, lines, style)\r\n    } else if (lineStyle === 'direct') {\r\n      this.renderLineDirect(node, lines, style)\r\n    } else {\r\n      this.renderLineStraight(node, lines, style)\r\n    }\r\n  }\r\n\r\n  //  直线风格连线\r\n  renderLineStraight(node, lines, style) {\r\n    if (node.children.length <= 0) {\r\n      return []\r\n    }\r\n    let { left, top, width, height, expandBtnSize } = node\r\n    const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n    if (!alwaysShowExpandBtn || notShowExpandBtn) {\r\n      expandBtnSize = 0\r\n    }\r\n    let marginX = this.getMarginX(node.layerIndex + 1)\r\n    let s1 = (marginX - expandBtnSize) * 0.6\r\n    if (this.isUseLeft) {\r\n      s1 *= -1\r\n    }\r\n    let nodeUseLineStyle = this.mindMap.themeConfig.nodeUseLineStyle\r\n    node.children.forEach((item, index) => {\r\n      let x1\r\n      if (this.isUseLeft) {\r\n        x1 = node.layerIndex === 0 ? left : left - expandBtnSize\r\n      } else {\r\n        x1 = node.layerIndex === 0 ? left + width : left + width + expandBtnSize\r\n      }\r\n      let y1 = top + height / 2\r\n      let x2 = this.isUseLeft ? item.left + item.width : item.left\r\n      let y2 = item.top + item.height / 2\r\n      // 节点使用横线风格，需要额外渲染横线\r\n      let nodeUseLineStyleOffset = nodeUseLineStyle\r\n        ? item.width * (this.isUseLeft ? -1 : 1)\r\n        : 0\r\n      y1 = nodeUseLineStyle && !node.isRoot ? y1 + height / 2 : y1\r\n      y2 = nodeUseLineStyle ? y2 + item.height / 2 : y2\r\n      let path = this.createFoldLine([\r\n        [x1, y1],\r\n        [x1 + s1, y1],\r\n        [x1 + s1, y2],\r\n        [x2 + nodeUseLineStyleOffset, y2]\r\n      ])\r\n      this.setLineStyle(style, lines[index], path, item)\r\n    })\r\n  }\r\n\r\n  //  直连风格\r\n  renderLineDirect(node, lines, style) {\r\n    if (node.children.length <= 0) {\r\n      return []\r\n    }\r\n    let { left, top, width, height, expandBtnSize } = node\r\n    const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n    if (!alwaysShowExpandBtn || notShowExpandBtn) {\r\n      expandBtnSize = 0\r\n    }\r\n    const { nodeUseLineStyle } = this.mindMap.themeConfig\r\n    node.children.forEach((item, index) => {\r\n      if (node.layerIndex === 0) {\r\n        expandBtnSize = 0\r\n      }\r\n      let x1 = this.isUseLeft\r\n        ? left - expandBtnSize\r\n        : left + width + expandBtnSize\r\n      let y1 = top + height / 2\r\n      let x2 = this.isUseLeft ? item.left + item.width : item.left\r\n      let y2 = item.top + item.height / 2\r\n      y1 = nodeUseLineStyle && !node.isRoot ? y1 + height / 2 : y1\r\n      y2 = nodeUseLineStyle ? y2 + item.height / 2 : y2\r\n      // 节点使用横线风格，需要额外渲染横线\r\n      let nodeUseLineStylePath = nodeUseLineStyle\r\n        ? ` L ${this.isUseLeft ? item.left : item.left + item.width},${y2}`\r\n        : ''\r\n      let path = `M ${x1},${y1} L ${x2},${y2}` + nodeUseLineStylePath\r\n      this.setLineStyle(style, lines[index], path, item)\r\n    })\r\n  }\r\n\r\n  //  曲线风格连线\r\n  renderLineCurve(node, lines, style) {\r\n    if (node.children.length <= 0) {\r\n      return []\r\n    }\r\n    let { left, top, width, height, expandBtnSize } = node\r\n    const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n    if (!alwaysShowExpandBtn || notShowExpandBtn) {\r\n      expandBtnSize = 0\r\n    }\r\n    const {\r\n      nodeUseLineStyle,\r\n      rootLineStartPositionKeepSameInCurve,\r\n      rootLineKeepSameInCurve\r\n    } = this.mindMap.themeConfig\r\n    node.children.forEach((item, index) => {\r\n      if (node.layerIndex === 0) {\r\n        expandBtnSize = 0\r\n      }\r\n      let x1\r\n      if (this.isUseLeft) {\r\n        x1 =\r\n          node.layerIndex === 0 && !rootLineStartPositionKeepSameInCurve\r\n            ? left + width / 2\r\n            : left - expandBtnSize\r\n      } else {\r\n        x1 =\r\n          node.layerIndex === 0 && !rootLineStartPositionKeepSameInCurve\r\n            ? left + width / 2\r\n            : left + width + expandBtnSize\r\n      }\r\n      let y1 = top + height / 2\r\n      let x2 = this.isUseLeft ? item.left + item.width : item.left\r\n      let y2 = item.top + item.height / 2\r\n      let path = ''\r\n      y1 = nodeUseLineStyle && !node.isRoot ? y1 + height / 2 : y1\r\n      y2 = nodeUseLineStyle ? y2 + item.height / 2 : y2\r\n      // 节点使用横线风格，需要额外渲染横线\r\n      let nodeUseLineStylePath\r\n      if (this.isUseLeft) {\r\n        nodeUseLineStylePath = nodeUseLineStyle ? ` L ${item.left},${y2}` : ''\r\n      } else {\r\n        nodeUseLineStylePath = nodeUseLineStyle\r\n          ? ` L ${item.left + item.width},${y2}`\r\n          : ''\r\n      }\r\n      if (node.isRoot && !rootLineKeepSameInCurve) {\r\n        path = this.quadraticCurvePath(x1, y1, x2, y2) + nodeUseLineStylePath\r\n      } else {\r\n        path = this.cubicBezierPath(x1, y1, x2, y2) + nodeUseLineStylePath\r\n      }\r\n      this.setLineStyle(style, lines[index], path, item)\r\n    })\r\n  }\r\n\r\n  //  渲染按钮\r\n  renderExpandBtn(node, btn) {\r\n    let { width, height, expandBtnSize, layerIndex } = node\r\n    if (layerIndex === 0) {\r\n      expandBtnSize = 0\r\n    }\r\n    let { translateX, translateY } = btn.transform()\r\n    // 节点使用横线风格，需要调整展开收起按钮位置\r\n    let nodeUseLineStyleOffset = this.mindMap.themeConfig.nodeUseLineStyle\r\n      ? height / 2\r\n      : 0\r\n    // 位置没有变化则返回\r\n    let _x = this.isUseLeft ? 0 - expandBtnSize : width\r\n    let _y = height / 2 + nodeUseLineStyleOffset\r\n    if (_x === translateX && _y === translateY) {\r\n      return\r\n    }\r\n    btn.translate(_x - translateX, _y - translateY)\r\n  }\r\n\r\n  //  创建概要节点\r\n  renderGeneralization(list) {\r\n    list.forEach(item => {\r\n      let {\r\n        left,\r\n        top,\r\n        bottom,\r\n        right,\r\n        generalizationLineMargin,\r\n        generalizationNodeMargin\r\n      } = this.getNodeGeneralizationRenderBoundaries(item, 'h')\r\n      let x = this.isUseLeft\r\n        ? left - generalizationLineMargin\r\n        : right + generalizationLineMargin\r\n      let x1 = x\r\n      let y1 = top\r\n      let x2 = x\r\n      let y2 = bottom\r\n      let cx = x1 + (this.isUseLeft ? -20 : 20)\r\n      let cy = y1 + (y2 - y1) / 2\r\n      let path = `M ${x1},${y1} Q ${cx},${cy} ${x2},${y2}`\r\n      item.generalizationLine.plot(path)\r\n      item.generalizationNode.left =\r\n        x +\r\n        (this.isUseLeft\r\n          ? -generalizationNodeMargin\r\n          : generalizationNodeMargin) -\r\n        (this.isUseLeft ? item.generalizationNode.width : 0)\r\n      item.generalizationNode.top =\r\n        top + (bottom - top - item.generalizationNode.height) / 2\r\n    })\r\n  }\r\n\r\n  // 渲染展开收起按钮的隐藏占位元素\r\n  renderExpandBtnRect(rect, expandBtnSize, width, height) {\r\n    if (this.isUseLeft) {\r\n      rect.size(expandBtnSize, height).x(-expandBtnSize).y(0)\r\n    } else {\r\n      rect.size(expandBtnSize, height).x(width).y(0)\r\n    }\r\n  }\r\n}\r\n\r\nexport default LogicalStructure\r\n", "import Base from './Base'\r\nimport { walk, asyncRun, getNodeIndexInNodeList } from '../utils'\r\nimport { CONSTANTS } from '../constants/constant'\r\n\r\n//  思维导图\r\nclass MindMap extends Base {\r\n  //  构造函数\r\n  // 在逻辑结构图的基础上增加一个变量来记录生长方向，向左还是向右，同时在计算left的时候根据方向来计算、调整top时只考虑同方向的节点即可\r\n  constructor(opt = {}) {\r\n    super(opt)\r\n  }\r\n\r\n  //  布局\r\n  doLayout(callback) {\r\n    let task = [\r\n      () => {\r\n        this.computedBaseValue()\r\n      },\r\n      () => {\r\n        this.computedTopValue()\r\n      },\r\n      () => {\r\n        this.adjustTopValue()\r\n      },\r\n      () => {\r\n        callback(this.root)\r\n      }\r\n    ]\r\n    asyncRun(task)\r\n  }\r\n\r\n  //  遍历数据计算节点的left、width、height\r\n  computedBaseValue() {\r\n    walk(\r\n      this.renderer.renderTree,\r\n      null,\r\n      (cur, parent, isRoot, layerIndex, index, ancestors) => {\r\n        let newNode = this.createNode(\r\n          cur,\r\n          parent,\r\n          isRoot,\r\n          layerIndex,\r\n          index,\r\n          ancestors\r\n        )\r\n        // 根节点定位在画布中心位置\r\n        if (isRoot) {\r\n          this.setNodeCenter(newNode)\r\n        } else {\r\n          // 非根节点\r\n          // 三级及以下节点以上级为准\r\n          if (parent._node.dir) {\r\n            newNode.dir = parent._node.dir\r\n          } else {\r\n            // 节点生长方向\r\n            newNode.dir =\r\n              newNode.getData('dir') ||\r\n              (index % 2 === 0\r\n                ? CONSTANTS.LAYOUT_GROW_DIR.RIGHT\r\n                : CONSTANTS.LAYOUT_GROW_DIR.LEFT)\r\n          }\r\n          // 根据生长方向定位到父节点的左侧或右侧\r\n          newNode.left =\r\n            newNode.dir === CONSTANTS.LAYOUT_GROW_DIR.RIGHT\r\n              ? parent._node.left +\r\n                parent._node.width +\r\n                this.getMarginX(layerIndex)\r\n              : parent._node.left - this.getMarginX(layerIndex) - newNode.width\r\n        }\r\n        if (!cur.data.expand) {\r\n          return true\r\n        }\r\n      },\r\n      (cur, parent, isRoot, layerIndex) => {\r\n        // 返回时计算节点的leftChildrenAreaHeight和rightChildrenAreaHeight，也就是左侧和右侧子节点所占的高度之和，包括外边距\r\n        if (!cur.data.expand) {\r\n          cur._node.leftChildrenAreaHeight = 0\r\n          cur._node.rightChildrenAreaHeight = 0\r\n          return\r\n        }\r\n        // 理论上只有根节点是存在两个方向的子节点的，其他节点的子节点一定全都是同方向，但是为了逻辑统一，就不按特殊处理的方式来写了\r\n        let leftLen = 0\r\n        let rightLen = 0\r\n        let leftChildrenAreaHeight = 0\r\n        let rightChildrenAreaHeight = 0\r\n        cur._node.children.forEach(item => {\r\n          if (item.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT) {\r\n            leftLen++\r\n            leftChildrenAreaHeight += item.height\r\n          } else {\r\n            rightLen++\r\n            rightChildrenAreaHeight += item.height\r\n          }\r\n        })\r\n        cur._node.leftChildrenAreaHeight =\r\n          leftChildrenAreaHeight +\r\n          (leftLen + 1) * this.getMarginY(layerIndex + 1)\r\n        cur._node.rightChildrenAreaHeight =\r\n          rightChildrenAreaHeight +\r\n          (rightLen + 1) * this.getMarginY(layerIndex + 1)\r\n\r\n        // 如果存在概要，则和概要的高度取最大值\r\n        let generalizationNodeHeight = cur._node.checkHasGeneralization()\r\n          ? cur._node._generalizationNodeHeight +\r\n            this.getMarginY(layerIndex + 1)\r\n          : 0\r\n        cur._node.leftChildrenAreaHeight2 = Math.max(\r\n          cur._node.leftChildrenAreaHeight,\r\n          generalizationNodeHeight\r\n        )\r\n        cur._node.rightChildrenAreaHeight2 = Math.max(\r\n          cur._node.rightChildrenAreaHeight,\r\n          generalizationNodeHeight\r\n        )\r\n      },\r\n      true,\r\n      0\r\n    )\r\n  }\r\n\r\n  //  遍历节点树计算节点的top\r\n  computedTopValue() {\r\n    walk(\r\n      this.root,\r\n      null,\r\n      (node, parent, isRoot, layerIndex) => {\r\n        if (node.getData('expand') && node.children && node.children.length) {\r\n          let marginY = this.getMarginY(layerIndex + 1)\r\n          let baseTop = node.top + node.height / 2 + marginY\r\n          // 第一个子节点的top值 = 该节点中心的top值 - 子节点的高度之和的一半\r\n          let leftTotalTop = baseTop - node.leftChildrenAreaHeight / 2\r\n          let rightTotalTop = baseTop - node.rightChildrenAreaHeight / 2\r\n          node.children.forEach(cur => {\r\n            if (cur.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT) {\r\n              cur.top = leftTotalTop\r\n              leftTotalTop += cur.height + marginY\r\n            } else {\r\n              cur.top = rightTotalTop\r\n              rightTotalTop += cur.height + marginY\r\n            }\r\n          })\r\n        }\r\n      },\r\n      null,\r\n      true\r\n    )\r\n  }\r\n\r\n  //  调整节点top\r\n  adjustTopValue() {\r\n    walk(\r\n      this.root,\r\n      null,\r\n      (node, parent, isRoot, layerIndex) => {\r\n        if (!node.getData('expand')) {\r\n          return\r\n        }\r\n        // 判断子节点所占的高度之和是否大于该节点自身，大于则需要调整位置\r\n        let base = this.getMarginY(layerIndex + 1) * 2 + node.height\r\n        let leftDifference = node.leftChildrenAreaHeight2 - base\r\n        let rightDifference = node.rightChildrenAreaHeight2 - base\r\n        if (leftDifference > 0 || rightDifference > 0) {\r\n          this.updateBrothers(node, leftDifference / 2, rightDifference / 2)\r\n        }\r\n      },\r\n      null,\r\n      true\r\n    )\r\n  }\r\n\r\n  //  更新兄弟节点的top\r\n  updateBrothers(node, leftAddHeight, rightAddHeight) {\r\n    if (node.parent) {\r\n      // 过滤出和自己同方向的节点\r\n      let childrenList = node.parent.children.filter(item => {\r\n        return item.dir === node.dir\r\n      })\r\n      let index = getNodeIndexInNodeList(node, childrenList)\r\n      childrenList.forEach((item, _index) => {\r\n        if (item.hasCustomPosition()) {\r\n          // 适配自定义位置\r\n          return\r\n        }\r\n        let _offset = 0\r\n        let addHeight =\r\n          item.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT\r\n            ? leftAddHeight\r\n            : rightAddHeight\r\n        // 上面的节点往上移\r\n        if (_index < index) {\r\n          _offset = -addHeight\r\n        } else if (_index > index) {\r\n          // 下面的节点往下移\r\n          _offset = addHeight\r\n        }\r\n        item.top += _offset\r\n        // 同步更新子节点的位置\r\n        if (item.children && item.children.length) {\r\n          this.updateChildren(item.children, 'top', _offset)\r\n        }\r\n      })\r\n      // 更新父节点的位置\r\n      this.updateBrothers(node.parent, leftAddHeight, rightAddHeight)\r\n    }\r\n  }\r\n\r\n  //  绘制连线，连接该节点到其子节点\r\n  renderLine(node, lines, style, lineStyle) {\r\n    if (lineStyle === 'curve') {\r\n      this.renderLineCurve(node, lines, style)\r\n    } else if (lineStyle === 'direct') {\r\n      this.renderLineDirect(node, lines, style)\r\n    } else {\r\n      this.renderLineStraight(node, lines, style)\r\n    }\r\n  }\r\n\r\n  //  直线风格连线\r\n  renderLineStraight(node, lines, style) {\r\n    if (node.children.length <= 0) {\r\n      return []\r\n    }\r\n    let { left, top, width, height, expandBtnSize } = node\r\n    const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n    if (!alwaysShowExpandBtn || notShowExpandBtn) {\r\n      expandBtnSize = 0\r\n    }\r\n    let marginX = this.getMarginX(node.layerIndex + 1)\r\n    let s1 = (marginX - expandBtnSize) * 0.6\r\n    let nodeUseLineStyle = this.mindMap.themeConfig.nodeUseLineStyle\r\n    node.children.forEach((item, index) => {\r\n      let x1 = 0\r\n      let _s = 0\r\n      // 节点使用横线风格，需要额外渲染横线\r\n      let nodeUseLineStyleOffset = nodeUseLineStyle ? item.width : 0\r\n      if (item.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT) {\r\n        _s = -s1\r\n        x1 = node.layerIndex === 0 ? left : left - expandBtnSize\r\n        nodeUseLineStyleOffset = -nodeUseLineStyleOffset\r\n      } else {\r\n        _s = s1\r\n        x1 = node.layerIndex === 0 ? left + width : left + width + expandBtnSize\r\n      }\r\n      let y1 = top + height / 2\r\n      let x2 =\r\n        item.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT\r\n          ? item.left + item.width\r\n          : item.left\r\n      let y2 = item.top + item.height / 2\r\n      y1 = nodeUseLineStyle && !node.isRoot ? y1 + height / 2 : y1\r\n      y2 = nodeUseLineStyle ? y2 + item.height / 2 : y2\r\n      let path = this.createFoldLine([\r\n        [x1, y1],\r\n        [x1 + _s, y1],\r\n        [x1 + _s, y2],\r\n        [x2 + nodeUseLineStyleOffset, y2]\r\n      ])\r\n      this.setLineStyle(style, lines[index], path, item)\r\n    })\r\n  }\r\n\r\n  //  直连风格\r\n  renderLineDirect(node, lines, style) {\r\n    if (node.children.length <= 0) {\r\n      return []\r\n    }\r\n    let { left, top, width, height, expandBtnSize } = node\r\n    const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n    if (!alwaysShowExpandBtn || notShowExpandBtn) {\r\n      expandBtnSize = 0\r\n    }\r\n    const { nodeUseLineStyle } = this.mindMap.themeConfig\r\n    node.children.forEach((item, index) => {\r\n      if (node.layerIndex === 0) {\r\n        expandBtnSize = 0\r\n      }\r\n      let x1 =\r\n        item.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT\r\n          ? left - expandBtnSize\r\n          : left + width + expandBtnSize\r\n      let y1 = top + height / 2\r\n      let x2 =\r\n        item.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT\r\n          ? item.left + item.width\r\n          : item.left\r\n      let y2 = item.top + item.height / 2\r\n      y1 = nodeUseLineStyle && !node.isRoot ? y1 + height / 2 : y1\r\n      y2 = nodeUseLineStyle ? y2 + item.height / 2 : y2\r\n      // 节点使用横线风格，需要额外渲染横线\r\n      let nodeUseLineStylePath = ''\r\n      if (nodeUseLineStyle) {\r\n        if (item.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT) {\r\n          nodeUseLineStylePath = ` L ${item.left},${y2}`\r\n        } else {\r\n          nodeUseLineStylePath = ` L ${item.left + item.width},${y2}`\r\n        }\r\n      }\r\n      let path = `M ${x1},${y1} L ${x2},${y2}` + nodeUseLineStylePath\r\n      this.setLineStyle(style, lines[index], path, item)\r\n    })\r\n  }\r\n\r\n  //  曲线风格连线\r\n  renderLineCurve(node, lines, style) {\r\n    if (node.children.length <= 0) {\r\n      return []\r\n    }\r\n    let { left, top, width, height, expandBtnSize } = node\r\n    const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n    if (!alwaysShowExpandBtn || notShowExpandBtn) {\r\n      expandBtnSize = 0\r\n    }\r\n    const {\r\n      nodeUseLineStyle,\r\n      rootLineKeepSameInCurve,\r\n      rootLineStartPositionKeepSameInCurve\r\n    } = this.mindMap.themeConfig\r\n    node.children.forEach((item, index) => {\r\n      if (node.layerIndex === 0) {\r\n        expandBtnSize = 0\r\n      }\r\n      let x1 =\r\n        node.layerIndex === 0 && !rootLineStartPositionKeepSameInCurve\r\n          ? left + width / 2\r\n          : item.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT\r\n          ? left - expandBtnSize\r\n          : left + width + expandBtnSize\r\n      let y1 = top + height / 2\r\n      let x2 =\r\n        item.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT\r\n          ? item.left + item.width\r\n          : item.left\r\n      let y2 = item.top + item.height / 2\r\n      let path = ''\r\n      y1 = nodeUseLineStyle && !node.isRoot ? y1 + height / 2 : y1\r\n      y2 = nodeUseLineStyle ? y2 + item.height / 2 : y2\r\n      // 节点使用横线风格，需要额外渲染横线\r\n      let nodeUseLineStylePath = ''\r\n      if (nodeUseLineStyle) {\r\n        if (item.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT) {\r\n          nodeUseLineStylePath = ` L ${item.left},${y2}`\r\n        } else {\r\n          nodeUseLineStylePath = ` L ${item.left + item.width},${y2}`\r\n        }\r\n      }\r\n      if (node.isRoot && !rootLineKeepSameInCurve) {\r\n        path = this.quadraticCurvePath(x1, y1, x2, y2) + nodeUseLineStylePath\r\n      } else {\r\n        path = this.cubicBezierPath(x1, y1, x2, y2) + nodeUseLineStylePath\r\n      }\r\n      this.setLineStyle(style, lines[index], path, item)\r\n    })\r\n  }\r\n\r\n  //  渲染按钮\r\n  renderExpandBtn(node, btn) {\r\n    let { width, height, expandBtnSize } = node\r\n    let { translateX, translateY } = btn.transform()\r\n    // 节点使用横线风格，需要调整展开收起按钮位置\r\n    let nodeUseLineStyleOffset = this.mindMap.themeConfig.nodeUseLineStyle\r\n      ? height / 2\r\n      : 0\r\n    // 位置没有变化则返回\r\n    let _x =\r\n      node.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT ? 0 - expandBtnSize : width\r\n    let _y = height / 2 + nodeUseLineStyleOffset\r\n    if (_x === translateX && _y === translateY) {\r\n      return\r\n    }\r\n    let x = _x - translateX\r\n    let y = _y - translateY\r\n    btn.translate(x, y)\r\n  }\r\n\r\n  //  创建概要节点\r\n  renderGeneralization(list) {\r\n    list.forEach(item => {\r\n      let isLeft = item.node.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT\r\n      let {\r\n        top,\r\n        bottom,\r\n        left,\r\n        right,\r\n        generalizationLineMargin,\r\n        generalizationNodeMargin\r\n      } = this.getNodeGeneralizationRenderBoundaries(item, 'h')\r\n      let x = isLeft\r\n        ? left - generalizationLineMargin\r\n        : right + generalizationLineMargin\r\n      let x1 = x\r\n      let y1 = top\r\n      let x2 = x\r\n      let y2 = bottom\r\n      let cx = x1 + (isLeft ? -20 : 20)\r\n      let cy = y1 + (y2 - y1) / 2\r\n      let path = `M ${x1},${y1} Q ${cx},${cy} ${x2},${y2}`\r\n      item.generalizationLine.plot(path)\r\n      item.generalizationNode.left =\r\n        x +\r\n        (isLeft ? -generalizationNodeMargin : generalizationNodeMargin) -\r\n        (isLeft ? item.generalizationNode.width : 0)\r\n      item.generalizationNode.top =\r\n        top + (bottom - top - item.generalizationNode.height) / 2\r\n    })\r\n  }\r\n\r\n  // 渲染展开收起按钮的隐藏占位元素\r\n  renderExpandBtnRect(rect, expandBtnSize, width, height, node) {\r\n    if (node.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT) {\r\n      rect.size(expandBtnSize, height).x(-expandBtnSize).y(0)\r\n    } else {\r\n      rect.size(expandBtnSize, height).x(width).y(0)\r\n    }\r\n  }\r\n}\r\n\r\nexport default MindMap\r\n", "import Base from './Base'\r\nimport { walk, asyncRun, getNodeIndexInNodeList } from '../utils'\r\n\r\n//  目录组织图\r\nclass CatalogOrganization extends Base {\r\n  //  构造函数\r\n  constructor(opt = {}) {\r\n    super(opt)\r\n  }\r\n\r\n  //  布局\r\n  doLayout(callback) {\r\n    let task = [\r\n      () => {\r\n        this.computedBaseValue()\r\n      },\r\n      () => {\r\n        this.computedLeftTopValue()\r\n      },\r\n      () => {\r\n        this.adjustLeftTopValue()\r\n      },\r\n      () => {\r\n        callback(this.root)\r\n      }\r\n    ]\r\n    asyncRun(task)\r\n  }\r\n\r\n  //  遍历数据计算节点的left、width、height\r\n  computedBaseValue() {\r\n    walk(\r\n      this.renderer.renderTree,\r\n      null,\r\n      (cur, parent, isRoot, layerIndex, index, ancestors) => {\r\n        let newNode = this.createNode(cur, parent, isRoot, layerIndex, index, ancestors)\r\n        // 根节点定位在画布中心位置\r\n        if (isRoot) {\r\n          this.setNodeCenter(newNode)\r\n        } else {\r\n          // 非根节点\r\n          if (parent._node.isRoot) {\r\n            newNode.top =\r\n              parent._node.top +\r\n              parent._node.height +\r\n              this.getMarginX(layerIndex)\r\n          }\r\n        }\r\n        if (!cur.data.expand) {\r\n          return true\r\n        }\r\n      },\r\n      (cur, parent, isRoot, layerIndex) => {\r\n        if (isRoot) {\r\n          let len = cur.data.expand === false ? 0 : cur._node.children.length\r\n          cur._node.childrenAreaWidth = len\r\n            ? cur._node.children.reduce((h, item) => {\r\n                return h + item.width\r\n              }, 0) +\r\n              (len + 1) * this.getMarginX(layerIndex + 1)\r\n            : 0\r\n        }\r\n      },\r\n      true,\r\n      0\r\n    )\r\n  }\r\n\r\n  //  遍历节点树计算节点的left、top\r\n  computedLeftTopValue() {\r\n    walk(\r\n      this.root,\r\n      null,\r\n      (node, parent, isRoot, layerIndex) => {\r\n        if (node.getData('expand') && node.children && node.children.length) {\r\n          let marginX = this.getMarginX(layerIndex + 1)\r\n          let marginY = this.getMarginY(layerIndex + 1)\r\n          if (isRoot) {\r\n            let left = node.left + node.width / 2 - node.childrenAreaWidth / 2\r\n            let totalLeft = left + marginX\r\n            node.children.forEach(cur => {\r\n              cur.left = totalLeft\r\n              totalLeft += cur.width + marginX\r\n            })\r\n          } else {\r\n            let totalTop =\r\n              node.top +\r\n              this.getNodeHeightWithGeneralization(node) +\r\n              marginY +\r\n              (this.getNodeActChildrenLength(node) > 0 ? node.expandBtnSize : 0)\r\n            node.children.forEach(cur => {\r\n              cur.left = node.left + node.width * 0.5\r\n              cur.top = totalTop\r\n              totalTop +=\r\n                this.getNodeHeightWithGeneralization(cur) +\r\n                marginY +\r\n                (this.getNodeActChildrenLength(cur) > 0 ? cur.expandBtnSize : 0)\r\n            })\r\n          }\r\n        }\r\n      },\r\n      null,\r\n      true\r\n    )\r\n  }\r\n\r\n  //  调整节点left、top\r\n  adjustLeftTopValue() {\r\n    walk(\r\n      this.root,\r\n      null,\r\n      (node, parent, isRoot, layerIndex) => {\r\n        if (!node.getData('expand')) {\r\n          return\r\n        }\r\n        // 调整left\r\n        if (parent && parent.isRoot) {\r\n          let areaWidth = this.getNodeAreaWidth(node, true)\r\n          let difference = areaWidth - node.width\r\n          if (difference > 0) {\r\n            this.updateBrothersLeft(node, difference)\r\n          }\r\n        }\r\n        // 调整top\r\n        let len = node.children.length\r\n        if (parent && !parent.isRoot && len > 0) {\r\n          let marginY = this.getMarginY(layerIndex + 1)\r\n          let totalHeight =\r\n            node.children.reduce((h, item) => {\r\n              return (\r\n                h +\r\n                this.getNodeHeightWithGeneralization(item) +\r\n                (this.getNodeActChildrenLength(item) > 0\r\n                  ? item.expandBtnSize\r\n                  : 0)\r\n              )\r\n            }, 0) +\r\n            len * marginY\r\n          this.updateBrothersTop(node, totalHeight)\r\n        }\r\n      },\r\n      (node, parent, isRoot) => {\r\n        if (isRoot) {\r\n          let { right, left } = this.getNodeBoundaries(node, 'h')\r\n          let childrenWidth = right - left\r\n          let offset = node.left - left - (childrenWidth - node.width) / 2\r\n          this.updateChildren(node.children, 'left', offset)\r\n        }\r\n      },\r\n      true\r\n    )\r\n  }\r\n\r\n  //  调整兄弟节点的left\r\n  updateBrothersLeft(node, addWidth) {\r\n    if (node.parent) {\r\n      let childrenList = node.parent.children\r\n      let index = getNodeIndexInNodeList(node, childrenList)\r\n      childrenList.forEach((item, _index) => {\r\n        if (item.hasCustomPosition() || _index <= index) {\r\n          // 适配自定义位置\r\n          return\r\n        }\r\n        item.left += addWidth\r\n        // 同步更新子节点的位置\r\n        if (item.children && item.children.length) {\r\n          this.updateChildren(item.children, 'left', addWidth)\r\n        }\r\n      })\r\n      // 更新父节点的位置\r\n      this.updateBrothersLeft(node.parent, addWidth)\r\n    }\r\n  }\r\n\r\n  //  调整兄弟节点的top\r\n  updateBrothersTop(node, addHeight) {\r\n    if (node.parent && !node.parent.isRoot) {\r\n      let childrenList = node.parent.children\r\n      let index = getNodeIndexInNodeList(node, childrenList)\r\n      childrenList.forEach((item, _index) => {\r\n        if (item.hasCustomPosition()) {\r\n          // 适配自定义位置\r\n          return\r\n        }\r\n        let _offset = 0\r\n        // 下面的节点往下移\r\n        if (_index > index) {\r\n          _offset = addHeight\r\n        }\r\n        item.top += _offset\r\n        // 同步更新子节点的位置\r\n        if (item.children && item.children.length) {\r\n          this.updateChildren(item.children, 'top', _offset)\r\n        }\r\n      })\r\n      // 更新父节点的位置\r\n      this.updateBrothersTop(node.parent, addHeight)\r\n    }\r\n  }\r\n\r\n  //  绘制连线，连接该节点到其子节点\r\n  renderLine(node, lines, style) {\r\n    if (node.children.length <= 0) {\r\n      return []\r\n    }\r\n    let { left, top, width, height, expandBtnSize } = node\r\n    const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n    if (!alwaysShowExpandBtn || notShowExpandBtn) {\r\n      expandBtnSize = 0\r\n    }\r\n    let len = node.children.length\r\n    let marginX = this.getMarginX(node.layerIndex + 1)\r\n    if (node.isRoot) {\r\n      // 根节点\r\n      let x1 = left + width / 2\r\n      let y1 = top + height\r\n      let s1 = marginX * 0.7\r\n      let minx = Infinity\r\n      let maxx = -Infinity\r\n      node.children.forEach((item, index) => {\r\n        let x2 = item.left + item.width / 2\r\n        let y2 = item.top\r\n        if (x2 < minx) {\r\n          minx = x2\r\n        }\r\n        if (x2 > maxx) {\r\n          maxx = x2\r\n        }\r\n        // 节点使用横线风格，需要额外渲染横线\r\n        let nodeUseLineStylePath = this.mindMap.themeConfig.nodeUseLineStyle\r\n          ? ` L ${item.left},${y2} L ${item.left + item.width},${y2}`\r\n          : ''\r\n        let path =\r\n          `M ${x2},${y1 + s1} L ${x2},${y1 + s1 > y2 ? y2 + item.height : y2}` +\r\n          nodeUseLineStylePath\r\n        // 竖线\r\n        this.setLineStyle(style, lines[index], path, item)\r\n      })\r\n      minx = Math.min(minx, x1)\r\n      maxx = Math.max(maxx, x1)\r\n      // 父节点的竖线\r\n      let line1 = this.lineDraw.path()\r\n      node.style.line(line1)\r\n      line1.plot(this.transformPath(`M ${x1},${y1} L ${x1},${y1 + s1}`))\r\n      node._lines.push(line1)\r\n      style && style(line1, node)\r\n      // 水平线\r\n      if (len > 0) {\r\n        let lin2 = this.lineDraw.path()\r\n        node.style.line(lin2)\r\n        lin2.plot(this.transformPath(`M ${minx},${y1 + s1} L ${maxx},${y1 + s1}`))\r\n        node._lines.push(lin2)\r\n        style && style(lin2, node)\r\n      }\r\n    } else {\r\n      // 非根节点\r\n      let y1 = top + height\r\n      let maxy = -Infinity\r\n      let x2 = node.left + node.width * 0.3\r\n      node.children.forEach((item, index) => {\r\n        // 为了适配自定义位置，下面做了各种位置的兼容\r\n        let y2 = item.top + item.height / 2\r\n        if (y2 > maxy) {\r\n          maxy = y2\r\n        }\r\n        // 水平线\r\n        let path = ''\r\n        let _left = item.left\r\n        let _isLeft = item.left + item.width < x2\r\n        let _isXCenter = false\r\n        if (_isLeft) {\r\n          // 水平位置在父节点左边\r\n          _left = item.left + item.width\r\n        } else if (item.left < x2 && item.left + item.width > x2) {\r\n          // 水平位置在父节点之间\r\n          _isXCenter = true\r\n          y2 = item.top\r\n          maxy = y2\r\n        }\r\n        if (y2 > top && y2 < y1) {\r\n          // 自定义位置的情况：垂直位置节点在父节点之间\r\n          path = `M ${\r\n            _isLeft ? node.left : node.left + node.width\r\n          },${y2} L ${_left},${y2}`\r\n        } else if (y2 < y1) {\r\n          // 自定义位置的情况：垂直位置节点在父节点上面\r\n          if (_isXCenter) {\r\n            y2 = item.top + item.height\r\n            _left = x2\r\n          }\r\n          path = `M ${x2},${top} L ${x2},${y2} L ${_left},${y2}`\r\n        } else {\r\n          if (_isXCenter) {\r\n            _left = x2\r\n          }\r\n          path = `M ${x2},${y2} L ${_left},${y2}`\r\n        }\r\n        // 节点使用横线风格，需要额外渲染横线\r\n        let nodeUseLineStylePath = this.mindMap.themeConfig.nodeUseLineStyle\r\n          ? ` L ${_left},${y2 - item.height / 2} L ${_left},${\r\n              y2 + item.height / 2\r\n            }`\r\n          : ''\r\n        path += nodeUseLineStylePath\r\n        this.setLineStyle(style, lines[index], path, item)\r\n      })\r\n      // 竖线\r\n      if (len > 0) {\r\n        let lin2 = this.lineDraw.path()\r\n        expandBtnSize = len > 0 ? expandBtnSize : 0\r\n        node.style.line(lin2)\r\n        if (maxy < y1 + expandBtnSize) {\r\n          lin2.hide()\r\n        } else {\r\n          lin2.plot(\r\n            this.transformPath(`M ${x2},${y1 + expandBtnSize} L ${x2},${maxy}`)\r\n          )\r\n          lin2.show()\r\n        }\r\n        node._lines.push(lin2)\r\n        style && style(lin2, node)\r\n      }\r\n    }\r\n  }\r\n\r\n  //  渲染按钮\r\n  renderExpandBtn(node, btn) {\r\n    let { width, height, expandBtnSize, isRoot } = node\r\n    if (!isRoot) {\r\n      let { translateX, translateY } = btn.transform()\r\n      btn.translate(\r\n        width * 0.3 - expandBtnSize / 2 - translateX,\r\n        height + expandBtnSize / 2 - translateY\r\n      )\r\n    }\r\n  }\r\n\r\n  //  创建概要节点\r\n  renderGeneralization(list) {\r\n    list.forEach(item => {\r\n      let {\r\n        top,\r\n        bottom,\r\n        right,\r\n        generalizationLineMargin,\r\n        generalizationNodeMargin\r\n      } = this.getNodeGeneralizationRenderBoundaries(item, 'h')\r\n      let x1 = right + generalizationLineMargin\r\n      let y1 = top\r\n      let x2 = right + generalizationLineMargin\r\n      let y2 = bottom\r\n      let cx = x1 + 20\r\n      let cy = y1 + (y2 - y1) / 2\r\n      let path = `M ${x1},${y1} Q ${cx},${cy} ${x2},${y2}`\r\n      item.generalizationLine.plot(this.transformPath(path))\r\n      item.generalizationNode.left = right + generalizationNodeMargin\r\n      item.generalizationNode.top =\r\n        top + (bottom - top - item.generalizationNode.height) / 2\r\n    })\r\n  }\r\n\r\n  // 渲染展开收起按钮的隐藏占位元素\r\n  renderExpandBtnRect(rect, expandBtnSize, width, height, node) {\r\n    rect.size(width, expandBtnSize).x(0).y(height)\r\n  }\r\n}\r\n\r\nexport default CatalogOrganization\r\n", "import Base from './Base'\r\nimport { walk, asyncRun, getNodeIndexInNodeList } from '../utils'\r\n\r\n//  组织结构图\r\n// 和逻辑结构图基本一样，只是方向变成向下生长，所以先计算节点的top，后计算节点的left、最后调整节点的left即可\r\nclass OrganizationStructure extends Base {\r\n  //  构造函数\r\n  constructor(opt = {}) {\r\n    super(opt)\r\n  }\r\n\r\n  //  布局\r\n  doLayout(callback) {\r\n    let task = [\r\n      () => {\r\n        this.computedBaseValue()\r\n      },\r\n      () => {\r\n        this.computedLeftValue()\r\n      },\r\n      () => {\r\n        this.adjustLeftValue()\r\n      },\r\n      () => {\r\n        callback(this.root)\r\n      }\r\n    ]\r\n    asyncRun(task)\r\n  }\r\n\r\n  //  遍历数据计算节点的left、width、height\r\n  computedBaseValue() {\r\n    walk(\r\n      this.renderer.renderTree,\r\n      null,\r\n      (cur, parent, isRoot, layerIndex, index, ancestors) => {\r\n        let newNode = this.createNode(\r\n          cur,\r\n          parent,\r\n          isRoot,\r\n          layerIndex,\r\n          index,\r\n          ancestors\r\n        )\r\n        // 根节点定位在画布中心位置\r\n        if (isRoot) {\r\n          this.setNodeCenter(newNode)\r\n        } else {\r\n          // 非根节点\r\n          // 定位到父节点下方\r\n          newNode.top =\r\n            parent._node.top + parent._node.height + this.getMarginX(layerIndex)\r\n        }\r\n        if (!cur.data.expand) {\r\n          return true\r\n        }\r\n      },\r\n      (cur, parent, isRoot, layerIndex) => {\r\n        // 返回时计算节点的areaWidth，也就是子节点所占的宽度之和，包括外边距\r\n        let len = cur.data.expand === false ? 0 : cur._node.children.length\r\n        cur._node.childrenAreaWidth = len\r\n          ? cur._node.children.reduce((h, item) => {\r\n              return h + item.width\r\n            }, 0) +\r\n            (len + 1) * this.getMarginY(layerIndex + 1)\r\n          : 0\r\n\r\n        // 如果存在概要，则和概要的高度取最大值\r\n        let generalizationNodeWidth = cur._node.checkHasGeneralization()\r\n          ? cur._node._generalizationNodeWidth + this.getMarginY(layerIndex + 1)\r\n          : 0\r\n        cur._node.childrenAreaWidth2 = Math.max(\r\n          cur._node.childrenAreaWidth,\r\n          generalizationNodeWidth\r\n        )\r\n      },\r\n      true,\r\n      0\r\n    )\r\n  }\r\n\r\n  //  遍历节点树计算节点的left\r\n  computedLeftValue() {\r\n    walk(\r\n      this.root,\r\n      null,\r\n      (node, parent, isRoot, layerIndex) => {\r\n        if (node.getData('expand') && node.children && node.children.length) {\r\n          let marginX = this.getMarginY(layerIndex + 1)\r\n          // 第一个子节点的left值 = 该节点中心的left值 - 子节点的宽度之和的一半\r\n          let left = node.left + node.width / 2 - node.childrenAreaWidth / 2\r\n          let totalLeft = left + marginX\r\n          node.children.forEach(cur => {\r\n            cur.left = totalLeft\r\n            totalLeft += cur.width + marginX\r\n          })\r\n        }\r\n      },\r\n      null,\r\n      true\r\n    )\r\n  }\r\n\r\n  //  调整节点left\r\n  adjustLeftValue() {\r\n    walk(\r\n      this.root,\r\n      null,\r\n      (node, parent, isRoot, layerIndex) => {\r\n        if (!node.getData('expand')) {\r\n          return\r\n        }\r\n        // 判断子节点所占的宽度之和是否大于该节点自身，大于则需要调整位置\r\n        let difference =\r\n          node.childrenAreaWidth2 -\r\n          this.getMarginY(layerIndex + 1) * 2 -\r\n          node.width\r\n        if (difference > 0) {\r\n          this.updateBrothers(node, difference / 2)\r\n        }\r\n      },\r\n      null,\r\n      true\r\n    )\r\n  }\r\n\r\n  //  更新兄弟节点的left\r\n  updateBrothers(node, addWidth) {\r\n    if (node.parent) {\r\n      let childrenList = node.parent.children\r\n      let index = getNodeIndexInNodeList(node, childrenList)\r\n      childrenList.forEach((item, _index) => {\r\n        if (item.hasCustomPosition()) {\r\n          // 适配自定义位置\r\n          return\r\n        }\r\n        let _offset = 0\r\n        // 上面的节点往上移\r\n        if (_index < index) {\r\n          _offset = -addWidth\r\n        } else if (_index > index) {\r\n          // 下面的节点往下移\r\n          _offset = addWidth\r\n        }\r\n        item.left += _offset\r\n        // 同步更新子节点的位置\r\n        if (item.children && item.children.length) {\r\n          this.updateChildren(item.children, 'left', _offset)\r\n        }\r\n      })\r\n      // 更新父节点的位置\r\n      this.updateBrothers(node.parent, addWidth)\r\n    }\r\n  }\r\n\r\n  //  绘制连线，连接该节点到其子节点\r\n  renderLine(node, lines, style, lineStyle) {\r\n    if (lineStyle === 'curve') {\r\n      this.renderLineCurve(node, lines, style)\r\n    } else if (lineStyle === 'direct') {\r\n      this.renderLineDirect(node, lines, style)\r\n    } else {\r\n      this.renderLineStraight(node, lines, style)\r\n    }\r\n  }\r\n\r\n  //  曲线风格连线\r\n  renderLineCurve(node, lines, style) {\r\n    if (node.children.length <= 0) {\r\n      return []\r\n    }\r\n    let { left, top, width, height, expandBtnSize } = node\r\n    const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n    if (!alwaysShowExpandBtn || notShowExpandBtn) {\r\n      expandBtnSize = 0\r\n    }\r\n    const {\r\n      nodeUseLineStyle,\r\n      rootLineStartPositionKeepSameInCurve,\r\n      rootLineKeepSameInCurve\r\n    } = this.mindMap.themeConfig\r\n    node.children.forEach((item, index) => {\r\n      if (node.layerIndex === 0) {\r\n        expandBtnSize = 0\r\n      }\r\n      let x1 = left + width / 2\r\n      let y1 =\r\n        node.layerIndex === 0 && !rootLineStartPositionKeepSameInCurve\r\n          ? top + height / 2\r\n          : top + height + expandBtnSize\r\n      let x2 = item.left + item.width / 2\r\n      let y2 = item.top\r\n      let path = ''\r\n      // 节点使用横线风格，需要额外渲染横线\r\n      let nodeUseLineStylePath = nodeUseLineStyle\r\n        ? ` L ${item.left},${y2} L ${item.left + item.width},${y2}`\r\n        : ''\r\n      if (node.isRoot && !rootLineKeepSameInCurve) {\r\n        path =\r\n          this.quadraticCurvePath(x1, y1, x2, y2, true) + nodeUseLineStylePath\r\n      } else {\r\n        path = this.cubicBezierPath(x1, y1, x2, y2, true) + nodeUseLineStylePath\r\n      }\r\n      this.setLineStyle(style, lines[index], path, item)\r\n    })\r\n  }\r\n\r\n  //  直连风格\r\n  renderLineDirect(node, lines, style) {\r\n    if (node.children.length <= 0) {\r\n      return []\r\n    }\r\n    let { left, top, width, height } = node\r\n    const { nodeUseLineStyle } = this.mindMap.themeConfig\r\n    let x1 = left + width / 2\r\n    let y1 = top + height\r\n    node.children.forEach((item, index) => {\r\n      let x2 = item.left + item.width / 2\r\n      let y2 = item.top\r\n      // 节点使用横线风格，需要额外渲染横线\r\n      let nodeUseLineStylePath = nodeUseLineStyle\r\n        ? ` L ${item.left},${y2} L ${item.left + item.width},${y2}`\r\n        : ''\r\n      let path = `M ${x1},${y1} L ${x2},${y2}` + nodeUseLineStylePath\r\n      this.setLineStyle(style, lines[index], path, item)\r\n    })\r\n  }\r\n\r\n  //  直线风格连线\r\n  renderLineStraight(node, lines, style) {\r\n    if (node.children.length <= 0) {\r\n      return []\r\n    }\r\n    let { left, top, width, height, expandBtnSize, isRoot } = node\r\n    const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n    if (!alwaysShowExpandBtn || notShowExpandBtn) {\r\n      expandBtnSize = 0\r\n    }\r\n    let x1 = left + width / 2\r\n    let y1 = top + height\r\n    let marginX = this.getMarginX(node.layerIndex + 1)\r\n    let s1 = marginX * 0.7\r\n    let minx = Infinity\r\n    let maxx = -Infinity\r\n    let len = node.children.length\r\n    node.children.forEach((item, index) => {\r\n      let x2 = item.left + item.width / 2\r\n      let y2 = y1 + s1 > item.top ? item.top + item.height : item.top\r\n      if (x2 < minx) {\r\n        minx = x2\r\n      }\r\n      if (x2 > maxx) {\r\n        maxx = x2\r\n      }\r\n      // 节点使用横线风格，需要额外渲染横线\r\n      let nodeUseLineStylePath = this.mindMap.themeConfig.nodeUseLineStyle\r\n        ? ` L ${item.left},${y2} L ${item.left + item.width},${y2}`\r\n        : ''\r\n      let path = `M ${x2},${y1 + s1} L ${x2},${y2}` + nodeUseLineStylePath\r\n      this.setLineStyle(style, lines[index], path, item)\r\n    })\r\n    minx = Math.min(x1, minx)\r\n    maxx = Math.max(x1, maxx)\r\n    // 父节点的竖线\r\n    let line1 = this.lineDraw.path()\r\n    node.style.line(line1)\r\n    expandBtnSize = len > 0 && !isRoot ? expandBtnSize : 0\r\n    line1.plot(\r\n      this.transformPath(`M ${x1},${y1 + expandBtnSize} L ${x1},${y1 + s1}`)\r\n    )\r\n    node._lines.push(line1)\r\n    style && style(line1, node)\r\n    // 水平线\r\n    if (len > 0) {\r\n      let lin2 = this.lineDraw.path()\r\n      node.style.line(lin2)\r\n      lin2.plot(this.transformPath(`M ${minx},${y1 + s1} L ${maxx},${y1 + s1}`))\r\n      node._lines.push(lin2)\r\n      style && style(lin2, node)\r\n    }\r\n  }\r\n\r\n  //  渲染按钮\r\n  renderExpandBtn(node, btn) {\r\n    let { width, height, expandBtnSize } = node\r\n    let { translateX, translateY } = btn.transform()\r\n    btn.translate(\r\n      width / 2 - expandBtnSize / 2 - translateX,\r\n      height + expandBtnSize / 2 - translateY\r\n    )\r\n  }\r\n\r\n  //  创建概要节点\r\n  renderGeneralization(list) {\r\n    list.forEach(item => {\r\n      let {\r\n        bottom,\r\n        left,\r\n        right,\r\n        generalizationLineMargin,\r\n        generalizationNodeMargin\r\n      } = this.getNodeGeneralizationRenderBoundaries(item, 'v')\r\n      let x1 = left\r\n      let y1 = bottom + generalizationLineMargin\r\n      let x2 = right\r\n      let y2 = bottom + generalizationLineMargin\r\n      let cx = x1 + (x2 - x1) / 2\r\n      let cy = y1 + 20\r\n      let path = `M ${x1},${y1} Q ${cx},${cy} ${x2},${y2}`\r\n      item.generalizationLine.plot(this.transformPath(path))\r\n      item.generalizationNode.top = bottom + generalizationNodeMargin\r\n      item.generalizationNode.left =\r\n        left + (right - left - item.generalizationNode.width) / 2\r\n    })\r\n  }\r\n\r\n  // 渲染展开收起按钮的隐藏占位元素\r\n  renderExpandBtnRect(rect, expandBtnSize, width, height, node) {\r\n    rect.size(width, expandBtnSize).x(0).y(height)\r\n  }\r\n}\r\n\r\nexport default OrganizationStructure\r\n", "import Base from './Base'\r\nimport { walk, asyncRun, getNodeIndexInNodeList } from '../utils'\r\nimport { CONSTANTS } from '../constants/constant'\r\n\r\n//  时间轴\r\nclass Timeline extends Base {\r\n  //  构造函数\r\n  constructor(opt = {}, layout) {\r\n    super(opt)\r\n    this.layout = layout\r\n  }\r\n\r\n  //  布局\r\n  doLayout(callback) {\r\n    let task = [\r\n      () => {\r\n        this.computedBaseValue()\r\n      },\r\n      () => {\r\n        this.computedLeftTopValue()\r\n      },\r\n      () => {\r\n        this.adjustLeftTopValue()\r\n      },\r\n      () => {\r\n        callback(this.root)\r\n      }\r\n    ]\r\n    asyncRun(task)\r\n  }\r\n\r\n  //  遍历数据创建节点、计算根节点的位置，计算根节点的子节点的top值\r\n  computedBaseValue() {\r\n    walk(\r\n      this.renderer.renderTree,\r\n      null,\r\n      (cur, parent, isRoot, layerIndex, index, ancestors) => {\r\n        let newNode = this.createNode(cur, parent, isRoot, layerIndex, index, ancestors)\r\n        // 根节点定位在画布中心位置\r\n        if (isRoot) {\r\n          this.setNodeCenter(newNode)\r\n        } else {\r\n          // 非根节点\r\n          // 时间轴2类型需要交替显示\r\n          if (this.layout === CONSTANTS.LAYOUT.TIMELINE2) {\r\n            // 三级及以下节点以上级为准\r\n            if (parent._node.dir) {\r\n              newNode.dir = parent._node.dir\r\n            } else {\r\n              // 节点生长方向\r\n              newNode.dir =\r\n                index % 2 === 0\r\n                  ? CONSTANTS.LAYOUT_GROW_DIR.BOTTOM\r\n                  : CONSTANTS.LAYOUT_GROW_DIR.TOP\r\n            }\r\n          } else {\r\n            newNode.dir = ''\r\n          }\r\n          if (parent._node.isRoot) {\r\n            newNode.top =\r\n              parent._node.top +\r\n              (cur._node.height > parent._node.height\r\n                ? -(cur._node.height - parent._node.height) / 2\r\n                : (parent._node.height - cur._node.height) / 2)\r\n          }\r\n        }\r\n        if (!cur.data.expand) {\r\n          return true\r\n        }\r\n      },\r\n      null,\r\n      true,\r\n      0\r\n    )\r\n  }\r\n\r\n  //  遍历节点树计算节点的left、top\r\n  computedLeftTopValue() {\r\n    walk(\r\n      this.root,\r\n      null,\r\n      (node, parent, isRoot, layerIndex, index) => {\r\n        if (node.getData('expand') && node.children && node.children.length) {\r\n          let marginX = this.getMarginX(layerIndex + 1)\r\n          let marginY = this.getMarginY(layerIndex + 1)\r\n          if (isRoot) {\r\n            let left = node.left + node.width\r\n            let totalLeft = left + marginX\r\n            node.children.forEach(cur => {\r\n              cur.left = totalLeft\r\n              totalLeft += cur.width + marginX\r\n            })\r\n          } else {\r\n            let totalTop =\r\n              node.top +\r\n              node.height +\r\n              marginY +\r\n              (this.getNodeActChildrenLength(node) > 0 ? node.expandBtnSize : 0)\r\n            node.children.forEach(cur => {\r\n              cur.left = node.left + node.width * 0.5\r\n              cur.top = totalTop\r\n              totalTop +=\r\n                cur.height +\r\n                marginY +\r\n                (this.getNodeActChildrenLength(cur) > 0 ? cur.expandBtnSize : 0)\r\n            })\r\n          }\r\n        }\r\n      },\r\n      null,\r\n      true\r\n    )\r\n  }\r\n\r\n  //  调整节点left、top\r\n  adjustLeftTopValue() {\r\n    walk(\r\n      this.root,\r\n      null,\r\n      (node, parent, isRoot, layerIndex) => {\r\n        if (!node.getData('expand')) {\r\n          return\r\n        }\r\n        // 调整left\r\n        if (node.isRoot) {\r\n          this.updateBrothersLeft(node)\r\n        }\r\n        // 调整top\r\n        let len = node.children.length\r\n        if (parent && !parent.isRoot && len > 0) {\r\n          let marginY = this.getMarginY(layerIndex + 1)\r\n          let totalHeight =\r\n            node.children.reduce((h, item) => {\r\n              return (\r\n                h +\r\n                item.height +\r\n                (this.getNodeActChildrenLength(item) > 0\r\n                  ? item.expandBtnSize\r\n                  : 0)\r\n              )\r\n            }, 0) +\r\n            len * marginY\r\n          this.updateBrothersTop(node, totalHeight)\r\n        }\r\n      },\r\n      (node, parent, isRoot, layerIndex) => {\r\n        if (\r\n          parent &&\r\n          parent.isRoot &&\r\n          node.dir === CONSTANTS.LAYOUT_GROW_DIR.TOP\r\n        ) {\r\n          // 遍历二级节点的子节点\r\n          node.children.forEach(item => {\r\n            let totalHeight = this.getNodeAreaHeight(item)\r\n            let _top = item.top\r\n            item.top =\r\n              node.top - (item.top - node.top) - totalHeight + node.height\r\n            this.updateChildren(item.children, 'top', item.top - _top)\r\n          })\r\n        }\r\n      },\r\n      true\r\n    )\r\n  }\r\n\r\n  //  递归计算节点的宽度\r\n  getNodeAreaHeight(node) {\r\n    let totalHeight = 0\r\n    let loop = node => {\r\n      totalHeight +=\r\n        node.height +\r\n        (this.getNodeActChildrenLength(node) > 0 ? node.expandBtnSize : 0) +\r\n        this.getMarginY(node.layerIndex)\r\n      if (node.children.length) {\r\n        node.children.forEach(item => {\r\n          loop(item)\r\n        })\r\n      }\r\n    }\r\n    loop(node)\r\n    return totalHeight\r\n  }\r\n\r\n  //  调整兄弟节点的left\r\n  updateBrothersLeft(node) {\r\n    let childrenList = node.children\r\n    let totalAddWidth = 0\r\n    childrenList.forEach(item => {\r\n      item.left += totalAddWidth\r\n      if (item.children && item.children.length) {\r\n        this.updateChildren(item.children, 'left', totalAddWidth)\r\n      }\r\n      // let areaWidth = this.getNodeAreaWidth(item)\r\n      let { left, right } = this.getNodeBoundaries(item, 'h')\r\n      let areaWidth = right - left\r\n      let difference = areaWidth - item.width\r\n      if (difference > 0) {\r\n        totalAddWidth += difference\r\n      }\r\n    })\r\n  }\r\n\r\n  //  调整兄弟节点的top\r\n  updateBrothersTop(node, addHeight) {\r\n    if (node.parent && !node.parent.isRoot) {\r\n      let childrenList = node.parent.children\r\n      let index = getNodeIndexInNodeList(node, childrenList)\r\n      childrenList.forEach((item, _index) => {\r\n        if (item.hasCustomPosition()) {\r\n          // 适配自定义位置\r\n          return\r\n        }\r\n        let _offset = 0\r\n        // 下面的节点往下移\r\n        if (_index > index) {\r\n          _offset = addHeight\r\n        }\r\n        item.top += _offset\r\n        // 同步更新子节点的位置\r\n        if (item.children && item.children.length) {\r\n          this.updateChildren(item.children, 'top', _offset)\r\n        }\r\n      })\r\n      // 更新父节点的位置\r\n      this.updateBrothersTop(node.parent, addHeight)\r\n    }\r\n  }\r\n\r\n  //  绘制连线，连接该节点到其子节点\r\n  renderLine(node, lines, style) {\r\n    if (node.children.length <= 0) {\r\n      return []\r\n    }\r\n    let { left, top, width, height, expandBtnSize } = node\r\n    const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n    if (!alwaysShowExpandBtn || notShowExpandBtn) {\r\n      expandBtnSize = 0\r\n    }\r\n    let len = node.children.length\r\n    if (node.isRoot) {\r\n      // 当前节点是根节点\r\n      let prevBother = node\r\n      // 根节点的子节点是和根节点同一水平线排列\r\n      node.children.forEach((item, index) => {\r\n        let x1 = prevBother.left + prevBother.width\r\n        let x2 = item.left\r\n        let y = node.top + node.height / 2\r\n        let path = `M ${x1},${y} L ${x2},${y}`\r\n        this.setLineStyle(style, lines[index], path, item)\r\n        prevBother = item\r\n      })\r\n    } else {\r\n      // 当前节点为非根节点\r\n      let maxy = -Infinity\r\n      let miny = Infinity\r\n      let x = node.left + node.width * 0.3\r\n      node.children.forEach((item, index) => {\r\n        let y = item.top + item.height / 2\r\n        if (y > maxy) {\r\n          maxy = y\r\n        }\r\n        if (y < miny) {\r\n          miny = y\r\n        }\r\n        // 水平线\r\n        let path = `M ${x},${y} L ${item.left},${y}`\r\n        this.setLineStyle(style, lines[index], path, item)\r\n      })\r\n      // 竖线\r\n      if (len > 0) {\r\n        let line = this.lineDraw.path()\r\n        expandBtnSize = len > 0 ? expandBtnSize : 0\r\n        if (\r\n          node.parent &&\r\n          node.parent.isRoot &&\r\n          node.dir === CONSTANTS.LAYOUT_GROW_DIR.TOP\r\n        ) {\r\n          line.plot(this.transformPath(`M ${x},${top} L ${x},${miny}`))\r\n        } else {\r\n          line.plot(\r\n            this.transformPath(\r\n              `M ${x},${top + height + expandBtnSize} L ${x},${maxy}`\r\n            )\r\n          )\r\n        }\r\n        node.style.line(line)\r\n        node._lines.push(line)\r\n        style && style(line, node)\r\n      }\r\n    }\r\n  }\r\n\r\n  //  渲染按钮\r\n  renderExpandBtn(node, btn) {\r\n    let { width, height, expandBtnSize, isRoot } = node\r\n    if (!isRoot) {\r\n      let { translateX, translateY } = btn.transform()\r\n      if (\r\n        node.parent &&\r\n        node.parent.isRoot &&\r\n        node.dir === CONSTANTS.LAYOUT_GROW_DIR.TOP\r\n      ) {\r\n        btn.translate(\r\n          width * 0.3 - expandBtnSize / 2 - translateX,\r\n          -expandBtnSize / 2 - translateY\r\n        )\r\n      } else {\r\n        btn.translate(\r\n          width * 0.3 - expandBtnSize / 2 - translateX,\r\n          height + expandBtnSize / 2 - translateY\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  //  创建概要节点\r\n  renderGeneralization(list) {\r\n    list.forEach(item => {\r\n      let {\r\n        top,\r\n        bottom,\r\n        right,\r\n        generalizationLineMargin,\r\n        generalizationNodeMargin\r\n      } = this.getNodeGeneralizationRenderBoundaries(item, 'h')\r\n      let x1 = right + generalizationLineMargin\r\n      let y1 = top\r\n      let x2 = right + generalizationLineMargin\r\n      let y2 = bottom\r\n      let cx = x1 + 20\r\n      let cy = y1 + (y2 - y1) / 2\r\n      let path = `M ${x1},${y1} Q ${cx},${cy} ${x2},${y2}`\r\n      item.generalizationLine.plot(this.transformPath(path))\r\n      item.generalizationNode.left = right + generalizationNodeMargin\r\n      item.generalizationNode.top =\r\n        top + (bottom - top - item.generalizationNode.height) / 2\r\n    })\r\n  }\r\n\r\n  // 渲染展开收起按钮的隐藏占位元素\r\n  renderExpandBtnRect(rect, expandBtnSize, width, height, node) {\r\n    if (this.layout === CONSTANTS.LAYOUT.TIMELINE) {\r\n      rect.size(width, expandBtnSize).x(0).y(height)\r\n    } else {\r\n      let dir = ''\r\n      if (node.dir === CONSTANTS.LAYOUT_GROW_DIR.TOP) {\r\n        dir =\r\n          node.layerIndex === 1\r\n            ? CONSTANTS.LAYOUT_GROW_DIR.TOP\r\n            : CONSTANTS.LAYOUT_GROW_DIR.BOTTOM\r\n      } else {\r\n        dir = CONSTANTS.LAYOUT_GROW_DIR.BOTTOM\r\n      }\r\n      if (dir === CONSTANTS.LAYOUT_GROW_DIR.TOP) {\r\n        rect.size(width, expandBtnSize).x(0).y(-expandBtnSize)\r\n      } else {\r\n        rect.size(width, expandBtnSize).x(0).y(height)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Timeline\r\n", "import Base from './Base'\r\nimport { walk, asyncRun, getNodeIndexInNodeList } from '../utils'\r\nimport { CONSTANTS } from '../constants/constant'\r\n\r\n//  竖向时间轴\r\nclass VerticalTimeline extends Base {\r\n  //  构造函数\r\n  constructor(opt = {}, layout) {\r\n    super(opt)\r\n    this.layout = layout\r\n  }\r\n\r\n  //  布局\r\n  doLayout(callback) {\r\n    let task = [\r\n      () => {\r\n        this.computedBaseValue()\r\n      },\r\n      () => {\r\n        this.computedTopValue()\r\n      },\r\n      () => {\r\n        this.adjustLeftTopValue()\r\n      },\r\n      () => {\r\n        callback(this.root)\r\n      }\r\n    ]\r\n    asyncRun(task)\r\n  }\r\n\r\n  //  遍历数据创建节点、计算根节点的位置，计算根节点的子节点的top值\r\n  computedBaseValue() {\r\n    walk(\r\n      this.renderer.renderTree,\r\n      null,\r\n      (cur, parent, isRoot, layerIndex, index, ancestors) => {\r\n        let newNode = this.createNode(cur, parent, isRoot, layerIndex, index, ancestors)\r\n        // 根节点定位在画布中心位置\r\n        if (isRoot) {\r\n          this.setNodeCenter(newNode)\r\n        } else {\r\n          // 非根节点\r\n          // 节点生长方向\r\n          // 三级及以下节点以上级为准\r\n          if (parent._node.dir) {\r\n            newNode.dir = parent._node.dir\r\n          } else {\r\n            newNode.dir =\r\n              index % 2 === 0\r\n                ? CONSTANTS.LAYOUT_GROW_DIR.RIGHT\r\n                : CONSTANTS.LAYOUT_GROW_DIR.LEFT\r\n          }\r\n          // 定位二级节点的left\r\n          if (parent._node.isRoot) {\r\n            newNode.left =\r\n              parent._node.left +\r\n              (cur._node.width > parent._node.width\r\n                ? -(cur._node.width - parent._node.width) / 2\r\n                : (parent._node.width - cur._node.width) / 2)\r\n          } else {\r\n            newNode.left =\r\n              newNode.dir === CONSTANTS.LAYOUT_GROW_DIR.RIGHT\r\n                ? parent._node.left +\r\n                  parent._node.width +\r\n                  this.getMarginX(layerIndex)\r\n                : parent._node.left -\r\n                  this.getMarginX(layerIndex) -\r\n                  newNode.width\r\n          }\r\n        }\r\n        if (!cur.data.expand) {\r\n          return true\r\n        }\r\n      },\r\n      (cur, parent, isRoot, layerIndex) => {\r\n        // 返回时计算节点的areaHeight，也就是子节点所占的高度之和，包括外边距\r\n        if (isRoot) {\r\n          return\r\n        }\r\n        let len = cur.data.expand === false ? 0 : cur._node.children.length\r\n        cur._node.childrenAreaHeight = len\r\n          ? cur._node.children.reduce((h, item) => {\r\n              return h + item.height\r\n            }, 0) +\r\n            (len + 1) * this.getMarginY(layerIndex + 1)\r\n          : 0\r\n      },\r\n      true,\r\n      0\r\n    )\r\n  }\r\n\r\n  //  遍历节点树计算节点的top\r\n  computedTopValue() {\r\n    walk(\r\n      this.root,\r\n      null,\r\n      (node, parent, isRoot, layerIndex, index) => {\r\n        if (node.getData('expand') && node.children && node.children.length) {\r\n          let marginY = this.getMarginY(layerIndex + 1)\r\n          // 定位二级节点的top\r\n          if (isRoot) {\r\n            let top = node.top + node.height\r\n            let totalTop = top + marginY\r\n            node.children.forEach(cur => {\r\n              cur.top = totalTop\r\n              totalTop += cur.height + marginY\r\n            })\r\n          } else {\r\n            // 定位三级及以下节点的top\r\n            let marginY = this.getMarginY(layerIndex + 1)\r\n            let baseTop = node.top + node.height / 2 + marginY\r\n            // 第一个子节点的top值 = 该节点中心的top值 - 子节点的高度之和的一半\r\n            let totalTop = baseTop - node.childrenAreaHeight / 2\r\n            node.children.forEach(cur => {\r\n              cur.top = totalTop\r\n              totalTop += cur.height + marginY\r\n            })\r\n          }\r\n        }\r\n      },\r\n      null,\r\n      true\r\n    )\r\n  }\r\n\r\n  //  调整节点left、top\r\n  adjustLeftTopValue() {\r\n    walk(\r\n      this.root,\r\n      null,\r\n      (node, parent, isRoot, layerIndex) => {\r\n        if (!node.getData('expand')) {\r\n          return\r\n        }\r\n        if (isRoot) return\r\n        // 判断子节点所占的高度之和是否大于该节点自身，大于则需要调整位置\r\n        let base = this.getMarginY(layerIndex + 1) * 2 + node.height\r\n        let difference = node.childrenAreaHeight - base\r\n        if (difference > 0) {\r\n          this.updateBrothers(node, difference / 2)\r\n        }\r\n      },\r\n      null,\r\n      true\r\n    )\r\n  }\r\n\r\n  //  更新兄弟节点的top\r\n  updateBrothers(node, addHeight) {\r\n    if (node.parent) {\r\n      let childrenList = node.parent.children\r\n      let index = getNodeIndexInNodeList(node, childrenList)\r\n      childrenList.forEach((item, _index) => {\r\n        // 自定义节点位置\r\n        if (item.hasCustomPosition()) return\r\n        // 三级或三级以下节点自身位置不需要动\r\n        if (!node.parent.isRoot && item.uid === node.uid) return\r\n        let _offset = 0\r\n        // 二级节点上面的兄弟节点不需要移动，自身需要往下移动\r\n        if (node.parent.isRoot) {\r\n          // 上面的节点不用移\r\n          if (_index < index) {\r\n            _offset = 0\r\n          } else if (_index > index) {\r\n            // 下面的节点往下移\r\n            _offset = addHeight * 2\r\n          } else {\r\n            // 自身也要移动\r\n            _offset = addHeight\r\n          }\r\n        } else {\r\n          // 三级或三级以下节点两侧的兄弟节点向两侧移动\r\n          // 上面的节点往上移\r\n          if (_index < index) {\r\n            _offset = -addHeight\r\n          } else if (_index > index) {\r\n            // 下面的节点往下移\r\n            _offset = addHeight\r\n          }\r\n        }\r\n        item.top += _offset\r\n        // 同步更新子节点的位置\r\n        if (item.children && item.children.length) {\r\n          this.updateChildren(item.children, 'top', _offset)\r\n        }\r\n      })\r\n      // 更新父节点的位置\r\n      this.updateBrothers(node.parent, addHeight)\r\n    }\r\n  }\r\n\r\n  //  调整兄弟节点的top\r\n  updateBrothersTop(node, addHeight) {\r\n    if (node.parent && !node.parent.isRoot) {\r\n      let childrenList = node.parent.children\r\n      let index = getNodeIndexInNodeList(node, childrenList)\r\n      childrenList.forEach((item, _index) => {\r\n        if (item.hasCustomPosition()) {\r\n          // 适配自定义位置\r\n          return\r\n        }\r\n        let _offset = 0\r\n        // 下面的节点往下移\r\n        if (_index > index) {\r\n          _offset = addHeight\r\n        }\r\n        item.top += _offset\r\n        // 同步更新子节点的位置\r\n        if (item.children && item.children.length) {\r\n          this.updateChildren(item.children, 'top', _offset)\r\n        }\r\n      })\r\n      // 更新父节点的位置\r\n      this.updateBrothersTop(node.parent, addHeight)\r\n    }\r\n  }\r\n\r\n  //  绘制连线，连接该节点到其子节点\r\n  renderLine(node, lines, style, lineStyle) {\r\n    if (lineStyle === 'curve') {\r\n      this.renderLineCurve(node, lines, style)\r\n    } else if (lineStyle === 'direct') {\r\n      this.renderLineDirect(node, lines, style)\r\n    } else {\r\n      this.renderLineStraight(node, lines, style)\r\n    }\r\n  }\r\n\r\n  // 直线连接\r\n  renderLineStraight(node, lines, style) {\r\n    if (node.children.length <= 0) {\r\n      return []\r\n    }\r\n    let { expandBtnSize } = node\r\n    const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n    if (!alwaysShowExpandBtn || notShowExpandBtn) {\r\n      expandBtnSize = 0\r\n    }\r\n    if (node.isRoot) {\r\n      // 当前节点是根节点\r\n      let prevBother = node\r\n      // 根节点的子节点是和根节点同一水平线排列\r\n      node.children.forEach((item, index) => {\r\n        let y1 = prevBother.top + prevBother.height\r\n        let y2 = item.top\r\n        let x = node.left + node.width / 2\r\n        let path = `M ${x},${y1} L ${x},${y2}`\r\n        this.setLineStyle(style, lines[index], path, item)\r\n        prevBother = item\r\n      })\r\n    } else {\r\n      // 当前节点为非根节点\r\n      if (node.dir === CONSTANTS.LAYOUT_GROW_DIR.RIGHT) {\r\n        let nodeRight = node.left + node.width\r\n        let nodeYCenter = node.top + node.height / 2\r\n        let marginX = this.getMarginX(node.layerIndex + 1)\r\n        let offset = (marginX - expandBtnSize) * 0.6\r\n        node.children.forEach((item, index) => {\r\n          let itemLeft = item.left\r\n          let itemYCenter = item.top + item.height / 2\r\n          let path = this.createFoldLine([\r\n            [nodeRight, nodeYCenter],\r\n            [nodeRight + offset, nodeYCenter],\r\n            [nodeRight + offset, itemYCenter],\r\n            [itemLeft, itemYCenter]\r\n          ])\r\n          this.setLineStyle(style, lines[index], path, item)\r\n        })\r\n      } else {\r\n        let nodeLeft = node.left\r\n        let nodeYCenter = node.top + node.height / 2\r\n        let marginX = this.getMarginX(node.layerIndex + 1)\r\n        let offset = (marginX - expandBtnSize) * 0.6\r\n        node.children.forEach((item, index) => {\r\n          let itemRight = item.left + item.width\r\n          let itemYCenter = item.top + item.height / 2\r\n          let path = this.createFoldLine([\r\n            [nodeLeft, nodeYCenter],\r\n            [nodeLeft - offset, nodeYCenter],\r\n            [nodeLeft - offset, itemYCenter],\r\n            [itemRight, itemYCenter]\r\n          ])\r\n          this.setLineStyle(style, lines[index], path, item)\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  // 直连\r\n  renderLineDirect(node, lines, style) {\r\n    if (node.children.length <= 0) {\r\n      return []\r\n    }\r\n    let { left, top, width, height, expandBtnSize } = node\r\n    const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n    if (!alwaysShowExpandBtn || notShowExpandBtn) {\r\n      expandBtnSize = 0\r\n    }\r\n    node.children.forEach((item, index) => {\r\n      if (node.isRoot) {\r\n        let prevBother = node\r\n        // 根节点的子节点是和根节点同一水平线排列\r\n        node.children.forEach((item, index) => {\r\n          let y1 = prevBother.top + prevBother.height\r\n          let y2 = item.top\r\n          let x = node.left + node.width / 2\r\n          let path = `M ${x},${y1} L ${x},${y2}`\r\n          this.setLineStyle(style, lines[index], path, item)\r\n          prevBother = item\r\n        })\r\n      } else {\r\n        let x1 =\r\n          item.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT\r\n            ? left - expandBtnSize\r\n            : left + width + expandBtnSize\r\n        let y1 = top + height / 2\r\n        let x2 =\r\n          item.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT\r\n            ? item.left + item.width\r\n            : item.left\r\n        let y2 = item.top + item.height / 2\r\n        let path = `M ${x1},${y1} L ${x2},${y2}`\r\n        this.setLineStyle(style, lines[index], path, item)\r\n      }\r\n    })\r\n  }\r\n\r\n  //  曲线风格连线\r\n  renderLineCurve(node, lines, style) {\r\n    if (node.children.length <= 0) {\r\n      return []\r\n    }\r\n    let { left, top, width, height, expandBtnSize } = node\r\n    const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n    if (!alwaysShowExpandBtn || notShowExpandBtn) {\r\n      expandBtnSize = 0\r\n    }\r\n    node.children.forEach((item, index) => {\r\n      if (node.isRoot) {\r\n        let prevBother = node\r\n        // 根节点的子节点是和根节点同一水平线排列\r\n        node.children.forEach((item, index) => {\r\n          let y1 = prevBother.top + prevBother.height\r\n          let y2 = item.top\r\n          let x = node.left + node.width / 2\r\n          let path = `M ${x},${y1} L ${x},${y2}`\r\n          this.setLineStyle(style, lines[index], path, item)\r\n          prevBother = item\r\n        })\r\n      } else {\r\n        let x1 =\r\n          item.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT\r\n            ? left - expandBtnSize\r\n            : left + width + expandBtnSize\r\n        let y1 = top + height / 2\r\n        let x2 =\r\n          item.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT\r\n            ? item.left + item.width\r\n            : item.left\r\n        let y2 = item.top + item.height / 2\r\n        let path = this.cubicBezierPath(x1, y1, x2, y2)\r\n        this.setLineStyle(style, lines[index], path, item)\r\n      }\r\n    })\r\n  }\r\n\r\n  //  渲染按钮\r\n  renderExpandBtn(node, btn) {\r\n    let { width, height, expandBtnSize, isRoot } = node\r\n    if (!isRoot) {\r\n      let { translateX, translateY } = btn.transform()\r\n      if (node.dir === CONSTANTS.LAYOUT_GROW_DIR.RIGHT) {\r\n        btn.translate(width - translateX, height / 2 - translateY)\r\n      } else {\r\n        btn.translate(-expandBtnSize - translateX, height / 2 - translateY)\r\n      }\r\n    }\r\n  }\r\n\r\n  //  创建概要节点\r\n  renderGeneralization(list) {\r\n    list.forEach(item => {\r\n      let isLeft = item.node.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT\r\n      let {\r\n        top,\r\n        bottom,\r\n        left,\r\n        right,\r\n        generalizationLineMargin,\r\n        generalizationNodeMargin\r\n      } = this.getNodeGeneralizationRenderBoundaries(item, 'h')\r\n      let x = isLeft\r\n        ? left - generalizationLineMargin\r\n        : right + generalizationLineMargin\r\n      let x1 = x\r\n      let y1 = top\r\n      let x2 = x\r\n      let y2 = bottom\r\n      let cx = x1 + (isLeft ? -20 : 20)\r\n      let cy = y1 + (y2 - y1) / 2\r\n      let path = `M ${x1},${y1} Q ${cx},${cy} ${x2},${y2}`\r\n      item.generalizationLine.plot(this.transformPath(path))\r\n      item.generalizationNode.left =\r\n        x +\r\n        (isLeft ? -generalizationNodeMargin : generalizationNodeMargin) -\r\n        (isLeft ? item.generalizationNode.width : 0)\r\n      item.generalizationNode.top =\r\n        top + (bottom - top - item.generalizationNode.height) / 2\r\n    })\r\n  }\r\n\r\n  // 渲染展开收起按钮的隐藏占位元素\r\n  renderExpandBtnRect(rect, expandBtnSize, width, height, node) {\r\n    if (node.dir === CONSTANTS.LAYOUT_GROW_DIR.LEFT) {\r\n      rect.size(expandBtnSize, height).x(-expandBtnSize).y(0)\r\n    } else {\r\n      rect.size(expandBtnSize, height).x(width).y(0)\r\n    }\r\n  }\r\n}\r\n\r\nexport default VerticalTimeline\r\n", "import { degToRad } from '../utils/'\r\n\r\nexport default {\r\n  top: {\r\n    renderExpandBtn({\r\n      node,\r\n      btn,\r\n      expandBtnSize,\r\n      translateX,\r\n      translateY,\r\n      width,\r\n      height\r\n    }) {\r\n      if (node.parent && node.parent.isRoot) {\r\n        btn.translate(\r\n          width * 0.3 - expandBtnSize / 2 - translateX,\r\n          -expandBtnSize / 2 - translateY\r\n        )\r\n      } else {\r\n        btn.translate(\r\n          width * 0.3 - expandBtnSize / 2 - translateX,\r\n          height + expandBtnSize / 2 - translateY\r\n        )\r\n      }\r\n    },\r\n    renderLine({\r\n      node,\r\n      line,\r\n      top,\r\n      x,\r\n      lineLength,\r\n      height,\r\n      expandBtnSize,\r\n      maxy,\r\n      ctx\r\n    }) {\r\n      if (node.parent && node.parent.isRoot) {\r\n        line.plot(\r\n          ctx.transformPath(\r\n            `M ${x},${top} L ${x + lineLength},${\r\n              top - Math.tan(degToRad(ctx.mindMap.opt.fishboneDeg)) * lineLength\r\n            }`\r\n          )\r\n        )\r\n      } else {\r\n        line.plot(\r\n          ctx.transformPath(\r\n            `M ${x},${top + height + expandBtnSize} L ${x},${maxy}`\r\n          )\r\n        )\r\n      }\r\n    },\r\n    computedLeftTopValue({ layerIndex, node, ctx }) {\r\n      if (layerIndex >= 1 && node.children) {\r\n        // 遍历三级及以下节点的子节点\r\n        let marginY = ctx.getMarginY(layerIndex + 1)\r\n        let startLeft = node.left + node.width * ctx.childIndent\r\n        let totalTop =\r\n          node.top +\r\n          node.height +\r\n          (ctx.getNodeActChildrenLength(node) > 0 ? node.expandBtnSize : 0) +\r\n          marginY\r\n        node.children.forEach(item => {\r\n          item.left = startLeft\r\n          item.top += totalTop\r\n          totalTop +=\r\n            item.height +\r\n            (ctx.getNodeActChildrenLength(item) > 0 ? item.expandBtnSize : 0) +\r\n            marginY\r\n        })\r\n      }\r\n    },\r\n    adjustLeftTopValueBefore({ node, parent, ctx, layerIndex }) {\r\n      // 调整top\r\n      let len = node.children.length\r\n      let marginY = ctx.getMarginY(layerIndex + 1)\r\n      // 调整三级及以下节点的top\r\n      if (parent && !parent.isRoot && len > 0) {\r\n        let totalHeight = node.children.reduce((h, item) => {\r\n          return (\r\n            h +\r\n            item.height +\r\n            (ctx.getNodeActChildrenLength(item) > 0 ? item.expandBtnSize : 0) +\r\n            marginY\r\n          )\r\n        }, 0)\r\n        ctx.updateBrothersTop(node, totalHeight)\r\n      }\r\n    },\r\n    adjustLeftTopValueAfter({ parent, node, ctx }) {\r\n      // 将二级节点的子节点移到上方\r\n      if (parent && parent.isRoot) {\r\n        // 遍历二级节点的子节点\r\n        let marginY = ctx.getMarginY(node.layerIndex + 1)\r\n        let totalHeight = node.expandBtnSize + marginY\r\n        node.children.forEach(item => {\r\n          // 调整top\r\n          let nodeTotalHeight = ctx.getNodeAreaHeight(item)\r\n          let _top = item.top\r\n          let _left = item.left\r\n          item.top =\r\n            node.top - (item.top - node.top) - nodeTotalHeight + node.height\r\n          // 调整left\r\n          item.left =\r\n            node.left +\r\n            node.width * ctx.indent +\r\n            (nodeTotalHeight + totalHeight) /\r\n              Math.tan(degToRad(ctx.mindMap.opt.fishboneDeg))\r\n          totalHeight += nodeTotalHeight\r\n          // 同步更新后代节点\r\n          ctx.updateChildrenPro(item.children, {\r\n            top: item.top - _top,\r\n            left: item.left - _left\r\n          })\r\n        })\r\n      }\r\n    }\r\n  },\r\n  bottom: {\r\n    renderExpandBtn({\r\n      node,\r\n      btn,\r\n      expandBtnSize,\r\n      translateX,\r\n      translateY,\r\n      width,\r\n      height\r\n    }) {\r\n      if (node.parent && node.parent.isRoot) {\r\n        btn.translate(\r\n          width * 0.3 - expandBtnSize / 2 - translateX,\r\n          height + expandBtnSize / 2 - translateY\r\n        )\r\n      } else {\r\n        btn.translate(\r\n          width * 0.3 - expandBtnSize / 2 - translateX,\r\n          -expandBtnSize / 2 - translateY\r\n        )\r\n      }\r\n    },\r\n    renderLine({ node, line, top, x, lineLength, height, miny, ctx }) {\r\n      if (node.parent && node.parent.isRoot) {\r\n        line.plot(\r\n          ctx.transformPath(\r\n            `M ${x},${top + height} L ${x + lineLength},${\r\n              top +\r\n              height +\r\n              Math.tan(degToRad(ctx.mindMap.opt.fishboneDeg)) * lineLength\r\n            }`\r\n          )\r\n        )\r\n      } else {\r\n        line.plot(ctx.transformPath(`M ${x},${top} L ${x},${miny}`))\r\n      }\r\n    },\r\n    computedLeftTopValue({ layerIndex, node, ctx }) {\r\n      let marginY = ctx.getMarginY(layerIndex + 1)\r\n      if (layerIndex === 1 && node.children) {\r\n        // 遍历二级节点的子节点\r\n        let startLeft = node.left + node.width * ctx.childIndent\r\n        let totalTop =\r\n          node.top +\r\n          node.height +\r\n          (ctx.getNodeActChildrenLength(node) > 0 ? node.expandBtnSize : 0) +\r\n          marginY\r\n\r\n        node.children.forEach(item => {\r\n          item.left = startLeft\r\n          item.top =\r\n            totalTop +\r\n            (ctx.getNodeActChildrenLength(item) > 0 ? item.expandBtnSize : 0)\r\n          totalTop +=\r\n            item.height +\r\n            (ctx.getNodeActChildrenLength(item) > 0 ? item.expandBtnSize : 0) +\r\n            marginY\r\n        })\r\n      }\r\n      if (layerIndex > 1 && node.children) {\r\n        // 遍历三级及以下节点的子节点\r\n        let startLeft = node.left + node.width * ctx.childIndent\r\n        let totalTop =\r\n          node.top -\r\n          (ctx.getNodeActChildrenLength(node) > 0 ? node.expandBtnSize : 0) -\r\n          marginY\r\n        node.children.forEach(item => {\r\n          item.left = startLeft\r\n          item.top = totalTop - item.height\r\n          totalTop -=\r\n            item.height +\r\n            (ctx.getNodeActChildrenLength(item) > 0 ? item.expandBtnSize : 0) +\r\n            marginY\r\n        })\r\n      }\r\n    },\r\n    adjustLeftTopValueBefore({ node, ctx, layerIndex }) {\r\n      // 调整top\r\n      let marginY = ctx.getMarginY(layerIndex + 1)\r\n      let len = node.children.length\r\n      if (layerIndex > 2 && len > 0) {\r\n        let totalHeight = node.children.reduce((h, item) => {\r\n          return (\r\n            h +\r\n            item.height +\r\n            (ctx.getNodeActChildrenLength(item) > 0 ? item.expandBtnSize : 0) +\r\n            marginY\r\n          )\r\n        }, 0)\r\n        ctx.updateBrothersTop(node, -totalHeight)\r\n      }\r\n    },\r\n    adjustLeftTopValueAfter({ parent, node, ctx }) {\r\n      // 将二级节点的子节点移到上方\r\n      if (parent && parent.isRoot) {\r\n        // 遍历二级节点的子节点\r\n        let marginY = ctx.getMarginY(node.layerIndex + 1)\r\n        let totalHeight = 0\r\n        let totalHeight2 = node.expandBtnSize\r\n        node.children.forEach(item => {\r\n          // 调整top\r\n          let hasChildren = ctx.getNodeActChildrenLength(item) > 0\r\n          let nodeTotalHeight = ctx.getNodeAreaHeight(item)\r\n          let offset = hasChildren\r\n            ? nodeTotalHeight -\r\n              item.height -\r\n              (hasChildren ? item.expandBtnSize : 0)\r\n            : 0\r\n          offset -= hasChildren ? marginY : 0\r\n          let _top = totalHeight + offset\r\n          let _left = item.left\r\n          item.top += _top\r\n          // 调整left\r\n          item.left =\r\n            node.left +\r\n            node.width * ctx.indent +\r\n            (nodeTotalHeight + totalHeight2) /\r\n              Math.tan(degToRad(ctx.mindMap.opt.fishboneDeg))\r\n          totalHeight += offset\r\n          totalHeight2 += nodeTotalHeight\r\n          // 同步更新后代节点\r\n          ctx.updateChildrenPro(item.children, {\r\n            top: _top,\r\n            left: item.left - _left\r\n          })\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import Base from './Base'\r\nimport { walk, asyncRun, degToRad, getNodeIndexInNodeList } from '../utils'\r\nimport { CONSTANTS } from '../constants/constant'\r\nimport utils from './fishboneUtils'\r\n\r\n//  鱼骨图\r\nclass Fishbone extends Base {\r\n  //  构造函数\r\n  constructor(opt = {}) {\r\n    super(opt)\r\n    this.indent = 0.3\r\n    this.childIndent = 0.5\r\n  }\r\n\r\n  //  布局\r\n  doLayout(callback) {\r\n    let task = [\r\n      () => {\r\n        this.computedBaseValue()\r\n      },\r\n      () => {\r\n        this.computedLeftTopValue()\r\n      },\r\n      () => {\r\n        this.adjustLeftTopValue()\r\n      },\r\n      () => {\r\n        callback(this.root)\r\n      }\r\n    ]\r\n    asyncRun(task)\r\n  }\r\n\r\n  //  遍历数据创建节点、计算根节点的位置，计算根节点的子节点的top值\r\n  computedBaseValue() {\r\n    walk(\r\n      this.renderer.renderTree,\r\n      null,\r\n      (node, parent, isRoot, layerIndex, index, ancestors) => {\r\n        // 创建节点\r\n        let newNode = this.createNode(node, parent, isRoot, layerIndex, index, ancestors)\r\n        // 根节点定位在画布中心位置\r\n        if (isRoot) {\r\n          this.setNodeCenter(newNode)\r\n        } else {\r\n          // 非根节点\r\n          // 三级及以下节点以上级方向为准\r\n          if (parent._node.dir) {\r\n            newNode.dir = parent._node.dir\r\n          } else {\r\n            // 节点生长方向\r\n            newNode.dir =\r\n              index % 2 === 0\r\n                ? CONSTANTS.LAYOUT_GROW_DIR.TOP\r\n                : CONSTANTS.LAYOUT_GROW_DIR.BOTTOM\r\n          }\r\n          // 计算二级节点的top值\r\n          if (parent._node.isRoot) {\r\n            let marginY = this.getMarginY(layerIndex)\r\n            if (this.checkIsTop(newNode)) {\r\n              newNode.top = parent._node.top - newNode.height - marginY\r\n            } else {\r\n              newNode.top = parent._node.top + parent._node.height + marginY\r\n            }\r\n          }\r\n        }\r\n        if (!node.data.expand) {\r\n          return true\r\n        }\r\n      },\r\n      null,\r\n      true,\r\n      0\r\n    )\r\n  }\r\n\r\n  //  遍历节点树计算节点的left、top\r\n  computedLeftTopValue() {\r\n    walk(\r\n      this.root,\r\n      null,\r\n      (node, parent, isRoot, layerIndex) => {\r\n        if (node.isRoot) {\r\n          let marginX = this.getMarginX(layerIndex + 1)\r\n          let topTotalLeft = node.left + node.width + node.height + marginX\r\n          let bottomTotalLeft = node.left + node.width + node.height + marginX\r\n          node.children.forEach(item => {\r\n            if (this.checkIsTop(item)) {\r\n              item.left = topTotalLeft\r\n              topTotalLeft += item.width + marginX\r\n            } else {\r\n              item.left = bottomTotalLeft + 20\r\n              bottomTotalLeft += item.width + marginX\r\n            }\r\n          })\r\n        }\r\n        let params = { layerIndex, node, ctx: this }\r\n        if (this.checkIsTop(node)) {\r\n          utils.top.computedLeftTopValue(params)\r\n        } else {\r\n          utils.bottom.computedLeftTopValue(params)\r\n        }\r\n      },\r\n      null,\r\n      true\r\n    )\r\n  }\r\n\r\n  //  调整节点left、top\r\n  adjustLeftTopValue() {\r\n    walk(\r\n      this.root,\r\n      null,\r\n      (node, parent, isRoot, layerIndex) => {\r\n        if (!node.getData('expand')) {\r\n          return\r\n        }\r\n        let params = { node, parent, layerIndex, ctx: this }\r\n        if (this.checkIsTop(node)) {\r\n          utils.top.adjustLeftTopValueBefore(params)\r\n        } else {\r\n          utils.bottom.adjustLeftTopValueBefore(params)\r\n        }\r\n      },\r\n      (node, parent) => {\r\n        let params = { parent, node, ctx: this }\r\n        if (this.checkIsTop(node)) {\r\n          utils.top.adjustLeftTopValueAfter(params)\r\n        } else {\r\n          utils.bottom.adjustLeftTopValueAfter(params)\r\n        }\r\n        // 调整二级节点的子节点的left值\r\n        if (node.isRoot) {\r\n          let topTotalLeft = 0\r\n          let bottomTotalLeft = 0\r\n          node.children.forEach(item => {\r\n            if (this.checkIsTop(item)) {\r\n              item.left += topTotalLeft\r\n              this.updateChildren(item.children, 'left', topTotalLeft)\r\n              let { left, right } = this.getNodeBoundaries(item, 'h')\r\n              topTotalLeft += right - left\r\n            } else {\r\n              item.left += bottomTotalLeft\r\n              this.updateChildren(item.children, 'left', bottomTotalLeft)\r\n              let { left, right } = this.getNodeBoundaries(item, 'h')\r\n              bottomTotalLeft += right - left\r\n            }\r\n          })\r\n        }\r\n      },\r\n      true\r\n    )\r\n  }\r\n\r\n  //  递归计算节点的宽度\r\n  getNodeAreaHeight(node) {\r\n    let totalHeight = 0\r\n    let loop = node => {\r\n      let marginY = this.getMarginY(node.layerIndex)\r\n      totalHeight +=\r\n        node.height +\r\n        (this.getNodeActChildrenLength(node) > 0 ? node.expandBtnSize : 0) +\r\n        marginY\r\n      if (node.children.length) {\r\n        node.children.forEach(item => {\r\n          loop(item)\r\n        })\r\n      }\r\n    }\r\n    loop(node)\r\n    return totalHeight\r\n  }\r\n\r\n  //  调整兄弟节点的left\r\n  updateBrothersLeft(node) {\r\n    let childrenList = node.children\r\n    let totalAddWidth = 0\r\n    childrenList.forEach(item => {\r\n      item.left += totalAddWidth\r\n      if (item.children && item.children.length) {\r\n        this.updateChildren(item.children, 'left', totalAddWidth)\r\n      }\r\n      let { left, right } = this.getNodeBoundaries(item, 'h')\r\n      let areaWidth = right - left\r\n      let difference = areaWidth - item.width\r\n      if (difference > 0) {\r\n        totalAddWidth += difference\r\n      }\r\n    })\r\n  }\r\n\r\n  //  调整兄弟节点的top\r\n  updateBrothersTop(node, addHeight) {\r\n    if (node.parent && !node.parent.isRoot) {\r\n      let childrenList = node.parent.children\r\n      let index = getNodeIndexInNodeList(node, childrenList)\r\n      childrenList.forEach((item, _index) => {\r\n        if (item.hasCustomPosition()) {\r\n          // 适配自定义位置\r\n          return\r\n        }\r\n        let _offset = 0\r\n        // 下面的节点往下移\r\n        if (_index > index) {\r\n          _offset = addHeight\r\n        }\r\n        item.top += _offset\r\n        // 同步更新子节点的位置\r\n        if (item.children && item.children.length) {\r\n          this.updateChildren(item.children, 'top', _offset)\r\n        }\r\n      })\r\n      // 更新父节点的位置\r\n      if (this.checkIsTop(node)) {\r\n        this.updateBrothersTop(node.parent, addHeight)\r\n      } else {\r\n        this.updateBrothersTop(\r\n          node.parent,\r\n          node.layerIndex === 3 ? 0 : addHeight\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  // 检查节点是否是上方节点\r\n  checkIsTop(node) {\r\n    return node.dir === CONSTANTS.LAYOUT_GROW_DIR.TOP\r\n  }\r\n\r\n  //  绘制连线，连接该节点到其子节点\r\n  renderLine(node, lines, style) {\r\n    if (node.layerIndex !== 1 && node.children.length <= 0) {\r\n      return []\r\n    }\r\n    let { top, height, expandBtnSize } = node\r\n    const { alwaysShowExpandBtn, notShowExpandBtn } = this.mindMap.opt\r\n    if (!alwaysShowExpandBtn || notShowExpandBtn) {\r\n      expandBtnSize = 0\r\n    }\r\n    let len = node.children.length\r\n    if (node.isRoot) {\r\n      // 当前节点是根节点\r\n      // 根节点的子节点是和根节点同一水平线排列\r\n      let maxx = -Infinity\r\n      node.children.forEach(item => {\r\n        if (item.left > maxx) {\r\n          maxx = item.left\r\n        }\r\n        // 水平线段到二级节点的连线\r\n        let marginY = this.getMarginY(item.layerIndex)\r\n        let nodeLineX = item.left\r\n        let offset = node.height / 2 + marginY\r\n        let offsetX = offset / Math.tan(degToRad(this.mindMap.opt.fishboneDeg))\r\n        let line = this.lineDraw.path()\r\n        if (this.checkIsTop(item)) {\r\n          line.plot(\r\n            this.transformPath(\r\n              `M ${nodeLineX - offsetX},${item.top + item.height + offset} L ${\r\n                item.left\r\n              },${item.top + item.height}`\r\n            )\r\n          )\r\n        } else {\r\n          line.plot(\r\n            this.transformPath(\r\n              `M ${nodeLineX - offsetX},${item.top - offset} L ${nodeLineX},${\r\n                item.top\r\n              }`\r\n            )\r\n          )\r\n        }\r\n        node.style.line(line)\r\n        node._lines.push(line)\r\n        style && style(line, node)\r\n      })\r\n      // 从根节点出发的水平线\r\n      let nodeHalfTop = node.top + node.height / 2\r\n      let offset = node.height / 2 + this.getMarginY(node.layerIndex + 1)\r\n      let line = this.lineDraw.path()\r\n      line.plot(\r\n        this.transformPath(\r\n          `M ${node.left + node.width},${nodeHalfTop} L ${\r\n            maxx - offset / Math.tan(degToRad(this.mindMap.opt.fishboneDeg))\r\n          },${nodeHalfTop}`\r\n        )\r\n      )\r\n      node.style.line(line)\r\n      node._lines.push(line)\r\n      style && style(line, node)\r\n    } else {\r\n      // 当前节点为非根节点\r\n      let maxy = -Infinity\r\n      let miny = Infinity\r\n      let maxx = -Infinity\r\n      let x = node.left + node.width * this.indent\r\n      node.children.forEach((item, index) => {\r\n        if (item.left > maxx) {\r\n          maxx = item.left\r\n        }\r\n        let y = item.top + item.height / 2\r\n        if (y > maxy) {\r\n          maxy = y\r\n        }\r\n        if (y < miny) {\r\n          miny = y\r\n        }\r\n        // 水平线\r\n        if (node.layerIndex > 1) {\r\n          let path = `M ${x},${y} L ${item.left},${y}`\r\n          this.setLineStyle(style, lines[index], path, item)\r\n        }\r\n      })\r\n      // 斜线\r\n      if (len >= 0) {\r\n        let line = this.lineDraw.path()\r\n        expandBtnSize = len > 0 ? expandBtnSize : 0\r\n        let lineLength = maxx - node.left - node.width * this.indent\r\n        lineLength = Math.max(lineLength, 0)\r\n        let params = {\r\n          node,\r\n          line,\r\n          top,\r\n          x,\r\n          lineLength,\r\n          height,\r\n          expandBtnSize,\r\n          maxy,\r\n          miny,\r\n          ctx: this\r\n        }\r\n        if (this.checkIsTop(node)) {\r\n          utils.top.renderLine(params)\r\n        } else {\r\n          utils.bottom.renderLine(params)\r\n        }\r\n        node.style.line(line)\r\n        node._lines.push(line)\r\n        style && style(line, node)\r\n      }\r\n    }\r\n  }\r\n\r\n  //  渲染按钮\r\n  renderExpandBtn(node, btn) {\r\n    let { width, height, expandBtnSize, isRoot } = node\r\n    if (!isRoot) {\r\n      let { translateX, translateY } = btn.transform()\r\n      let params = {\r\n        node,\r\n        btn,\r\n        expandBtnSize,\r\n        translateX,\r\n        translateY,\r\n        width,\r\n        height\r\n      }\r\n      if (this.checkIsTop(node)) {\r\n        utils.top.renderExpandBtn(params)\r\n      } else {\r\n        utils.bottom.renderExpandBtn(params)\r\n      }\r\n    }\r\n  }\r\n\r\n  //  创建概要节点\r\n  renderGeneralization(list) {\r\n    list.forEach(item => {\r\n      let {\r\n        top,\r\n        bottom,\r\n        right,\r\n        generalizationLineMargin,\r\n        generalizationNodeMargin\r\n      } = this.getNodeGeneralizationRenderBoundaries(item, 'h')\r\n      let x1 = right + generalizationLineMargin\r\n      let y1 = top\r\n      let x2 = right + generalizationLineMargin\r\n      let y2 = bottom\r\n      let cx = x1 + 20\r\n      let cy = y1 + (y2 - y1) / 2\r\n      let path = `M ${x1},${y1} Q ${cx},${cy} ${x2},${y2}`\r\n      item.generalizationLine.plot(this.transformPath(path))\r\n      item.generalizationNode.left = right + generalizationNodeMargin\r\n      item.generalizationNode.top =\r\n        top + (bottom - top - item.generalizationNode.height) / 2\r\n    })\r\n  }\r\n\r\n  // 渲染展开收起按钮的隐藏占位元素\r\n  renderExpandBtnRect(rect, expandBtnSize, width, height, node) {\r\n    let dir = ''\r\n    if (node.dir === CONSTANTS.LAYOUT_GROW_DIR.TOP) {\r\n      dir =\r\n        node.layerIndex === 1\r\n          ? CONSTANTS.LAYOUT_GROW_DIR.TOP\r\n          : CONSTANTS.LAYOUT_GROW_DIR.BOTTOM\r\n    } else {\r\n      dir =\r\n        node.layerIndex === 1\r\n          ? CONSTANTS.LAYOUT_GROW_DIR.BOTTOM\r\n          : CONSTANTS.LAYOUT_GROW_DIR.TOP\r\n    }\r\n    if (dir === CONSTANTS.LAYOUT_GROW_DIR.TOP) {\r\n      rect.size(width, expandBtnSize).x(0).y(-expandBtnSize)\r\n    } else {\r\n      rect.size(width, expandBtnSize).x(0).y(height)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Fishbone\r\n", "import {\r\n  getStrWithBrFromHtml,\r\n  checkNodeOuter,\r\n  focusInput,\r\n  selectAllInput,\r\n  htmlEscape,\r\n  handleInputPasteText,\r\n  checkSmmFormatData,\r\n  getTextFromHtml,\r\n  isWhite,\r\n  getVisibleColorFromTheme\r\n} from '../../utils'\r\nimport {\r\n  ERROR_TYPES,\r\n  CONSTANTS,\r\n  noneRichTextNodeLineHeight\r\n} from '../../constants/constant'\r\n\r\n//  节点文字编辑类\r\nexport default class TextEdit {\r\n  //  构造函数\r\n  constructor(renderer) {\r\n    this.renderer = renderer\r\n    this.mindMap = renderer.mindMap\r\n    // 当前编辑的节点\r\n    this.currentNode = null\r\n    // 文本编辑框\r\n    this.textEditNode = null\r\n    // 文本编辑框是否显示\r\n    this.showTextEdit = false\r\n    // 如果编辑过程中缩放画布了，那么缓存当前编辑的内容\r\n    this.cacheEditingText = ''\r\n    this.hasBodyMousedown = false\r\n    this.textNodePaddingX = 5\r\n    this.textNodePaddingY = 3\r\n    this.isNeedUpdateTextEditNode = false\r\n    this.bindEvent()\r\n  }\r\n\r\n  //  事件\r\n  bindEvent() {\r\n    this.show = this.show.bind(this)\r\n    this.onScale = this.onScale.bind(this)\r\n    this.onKeydown = this.onKeydown.bind(this)\r\n    // 节点双击事件\r\n    this.mindMap.on('node_dblclick', (node, e, isInserting) => {\r\n      this.show({ node, e, isInserting })\r\n    })\r\n    // 点击事件\r\n    this.mindMap.on('draw_click', () => {\r\n      // 隐藏文本编辑框\r\n      this.hideEditTextBox()\r\n    })\r\n    this.mindMap.on('body_mousedown', () => {\r\n      this.hasBodyMousedown = true\r\n    })\r\n    this.mindMap.on('body_click', () => {\r\n      if (!this.hasBodyMousedown) return\r\n      this.hasBodyMousedown = false\r\n      // 隐藏文本编辑框\r\n      if (this.mindMap.opt.isEndNodeTextEditOnClickOuter) {\r\n        this.hideEditTextBox()\r\n      }\r\n    })\r\n    this.mindMap.on('svg_mousedown', () => {\r\n      // 隐藏文本编辑框\r\n      this.hideEditTextBox()\r\n    })\r\n    // 展开收缩按钮点击事件\r\n    this.mindMap.on('expand_btn_click', () => {\r\n      this.hideEditTextBox()\r\n    })\r\n    // 节点激活前事件\r\n    this.mindMap.on('before_node_active', () => {\r\n      this.hideEditTextBox()\r\n    })\r\n    // 鼠标滚动事件\r\n    this.mindMap.on('mousewheel', () => {\r\n      if (\r\n        this.mindMap.opt.mousewheelAction === CONSTANTS.MOUSE_WHEEL_ACTION.MOVE\r\n      ) {\r\n        this.hideEditTextBox()\r\n      }\r\n    })\r\n    // 注册编辑快捷键\r\n    this.mindMap.keyCommand.addShortcut('F2', () => {\r\n      if (this.renderer.activeNodeList.length <= 0) {\r\n        return\r\n      }\r\n      this.show({\r\n        node: this.renderer.activeNodeList[0]\r\n      })\r\n    })\r\n    this.mindMap.on('scale', this.onScale)\r\n    // 监听按键事件，判断是否自动进入文本编辑模式\r\n    if (this.mindMap.opt.enableAutoEnterTextEditWhenKeydown) {\r\n      window.addEventListener('keydown', this.onKeydown)\r\n    }\r\n    this.mindMap.on('beforeDestroy', () => {\r\n      this.unBindEvent()\r\n    })\r\n    this.mindMap.on('after_update_config', (opt, lastOpt) => {\r\n      if (\r\n        opt.openRealtimeRenderOnNodeTextEdit !==\r\n        lastOpt.openRealtimeRenderOnNodeTextEdit\r\n      ) {\r\n        if (this.mindMap.richText) {\r\n          this.mindMap.richText.onOpenRealtimeRenderOnNodeTextEditConfigUpdate(\r\n            opt.openRealtimeRenderOnNodeTextEdit\r\n          )\r\n        } else {\r\n          this.onOpenRealtimeRenderOnNodeTextEditConfigUpdate(\r\n            opt.openRealtimeRenderOnNodeTextEdit\r\n          )\r\n        }\r\n      }\r\n      if (\r\n        opt.enableAutoEnterTextEditWhenKeydown !==\r\n        lastOpt.enableAutoEnterTextEditWhenKeydown\r\n      ) {\r\n        window[\r\n          opt.enableAutoEnterTextEditWhenKeydown\r\n            ? 'addEventListener'\r\n            : 'removeEventListener'\r\n        ]('keydown', this.onKeydown)\r\n      }\r\n    })\r\n    // 正在编辑文本时，给节点添加了图标等其他内容时需要更新编辑框的位置\r\n    this.mindMap.on('afterExecCommand', () => {\r\n      if (!this.isShowTextEdit()) return\r\n      this.isNeedUpdateTextEditNode = true\r\n    })\r\n    this.mindMap.on('node_tree_render_end', () => {\r\n      if (!this.isShowTextEdit()) return\r\n      if (this.isNeedUpdateTextEditNode) {\r\n        this.isNeedUpdateTextEditNode = false\r\n        this.updateTextEditNode()\r\n      }\r\n    })\r\n  }\r\n\r\n  // 解绑事件\r\n  unBindEvent() {\r\n    window.removeEventListener('keydown', this.onKeydown)\r\n  }\r\n\r\n  // 按键事件\r\n  onKeydown(e) {\r\n    if (e.target !== document.body) return\r\n    const activeNodeList = this.mindMap.renderer.activeNodeList\r\n    if (activeNodeList.length <= 0 || activeNodeList.length > 1) return\r\n    const node = activeNodeList[0]\r\n    // 当正在输入中文或英文或数字时，如果没有按下组合键，那么自动进入文本编辑模式\r\n    if (node && this.checkIsAutoEnterTextEditKey(e)) {\r\n      // 忽略第一个键值，避免中文输入法时进入编辑会导致第一个键值变成字母的问题\r\n      // 带来的问题是按的第一下纯粹是进入文本编辑，但没有变成输入\r\n      e.preventDefault()\r\n      this.show({\r\n        node,\r\n        e,\r\n        isInserting: false,\r\n        isFromKeyDown: true\r\n      })\r\n    }\r\n  }\r\n\r\n  // 判断是否是自动进入文本编模式的按钮\r\n  checkIsAutoEnterTextEditKey(e) {\r\n    const keyCode = e.keyCode\r\n    return (\r\n      (keyCode === 229 ||\r\n        (keyCode >= 65 && keyCode <= 90) ||\r\n        (keyCode >= 48 && keyCode <= 57)) &&\r\n      !this.mindMap.keyCommand.hasCombinationKey(e)\r\n    )\r\n  }\r\n\r\n  //  注册临时快捷键\r\n  registerTmpShortcut() {\r\n    this.mindMap.keyCommand.addShortcut('Enter', () => {\r\n      this.hideEditTextBox()\r\n    })\r\n    this.mindMap.keyCommand.addShortcut('Tab', () => {\r\n      this.hideEditTextBox()\r\n    })\r\n  }\r\n\r\n  // 获取当前文本编辑框是否处于显示状态，也就是是否处在文本编辑状态\r\n  isShowTextEdit() {\r\n    if (this.mindMap.richText) {\r\n      return this.mindMap.richText.showTextEdit\r\n    }\r\n    return this.showTextEdit\r\n  }\r\n\r\n  // 显示文本编辑框\r\n  // isInserting：是否是刚创建的节点\r\n  // isFromKeyDown：是否是在按键事件进入的编辑\r\n  async show({\r\n    node,\r\n    isInserting = false,\r\n    isFromKeyDown = false,\r\n    isFromScale = false\r\n  }) {\r\n    // 使用了自定义节点内容那么不响应编辑事件\r\n    if (node.isUseCustomNodeContent()) {\r\n      return\r\n    }\r\n    // 如果有正在编辑中的节点，那么先结束它\r\n    const currentEditNode = this.getCurrentEditNode()\r\n    if (currentEditNode) {\r\n      this.hideEditTextBox()\r\n    }\r\n    const { beforeTextEdit, openRealtimeRenderOnNodeTextEdit } =\r\n      this.mindMap.opt\r\n    if (typeof beforeTextEdit === 'function') {\r\n      let isShow = false\r\n      try {\r\n        isShow = await beforeTextEdit(node, isInserting)\r\n      } catch (error) {\r\n        isShow = false\r\n        this.mindMap.opt.errorHandler(ERROR_TYPES.BEFORE_TEXT_EDIT_ERROR, error)\r\n      }\r\n      if (!isShow) return\r\n    }\r\n    const { offsetLeft, offsetTop } = checkNodeOuter(this.mindMap, node)\r\n    this.mindMap.view.translateXY(offsetLeft, offsetTop)\r\n    const g = node._textData.node\r\n    // 需要先显示，不然宽高获取到的可能是0\r\n    if (openRealtimeRenderOnNodeTextEdit) {\r\n      g.show()\r\n    }\r\n    const rect = g.node.getBoundingClientRect()\r\n    // 如果开启了大小实时更新，那么直接隐藏节点原文本\r\n    if (openRealtimeRenderOnNodeTextEdit) {\r\n      g.hide()\r\n    }\r\n    const params = {\r\n      node,\r\n      rect,\r\n      isInserting,\r\n      isFromKeyDown,\r\n      isFromScale\r\n    }\r\n    if (this.mindMap.richText) {\r\n      this.mindMap.richText.showEditText(params)\r\n      return\r\n    }\r\n    this.currentNode = node\r\n    this.showEditTextBox(params)\r\n  }\r\n\r\n  // 当openRealtimeRenderOnNodeTextEdit配置更新后需要更新编辑框样式\r\n  onOpenRealtimeRenderOnNodeTextEditConfigUpdate(\r\n    openRealtimeRenderOnNodeTextEdit\r\n  ) {\r\n    if (!this.textEditNode) return\r\n    this.textEditNode.style.background = openRealtimeRenderOnNodeTextEdit\r\n      ? 'transparent'\r\n      : this.currentNode\r\n      ? this.getBackground(this.currentNode)\r\n      : ''\r\n    this.textEditNode.style.boxShadow = openRealtimeRenderOnNodeTextEdit\r\n      ? 'none'\r\n      : '0 0 20px rgba(0,0,0,.5)'\r\n  }\r\n\r\n  // 处理画布缩放\r\n  onScale() {\r\n    const node = this.getCurrentEditNode()\r\n    if (!node) return\r\n    if (this.mindMap.richText) {\r\n      this.mindMap.richText.cacheEditingText =\r\n        this.mindMap.richText.getEditText()\r\n      this.mindMap.richText.showTextEdit = false\r\n    } else {\r\n      this.cacheEditingText = this.getEditText()\r\n      this.showTextEdit = false\r\n    }\r\n    this.show({\r\n      node,\r\n      isFromScale: true\r\n    })\r\n  }\r\n\r\n  //  显示文本编辑框\r\n  showEditTextBox({ node, rect, isInserting, isFromKeyDown, isFromScale }) {\r\n    if (this.showTextEdit) return\r\n    const {\r\n      nodeTextEditZIndex,\r\n      textAutoWrapWidth,\r\n      selectTextOnEnterEditText,\r\n      openRealtimeRenderOnNodeTextEdit,\r\n      autoEmptyTextWhenKeydownEnterEdit\r\n    } = this.mindMap.opt\r\n    if (!isFromScale) {\r\n      this.mindMap.emit('before_show_text_edit')\r\n    }\r\n    this.registerTmpShortcut()\r\n    if (!this.textEditNode) {\r\n      this.textEditNode = document.createElement('div')\r\n      this.textEditNode.classList.add(\r\n        CONSTANTS.EDIT_NODE_CLASS.SMM_NODE_EDIT_WRAP\r\n      )\r\n      this.textEditNode.style.cssText = `\r\n        position: fixed;\r\n        box-sizing: border-box;\r\n        ${\r\n          openRealtimeRenderOnNodeTextEdit\r\n            ? ''\r\n            : `box-shadow: 0 0 20px rgba(0,0,0,.5);`\r\n        }\r\n        padding: ${this.textNodePaddingY}px ${this.textNodePaddingX}px;\r\n        margin-left: -${this.textNodePaddingX}px;\r\n        margin-top: -${this.textNodePaddingY}px;\r\n        outline: none; \r\n        word-break: break-all;\r\n        line-break: anywhere;\r\n      `\r\n      this.textEditNode.setAttribute('contenteditable', true)\r\n      this.textEditNode.addEventListener('keyup', e => {\r\n        e.stopPropagation()\r\n      })\r\n      this.textEditNode.addEventListener('click', e => {\r\n        e.stopPropagation()\r\n      })\r\n      this.textEditNode.addEventListener('mousedown', e => {\r\n        e.stopPropagation()\r\n      })\r\n      this.textEditNode.addEventListener('keydown', e => {\r\n        if (this.checkIsAutoEnterTextEditKey(e)) {\r\n          e.stopPropagation()\r\n        }\r\n      })\r\n      this.textEditNode.addEventListener('paste', e => {\r\n        const text = e.clipboardData.getData('text')\r\n        const { isSmm, data } = checkSmmFormatData(text)\r\n        if (isSmm && data[0] && data[0].data) {\r\n          // 只取第一个节点的纯文本\r\n          handleInputPasteText(e, getTextFromHtml(data[0].data.text))\r\n        } else {\r\n          handleInputPasteText(e)\r\n        }\r\n        this.emitTextChangeEvent()\r\n      })\r\n      this.textEditNode.addEventListener('input', () => {\r\n        this.emitTextChangeEvent()\r\n      })\r\n      const targetNode =\r\n        this.mindMap.opt.customInnerElsAppendTo || document.body\r\n      targetNode.appendChild(this.textEditNode)\r\n    }\r\n    const scale = this.mindMap.view.scale\r\n    const fontSize = node.style.merge('fontSize')\r\n    const textLines = (this.cacheEditingText || node.getData('text'))\r\n      .split(/\\n/gim)\r\n      .map(item => {\r\n        return htmlEscape(item)\r\n      })\r\n    const isMultiLine = node._textData.node.attr('data-ismultiLine') === 'true'\r\n    node.style.domText(this.textEditNode, scale)\r\n    if (!openRealtimeRenderOnNodeTextEdit) {\r\n      this.textEditNode.style.background = this.getBackground(node)\r\n    }\r\n    this.textEditNode.style.zIndex = nodeTextEditZIndex\r\n    if (isFromKeyDown && autoEmptyTextWhenKeydownEnterEdit) {\r\n      this.textEditNode.innerHTML = ''\r\n    } else {\r\n      this.textEditNode.innerHTML = textLines.join('<br>')\r\n    }\r\n    this.textEditNode.style.minWidth =\r\n      rect.width + this.textNodePaddingX * 2 + 'px'\r\n    this.textEditNode.style.minHeight = rect.height + 'px'\r\n    this.textEditNode.style.left = Math.floor(rect.left) + 'px'\r\n    this.textEditNode.style.top = Math.floor(rect.top) + 'px'\r\n    this.textEditNode.style.display = 'block'\r\n    this.textEditNode.style.maxWidth = textAutoWrapWidth * scale + 'px'\r\n    if (isMultiLine) {\r\n      this.textEditNode.style.lineHeight = noneRichTextNodeLineHeight\r\n      this.textEditNode.style.transform = `translateY(${\r\n        (((noneRichTextNodeLineHeight - 1) * fontSize) / 2) * scale\r\n      }px)`\r\n    } else {\r\n      this.textEditNode.style.lineHeight = 'normal'\r\n    }\r\n    this.showTextEdit = true\r\n    // 选中文本\r\n    // if (!this.cacheEditingText) {\r\n    //   selectAllInput(this.textEditNode)\r\n    // }\r\n    if (isInserting || (selectTextOnEnterEditText && !isFromKeyDown)) {\r\n      selectAllInput(this.textEditNode)\r\n    } else {\r\n      focusInput(this.textEditNode)\r\n    }\r\n    this.cacheEditingText = ''\r\n  }\r\n\r\n  // 派发节点文本编辑事件\r\n  emitTextChangeEvent() {\r\n    this.mindMap.emit('node_text_edit_change', {\r\n      node: this.currentNode,\r\n      text: this.getEditText(),\r\n      richText: false\r\n    })\r\n  }\r\n\r\n  // 更新文本编辑框的大小和位置\r\n  updateTextEditNode() {\r\n    if (this.mindMap.richText) {\r\n      this.mindMap.richText.updateTextEditNode()\r\n      return\r\n    }\r\n    if (!this.showTextEdit || !this.currentNode) {\r\n      return\r\n    }\r\n    const rect = this.currentNode._textData.node.node.getBoundingClientRect()\r\n    this.textEditNode.style.minWidth =\r\n      rect.width + this.textNodePaddingX * 2 + 'px'\r\n    this.textEditNode.style.minHeight =\r\n      rect.height + this.textNodePaddingY * 2 + 'px'\r\n    this.textEditNode.style.left = Math.floor(rect.left) + 'px'\r\n    this.textEditNode.style.top = Math.floor(rect.top) + 'px'\r\n  }\r\n\r\n  // 获取编辑区域的背景填充\r\n  getBackground(node) {\r\n    const gradientStyle = node.style.merge('gradientStyle')\r\n    // 当前使用的是渐变色背景\r\n    if (gradientStyle) {\r\n      const startColor = node.style.merge('startColor')\r\n      const endColor = node.style.merge('endColor')\r\n      return `linear-gradient(to right, ${startColor}, ${endColor})`\r\n    } else {\r\n      // 单色背景\r\n      const bgColor = node.style.merge('fillColor')\r\n      const color = node.style.merge('color')\r\n      // 默认使用节点的填充色，否则如果节点颜色是白色的话编辑时看不见\r\n      return bgColor === 'transparent'\r\n        ? isWhite(color)\r\n          ? getVisibleColorFromTheme(this.mindMap.themeConfig)\r\n          : '#fff'\r\n        : bgColor\r\n    }\r\n  }\r\n\r\n  // 删除文本编辑元素\r\n  removeTextEditEl() {\r\n    if (this.mindMap.richText) {\r\n      this.mindMap.richText.removeTextEditEl()\r\n      return\r\n    }\r\n    if (!this.textEditNode) return\r\n    const targetNode = this.mindMap.opt.customInnerElsAppendTo || document.body\r\n    targetNode.removeChild(this.textEditNode)\r\n  }\r\n\r\n  // 获取当前正在编辑的内容\r\n  getEditText() {\r\n    return getStrWithBrFromHtml(this.textEditNode.innerHTML)\r\n  }\r\n\r\n  //  隐藏文本编辑框\r\n  hideEditTextBox() {\r\n    if (this.mindMap.richText) {\r\n      return this.mindMap.richText.hideEditText()\r\n    }\r\n    if (!this.showTextEdit) {\r\n      return\r\n    }\r\n    const currentNode = this.currentNode\r\n    const text = this.getEditText()\r\n    this.currentNode = null\r\n    this.textEditNode.style.display = 'none'\r\n    this.textEditNode.innerHTML = ''\r\n    this.textEditNode.style.fontFamily = 'inherit'\r\n    this.textEditNode.style.fontSize = 'inherit'\r\n    this.textEditNode.style.fontWeight = 'normal'\r\n    this.textEditNode.style.transform = 'translateY(0)'\r\n    this.showTextEdit = false\r\n    this.mindMap.execCommand('SET_NODE_TEXT', currentNode, text)\r\n    // if (currentNode.isGeneralization) {\r\n    //   // 概要节点\r\n    //   currentNode.generalizationBelongNode.updateGeneralization()\r\n    // }\r\n    this.mindMap.render()\r\n    this.mindMap.emit(\r\n      'hide_text_edit',\r\n      this.textEditNode,\r\n      this.renderer.activeNodeList,\r\n      currentNode\r\n    )\r\n  }\r\n\r\n  // 获取当前正在编辑中的节点实例\r\n  getCurrentEditNode() {\r\n    if (this.mindMap.richText) {\r\n      return this.mindMap.richText.node\r\n    }\r\n    return this.currentNode\r\n  }\r\n}\r\n", "import merge from 'deepmerge'\r\nimport LogicalStructure from '../../layouts/LogicalStructure'\r\nimport MindMap from '../../layouts/MindMap'\r\nimport CatalogOrganization from '../../layouts/CatalogOrganization'\r\nimport OrganizationStructure from '../../layouts/OrganizationStructure'\r\nimport Timeline from '../../layouts/Timeline'\r\nimport VerticalTimeline from '../../layouts/VerticalTimeline'\r\nimport Fishbone from '../../layouts/Fishbone'\r\nimport TextEdit from './TextEdit'\r\nimport {\r\n  copyNodeTree,\r\n  simpleDeepClone,\r\n  walk,\r\n  bfsWalk,\r\n  loadImage,\r\n  isUndef,\r\n  getTopAncestorsFomNodeList,\r\n  addDataToAppointNodes,\r\n  createUidForAppointNodes,\r\n  formatDataToArray,\r\n  removeFromParentNodeData,\r\n  createUid,\r\n  getNodeDataIndex,\r\n  getNodeIndexInNodeList,\r\n  setDataToClipboard,\r\n  getDataFromClipboard,\r\n  htmlEscape,\r\n  parseAddGeneralizationNodeList,\r\n  checkNodeListIsEqual,\r\n  createSmmFormatData,\r\n  checkSmmFormatData,\r\n  checkIsNodeStyleDataKey,\r\n  formatGetNodeGeneralization,\r\n  sortNodeList,\r\n  throttle,\r\n  debounce,\r\n  checkClipboardReadEnable,\r\n  isNodeNotNeedRenderData\r\n} from '../../utils'\r\nimport { shapeList } from './node/Shape'\r\nimport { lineStyleProps } from '../../theme/default'\r\nimport { CONSTANTS, ERROR_TYPES } from '../../constants/constant'\r\nimport { Polygon } from '@svgdotjs/svg.js'\r\n\r\n// 布局列表\r\nconst layouts = {\r\n  // 逻辑结构图\r\n  [CONSTANTS.LAYOUT.LOGICAL_STRUCTURE]: LogicalStructure,\r\n  // 向左逻辑结构图\r\n  [CONSTANTS.LAYOUT.LOGICAL_STRUCTURE_LEFT]: LogicalStructure,\r\n  // 思维导图\r\n  [CONSTANTS.LAYOUT.MIND_MAP]: MindMap,\r\n  // 目录组织图\r\n  [CONSTANTS.LAYOUT.CATALOG_ORGANIZATION]: CatalogOrganization,\r\n  // 组织结构图\r\n  [CONSTANTS.LAYOUT.ORGANIZATION_STRUCTURE]: OrganizationStructure,\r\n  // 时间轴\r\n  [CONSTANTS.LAYOUT.TIMELINE]: Timeline,\r\n  // 时间轴2\r\n  [CONSTANTS.LAYOUT.TIMELINE2]: Timeline,\r\n  // 竖向时间轴\r\n  [CONSTANTS.LAYOUT.VERTICAL_TIMELINE]: VerticalTimeline,\r\n  // 鱼骨图\r\n  [CONSTANTS.LAYOUT.FISHBONE]: Fishbone\r\n}\r\n\r\n//  渲染\r\nclass Render {\r\n  //  构造函数\r\n  constructor(opt = {}) {\r\n    this.opt = opt\r\n    this.mindMap = opt.mindMap\r\n    this.themeConfig = this.mindMap.themeConfig\r\n    // 渲染树，操作过程中修改的都是这里的数据\r\n    this.renderTree = this.mindMap.opt.data\r\n      ? merge({}, this.mindMap.opt.data)\r\n      : null\r\n    // 是否重新渲染\r\n    this.reRender = false\r\n    // 是否正在渲染中\r\n    this.isRendering = false\r\n    // 是否存在等待渲染\r\n    this.hasWaitRendering = false\r\n    this.waitRenderingParams = []\r\n    // 用于缓存节点\r\n    this.nodeCache = {}\r\n    this.lastNodeCache = {}\r\n    // 触发render的来源\r\n    this.renderSource = ''\r\n    // 当前激活的节点列表\r\n    this.activeNodeList = []\r\n    // 根节点\r\n    this.root = null\r\n    // 文本编辑框，需要再bindEvent之前实例化，否则单击事件只能触发隐藏文本编辑框，而无法保存文本修改\r\n    this.textEdit = new TextEdit(this)\r\n    // 当前复制的数据\r\n    this.beingCopyData = null\r\n    // 节点高亮框\r\n    this.highlightBoxNode = null\r\n    this.highlightBoxNodeStyle = null\r\n    // 上一次节点激活数据\r\n    this.lastActiveNodeList = []\r\n    // 布局\r\n    this.setLayout()\r\n    // 绑定事件\r\n    this.bindEvent()\r\n    // 注册命令\r\n    this.registerCommands()\r\n    // 注册快捷键\r\n    this.registerShortcutKeys()\r\n  }\r\n\r\n  //  设置布局结构\r\n  setLayout() {\r\n    const { layout } = this.mindMap.opt\r\n    this.layout = new (\r\n      layouts[layout]\r\n        ? layouts[layout]\r\n        : layouts[CONSTANTS.LAYOUT.LOGICAL_STRUCTURE]\r\n    )(this, layout)\r\n  }\r\n\r\n  // 重新设置思维导图数据\r\n  setData(data) {\r\n    this.renderTree = data || null\r\n  }\r\n\r\n  //   绑定事件\r\n  bindEvent() {\r\n    const {\r\n      openPerformance,\r\n      performanceConfig,\r\n      openRealtimeRenderOnNodeTextEdit\r\n    } = this.mindMap.opt\r\n    // 画布点击事件清除当前激活节点列表\r\n    this.mindMap.on('draw_click', e => {\r\n      this.clearActiveNodeListOnDrawClick(e, 'click')\r\n    })\r\n    // 画布右键事件事件清除当前激活节点列表\r\n    this.mindMap.on('contextmenu', e => {\r\n      this.clearActiveNodeListOnDrawClick(e, 'contextmenu')\r\n    })\r\n    // 鼠标双击回到根节点\r\n    this.mindMap.svg.on('dblclick', () => {\r\n      if (!this.mindMap.opt.enableDblclickBackToRootNode) return\r\n      this.setRootNodeCenter()\r\n    })\r\n    // 性能模式\r\n    const onViewDataChange = throttle(() => {\r\n      if (this.root) {\r\n        this.mindMap.emit('node_tree_render_start')\r\n        this.root.render(\r\n          () => {\r\n            this.mindMap.emit('node_tree_render_end')\r\n          },\r\n          false,\r\n          true\r\n        )\r\n      }\r\n    }, performanceConfig.time)\r\n    if (openPerformance) {\r\n      this.mindMap.on('view_data_change', onViewDataChange)\r\n    }\r\n    // 文本编辑时实时更新节点大小\r\n    this.onNodeTextEditChange = debounce(this.onNodeTextEditChange, 100, this)\r\n    if (openRealtimeRenderOnNodeTextEdit) {\r\n      this.mindMap.on('node_text_edit_change', this.onNodeTextEditChange)\r\n    }\r\n    // 监听配置改变事件\r\n    this.mindMap.on('after_update_config', (opt, lastOpt) => {\r\n      // 更新openPerformance配置\r\n      if (opt.openPerformance !== lastOpt.openPerformance) {\r\n        this.mindMap[opt.openPerformance ? 'on' : 'off'](\r\n          'view_data_change',\r\n          onViewDataChange\r\n        )\r\n        this.forceLoadNode()\r\n      }\r\n      // 更新openRealtimeRenderOnNodeTextEdit配置\r\n      if (\r\n        opt.openRealtimeRenderOnNodeTextEdit !==\r\n        lastOpt.openRealtimeRenderOnNodeTextEdit\r\n      ) {\r\n        this.mindMap[opt.openRealtimeRenderOnNodeTextEdit ? 'on' : 'off'](\r\n          'node_text_edit_change',\r\n          this.onNodeTextEditChange\r\n        )\r\n      }\r\n    })\r\n    // 处理非https下的复制黏贴问题\r\n    // 暂时不启用，因为给页面的其他输入框（比如节点文本编辑框）粘贴内容也会触发，冲突问题暂时没有想到好的解决方法，不可能要求所有输入框都阻止冒泡\r\n    // if (!checkClipboardReadEnable()) {\r\n    //   this.handlePaste = this.handlePaste.bind(this)\r\n    //   window.addEventListener('paste', this.handlePaste)\r\n    //   this.mindMap.on('beforeDestroy', () => {\r\n    //     window.removeEventListener('paste', this.handlePaste)\r\n    //   })\r\n    // }\r\n  }\r\n\r\n  // 监听文本编辑事件，实时更新节点大小\r\n  onNodeTextEditChange({ node, text }) {\r\n    node._textData = node.createTextNode(text)\r\n    const { width, height } = node.getNodeRect()\r\n    node.width = width\r\n    node.height = height\r\n    node.layout()\r\n    this.mindMap.render(() => {\r\n      this.textEdit.updateTextEditNode()\r\n    })\r\n  }\r\n\r\n  // 强制渲染节点，不考虑是否在画布可视区域内\r\n  forceLoadNode(node) {\r\n    node = node || this.root\r\n    if (node) {\r\n      this.mindMap.emit('node_tree_render_start')\r\n      node.render(() => {\r\n        this.mindMap.emit('node_tree_render_end')\r\n      }, true)\r\n    }\r\n  }\r\n\r\n  //  注册命令\r\n  registerCommands() {\r\n    // 全选\r\n    this.selectAll = this.selectAll.bind(this)\r\n    this.mindMap.command.add('SELECT_ALL', this.selectAll)\r\n    // 回退\r\n    this.back = this.back.bind(this)\r\n    this.mindMap.command.add('BACK', this.back)\r\n    // 前进\r\n    this.forward = this.forward.bind(this)\r\n    this.mindMap.command.add('FORWARD', this.forward)\r\n    // 插入同级节点\r\n    this.insertNode = this.insertNode.bind(this)\r\n    this.mindMap.command.add('INSERT_NODE', this.insertNode)\r\n    // 插入多个同级节点\r\n    this.insertMultiNode = this.insertMultiNode.bind(this)\r\n    this.mindMap.command.add('INSERT_MULTI_NODE', this.insertMultiNode)\r\n    // 插入子节点\r\n    this.insertChildNode = this.insertChildNode.bind(this)\r\n    this.mindMap.command.add('INSERT_CHILD_NODE', this.insertChildNode)\r\n    // 插入多个子节点\r\n    this.insertMultiChildNode = this.insertMultiChildNode.bind(this)\r\n    this.mindMap.command.add(\r\n      'INSERT_MULTI_CHILD_NODE',\r\n      this.insertMultiChildNode\r\n    )\r\n    // 插入父节点\r\n    this.insertParentNode = this.insertParentNode.bind(this)\r\n    this.mindMap.command.add('INSERT_PARENT_NODE', this.insertParentNode)\r\n    // 上移节点\r\n    this.upNode = this.upNode.bind(this)\r\n    this.mindMap.command.add('UP_NODE', this.upNode)\r\n    // 下移节点\r\n    this.downNode = this.downNode.bind(this)\r\n    this.mindMap.command.add('DOWN_NODE', this.downNode)\r\n    //  将一个节点上移一个层级\r\n    this.moveUpOneLevel = this.moveUpOneLevel.bind(this)\r\n    this.mindMap.command.add('MOVE_UP_ONE_LEVEL', this.moveUpOneLevel)\r\n    // 移动节点\r\n    this.insertAfter = this.insertAfter.bind(this)\r\n    this.mindMap.command.add('INSERT_AFTER', this.insertAfter)\r\n    this.insertBefore = this.insertBefore.bind(this)\r\n    this.mindMap.command.add('INSERT_BEFORE', this.insertBefore)\r\n    this.moveNodeTo = this.moveNodeTo.bind(this)\r\n    this.mindMap.command.add('MOVE_NODE_TO', this.moveNodeTo)\r\n    // 删除节点\r\n    this.removeNode = this.removeNode.bind(this)\r\n    this.mindMap.command.add('REMOVE_NODE', this.removeNode)\r\n    // 仅删除当前节点\r\n    this.removeCurrentNode = this.removeCurrentNode.bind(this)\r\n    this.mindMap.command.add('REMOVE_CURRENT_NODE', this.removeCurrentNode)\r\n    // 粘贴节点\r\n    this.pasteNode = this.pasteNode.bind(this)\r\n    this.mindMap.command.add('PASTE_NODE', this.pasteNode)\r\n    // 剪切节点\r\n    this.cutNode = this.cutNode.bind(this)\r\n    this.mindMap.command.add('CUT_NODE', this.cutNode)\r\n    // 修改节点单个样式\r\n    this.setNodeStyle = this.setNodeStyle.bind(this)\r\n    this.mindMap.command.add('SET_NODE_STYLE', this.setNodeStyle)\r\n    // 修改节点多个样式\r\n    this.setNodeStyles = this.setNodeStyles.bind(this)\r\n    this.mindMap.command.add('SET_NODE_STYLES', this.setNodeStyles)\r\n    // 切换节点是否激活\r\n    this.setNodeActive = this.setNodeActive.bind(this)\r\n    this.mindMap.command.add('SET_NODE_ACTIVE', this.setNodeActive)\r\n    // 清除所有激活节点\r\n    this.clearActiveNode = this.clearActiveNode.bind(this)\r\n    this.mindMap.command.add('CLEAR_ACTIVE_NODE', this.clearActiveNode)\r\n    // 切换节点是否展开\r\n    this.setNodeExpand = this.setNodeExpand.bind(this)\r\n    this.mindMap.command.add('SET_NODE_EXPAND', this.setNodeExpand)\r\n    // 展开所有节点\r\n    this.expandAllNode = this.expandAllNode.bind(this)\r\n    this.mindMap.command.add('EXPAND_ALL', this.expandAllNode)\r\n    // 收起所有节点\r\n    this.unexpandAllNode = this.unexpandAllNode.bind(this)\r\n    this.mindMap.command.add('UNEXPAND_ALL', this.unexpandAllNode)\r\n    // 展开到指定层级\r\n    this.expandToLevel = this.expandToLevel.bind(this)\r\n    this.mindMap.command.add('UNEXPAND_TO_LEVEL', this.expandToLevel)\r\n    // 设置节点数据\r\n    this.setNodeData = this.setNodeData.bind(this)\r\n    this.mindMap.command.add('SET_NODE_DATA', this.setNodeData)\r\n    // 设置节点文本\r\n    this.setNodeText = this.setNodeText.bind(this)\r\n    this.mindMap.command.add('SET_NODE_TEXT', this.setNodeText)\r\n    // 设置节点图片\r\n    this.setNodeImage = this.setNodeImage.bind(this)\r\n    this.mindMap.command.add('SET_NODE_IMAGE', this.setNodeImage)\r\n    // 设置节点图标\r\n    this.setNodeIcon = this.setNodeIcon.bind(this)\r\n    this.mindMap.command.add('SET_NODE_ICON', this.setNodeIcon)\r\n    // 设置节点超链接\r\n    this.setNodeHyperlink = this.setNodeHyperlink.bind(this)\r\n    this.mindMap.command.add('SET_NODE_HYPERLINK', this.setNodeHyperlink)\r\n    // 设置节点备注\r\n    this.setNodeNote = this.setNodeNote.bind(this)\r\n    this.mindMap.command.add('SET_NODE_NOTE', this.setNodeNote)\r\n    // 设置节点附件\r\n    this.setNodeAttachment = this.setNodeAttachment.bind(this)\r\n    this.mindMap.command.add('SET_NODE_ATTACHMENT', this.setNodeAttachment)\r\n    // 设置节点标签\r\n    this.setNodeTag = this.setNodeTag.bind(this)\r\n    this.mindMap.command.add('SET_NODE_TAG', this.setNodeTag)\r\n    // 设置节点公式\r\n    this.insertFormula = this.insertFormula.bind(this)\r\n    this.mindMap.command.add('INSERT_FORMULA', this.insertFormula)\r\n    // 添加节点概要\r\n    this.addGeneralization = this.addGeneralization.bind(this)\r\n    this.mindMap.command.add('ADD_GENERALIZATION', this.addGeneralization)\r\n    // 删除节点概要\r\n    this.removeGeneralization = this.removeGeneralization.bind(this)\r\n    this.mindMap.command.add('REMOVE_GENERALIZATION', this.removeGeneralization)\r\n    // 设置节点自定义位置\r\n    this.setNodeCustomPosition = this.setNodeCustomPosition.bind(this)\r\n    this.mindMap.command.add(\r\n      'SET_NODE_CUSTOM_POSITION',\r\n      this.setNodeCustomPosition\r\n    )\r\n    // 一键整理布局\r\n    this.resetLayout = this.resetLayout.bind(this)\r\n    this.mindMap.command.add('RESET_LAYOUT', this.resetLayout)\r\n    // 设置节点形状\r\n    this.setNodeShape = this.setNodeShape.bind(this)\r\n    this.mindMap.command.add('SET_NODE_SHAPE', this.setNodeShape)\r\n    // 定位节点\r\n    this.goTargetNode = this.goTargetNode.bind(this)\r\n    this.mindMap.command.add('GO_TARGET_NODE', this.goTargetNode)\r\n    // 一键去除节点自定义样式\r\n    this.removeCustomStyles = this.removeCustomStyles.bind(this)\r\n    this.mindMap.command.add('REMOVE_CUSTOM_STYLES', this.removeCustomStyles)\r\n    // 一键去除所有节点自定义样式\r\n    this.removeAllNodeCustomStyles = this.removeAllNodeCustomStyles.bind(this)\r\n    this.mindMap.command.add(\r\n      'REMOVE_ALL_NODE_CUSTOM_STYLES',\r\n      this.removeAllNodeCustomStyles\r\n    )\r\n  }\r\n\r\n  //  注册快捷键\r\n  registerShortcutKeys() {\r\n    // 插入下级节点\r\n    this.mindMap.keyCommand.addShortcut('Tab', () => {\r\n      this.mindMap.execCommand('INSERT_CHILD_NODE')\r\n    })\r\n    // 插入下级节点\r\n    this.mindMap.keyCommand.addShortcut('Insert', () => {\r\n      this.mindMap.execCommand('INSERT_CHILD_NODE')\r\n    })\r\n    // 插入同级节点\r\n    this.mindMap.keyCommand.addShortcut('Enter', () => {\r\n      this.mindMap.execCommand('INSERT_NODE')\r\n    })\r\n    // 插入父节点\r\n    this.mindMap.keyCommand.addShortcut('Shift+Tab', () => {\r\n      this.mindMap.execCommand('INSERT_PARENT_NODE')\r\n    })\r\n    // 插入概要\r\n    this.mindMap.keyCommand.addShortcut('Control+g', () => {\r\n      this.mindMap.execCommand('ADD_GENERALIZATION')\r\n    })\r\n    // 展开/收起节点\r\n    this.toggleActiveExpand = this.toggleActiveExpand.bind(this)\r\n    this.mindMap.keyCommand.addShortcut('/', this.toggleActiveExpand)\r\n    // 删除节点\r\n    this.mindMap.keyCommand.addShortcut('Del|Backspace', () => {\r\n      this.mindMap.execCommand('REMOVE_NODE')\r\n    })\r\n    // 仅删除当前节点\r\n    this.mindMap.keyCommand.addShortcut('Shift+Backspace', () => {\r\n      this.mindMap.execCommand('REMOVE_CURRENT_NODE')\r\n    })\r\n    // 节点编辑时某些快捷键会存在冲突，需要暂时去除\r\n    this.mindMap.on('before_show_text_edit', () => {\r\n      this.startTextEdit()\r\n    })\r\n    this.mindMap.on('hide_text_edit', () => {\r\n      this.endTextEdit()\r\n    })\r\n    // 全选\r\n    this.mindMap.keyCommand.addShortcut('Control+a', () => {\r\n      this.mindMap.execCommand('SELECT_ALL')\r\n    })\r\n    // 一键整理布局\r\n    this.mindMap.keyCommand.addShortcut('Control+l', () => {\r\n      this.mindMap.execCommand('RESET_LAYOUT')\r\n    })\r\n    // 上移节点\r\n    this.mindMap.keyCommand.addShortcut('Control+Up', () => {\r\n      this.mindMap.execCommand('UP_NODE')\r\n    })\r\n    // 下移节点\r\n    this.mindMap.keyCommand.addShortcut('Control+Down', () => {\r\n      this.mindMap.execCommand('DOWN_NODE')\r\n    })\r\n    // 复制节点\r\n    this.mindMap.keyCommand.addShortcut('Control+c', () => {\r\n      this.copy()\r\n    })\r\n    // 剪切节点\r\n    this.mindMap.keyCommand.addShortcut('Control+x', () => {\r\n      this.cut()\r\n    })\r\n    // 粘贴节点\r\n    this.mindMap.keyCommand.addShortcut('Control+v', () => {\r\n      this.paste()\r\n    })\r\n    // 根节点居中显示\r\n    this.mindMap.keyCommand.addShortcut('Control+Enter', () => {\r\n      this.setRootNodeCenter()\r\n    })\r\n  }\r\n\r\n  // 派发节点激活事件\r\n  emitNodeActiveEvent(node = null, activeNodeList = [...this.activeNodeList]) {\r\n    const isChange = !checkNodeListIsEqual(\r\n      this.lastActiveNodeList,\r\n      activeNodeList\r\n    )\r\n    if (!isChange) return\r\n    this.lastActiveNodeList = [...activeNodeList]\r\n    this.mindMap.batchExecution.push('emitNodeActiveEvent', () => {\r\n      this.mindMap.emit('node_active', node, activeNodeList)\r\n    })\r\n  }\r\n\r\n  // 鼠标点击画布时清空当前激活节点列表\r\n  clearActiveNodeListOnDrawClick(e, eventType) {\r\n    if (this.activeNodeList.length <= 0) return\r\n    // 清除激活状态\r\n    let isTrueClick = true\r\n    // 是否是左键多选节点，右键拖动画布\r\n    const { useLeftKeySelectionRightKeyDrag } = this.mindMap.opt\r\n    // 如果鼠标按下和松开的距离较大，则不认为是点击事件\r\n    if (\r\n      eventType === 'contextmenu'\r\n        ? !useLeftKeySelectionRightKeyDrag\r\n        : useLeftKeySelectionRightKeyDrag\r\n    ) {\r\n      const mousedownPos = this.mindMap.event.mousedownPos\r\n      isTrueClick =\r\n        Math.abs(e.clientX - mousedownPos.x) <= 5 &&\r\n        Math.abs(e.clientY - mousedownPos.y) <= 5\r\n    }\r\n    if (isTrueClick) {\r\n      this.mindMap.execCommand('CLEAR_ACTIVE_NODE')\r\n    }\r\n  }\r\n\r\n  //  开启文字编辑，会禁用回车键和删除键相关快捷键防止冲突\r\n  startTextEdit() {\r\n    this.mindMap.keyCommand.save()\r\n  }\r\n\r\n  //  结束文字编辑，会恢复回车键和删除键相关快捷键\r\n  endTextEdit() {\r\n    this.mindMap.keyCommand.restore()\r\n  }\r\n\r\n  // 清空节点缓存池\r\n  clearCache() {\r\n    this.layout.lru.clear()\r\n    this.nodeCache = {}\r\n    this.lastNodeCache = {}\r\n  }\r\n\r\n  //   渲染\r\n  render(callback = () => {}, source) {\r\n    // 切换主题时，被收起的节点需要添加样式复位的标注\r\n    if (source === CONSTANTS.CHANGE_THEME) {\r\n      this.resetUnExpandNodeStyle()\r\n    }\r\n    // 如果当前还没有渲染完毕，不再触发渲染\r\n    if (this.isRendering) {\r\n      // 等待当前渲染完毕后再进行一次渲染\r\n      this.hasWaitRendering = true\r\n      this.waitRenderingParams = [callback, source]\r\n      return\r\n    }\r\n    this.isRendering = true\r\n    // 触发当前重新渲染的来源\r\n    this.renderSource = source\r\n    // 节点缓存\r\n    this.lastNodeCache = this.nodeCache\r\n    this.nodeCache = {}\r\n    // 重新渲染需要清除激活状态\r\n    if (this.reRender) {\r\n      this.clearActiveNodeList()\r\n    }\r\n    // 如果没有节点数据\r\n    if (!this.renderTree) {\r\n      this.isRendering = false\r\n      this.mindMap.emit('node_tree_render_end')\r\n      return\r\n    }\r\n    this.mindMap.emit('node_tree_render_start')\r\n    // 计算布局\r\n    this.root = null\r\n    this.layout.doLayout(root => {\r\n      // 删除本次渲染时不再需要的节点\r\n      Object.keys(this.lastNodeCache).forEach(uid => {\r\n        if (!this.nodeCache[uid]) {\r\n          // 从激活节点列表里删除\r\n          this.removeNodeFromActiveList(this.lastNodeCache[uid])\r\n          this.emitNodeActiveEvent()\r\n          // 调用节点的销毁方法\r\n          this.lastNodeCache[uid].destroy()\r\n        }\r\n      })\r\n      // 更新根节点\r\n      this.root = root\r\n      // 渲染节点\r\n      this.root.render(() => {\r\n        this.isRendering = false\r\n        callback && callback()\r\n        if (this.hasWaitRendering) {\r\n          const params = this.waitRenderingParams\r\n          this.hasWaitRendering = false\r\n          this.waitRenderingParams = []\r\n          this.render(...params)\r\n        } else {\r\n          this.renderSource = ''\r\n          if (this.reRender) {\r\n            this.reRender = false\r\n          }\r\n        }\r\n        this.mindMap.emit('node_tree_render_end')\r\n      })\r\n    })\r\n    this.emitNodeActiveEvent()\r\n  }\r\n\r\n  // 给当前被收起来的节点数据添加更新标志\r\n  resetUnExpandNodeStyle() {\r\n    if (!this.renderTree) return\r\n    walk(this.renderTree, null, node => {\r\n      if (!node.data.expand) {\r\n        walk(node, null, node2 => {\r\n          // 主要是触发数据新旧对比，不一样则会重新创建节点\r\n          node2.data['needUpdate'] = true\r\n        })\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  //  清除当前所有激活节点，并会触发事件\r\n  clearActiveNode() {\r\n    if (this.activeNodeList.length <= 0) {\r\n      return\r\n    }\r\n    this.clearActiveNodeList()\r\n    this.emitNodeActiveEvent(null, [])\r\n  }\r\n\r\n  //  清除当前激活的节点列表\r\n  clearActiveNodeList() {\r\n    this.activeNodeList.forEach(item => {\r\n      this.mindMap.execCommand('SET_NODE_ACTIVE', item, false)\r\n    })\r\n    this.activeNodeList = []\r\n  }\r\n\r\n  // 添加节点到激活列表里\r\n  addNodeToActiveList(node, notEmitBeforeNodeActiveEvent = false) {\r\n    if (\r\n      this.mindMap.opt.onlyOneEnableActiveNodeOnCooperate &&\r\n      node.userList.length > 0\r\n    )\r\n      return\r\n    const index = this.findActiveNodeIndex(node)\r\n    if (index === -1) {\r\n      if (!notEmitBeforeNodeActiveEvent) {\r\n        this.mindMap.emit('before_node_active', node, this.activeNodeList)\r\n      }\r\n      this.mindMap.execCommand('SET_NODE_ACTIVE', node, true)\r\n      this.activeNodeList.push(node)\r\n    }\r\n  }\r\n\r\n  // 在激活列表里移除某个节点\r\n  removeNodeFromActiveList(node) {\r\n    let index = this.findActiveNodeIndex(node)\r\n    if (index === -1) {\r\n      return\r\n    }\r\n    this.mindMap.execCommand('SET_NODE_ACTIVE', node, false)\r\n    this.activeNodeList.splice(index, 1)\r\n  }\r\n\r\n  // 手动激活多个节点，激活单个节点请直接调用节点实例的active()方法\r\n  activeMultiNode(nodeList = []) {\r\n    nodeList.forEach(node => {\r\n      // 手动派发节点激活前事件\r\n      this.mindMap.emit('before_node_active', node, this.activeNodeList)\r\n      // 激活节点，并将该节点添加到激活节点列表里\r\n      this.addNodeToActiveList(node, true)\r\n      // 手动派发节点激活事件\r\n      this.emitNodeActiveEvent(node)\r\n    })\r\n  }\r\n\r\n  // 手动取消激活多个节点\r\n  cancelActiveMultiNode(nodeList = []) {\r\n    nodeList.forEach(node => {\r\n      this.removeNodeFromActiveList(node)\r\n      this.emitNodeActiveEvent(null)\r\n    })\r\n  }\r\n\r\n  //  检索某个节点在激活列表里的索引\r\n  findActiveNodeIndex(node) {\r\n    return getNodeIndexInNodeList(node, this.activeNodeList)\r\n  }\r\n\r\n  //  全选\r\n  selectAll() {\r\n    if (this.mindMap.opt.readonly) return\r\n    walk(\r\n      this.root,\r\n      null,\r\n      node => {\r\n        if (!node.getData('isActive')) {\r\n          this.addNodeToActiveList(node)\r\n        }\r\n        // 概要节点\r\n        if (node._generalizationList && node._generalizationList.length > 0) {\r\n          node._generalizationList.forEach(item => {\r\n            const gNode = item.generalizationNode\r\n            if (!gNode.getData('isActive')) {\r\n              this.addNodeToActiveList(gNode)\r\n            }\r\n          })\r\n        }\r\n      },\r\n      null,\r\n      true,\r\n      0,\r\n      0\r\n    )\r\n    this.emitNodeActiveEvent()\r\n  }\r\n\r\n  //  回退\r\n  back(step) {\r\n    this.backForward('back', step)\r\n  }\r\n\r\n  //  前进\r\n  forward(step) {\r\n    this.backForward('forward', step)\r\n  }\r\n\r\n  // 前进回退\r\n  backForward(type, step) {\r\n    this.mindMap.execCommand('CLEAR_ACTIVE_NODE')\r\n    const data = this.mindMap.command[type](step)\r\n    if (data) {\r\n      this.renderTree = data\r\n      this.mindMap.render()\r\n    }\r\n    this.mindMap.emit('data_change', data)\r\n  }\r\n\r\n  // 获取创建新节点的行为\r\n  getNewNodeBehavior(openEdit = false, handleMultiNodes = false) {\r\n    const { createNewNodeBehavior } = this.mindMap.opt\r\n    let focusNewNode = false // 是否激活新节点\r\n    let inserting = false // 新节点是否进入编辑模式\r\n    switch (createNewNodeBehavior) {\r\n      // 默认会激活新创建的节点，并且进入编辑模式。如果同时创建了多个新节点，那么只会激活而不会进入编辑模式\r\n      case CONSTANTS.CREATE_NEW_NODE_BEHAVIOR.DEFAULT:\r\n        focusNewNode = handleMultiNodes || !openEdit\r\n        inserting = handleMultiNodes ? false : openEdit // 如果同时对多个节点插入子节点，那么无需进入编辑模式\r\n        break\r\n      // 不激活新创建的节点\r\n      case CONSTANTS.CREATE_NEW_NODE_BEHAVIOR.NOT_ACTIVE:\r\n        focusNewNode = false\r\n        inserting = false\r\n        break\r\n      // 只激活新创建的节点，不进入编辑模式\r\n      case CONSTANTS.CREATE_NEW_NODE_BEHAVIOR.ACTIVE_ONLY:\r\n        focusNewNode = true\r\n        inserting = false\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    return {\r\n      focusNewNode,\r\n      inserting\r\n    }\r\n  }\r\n\r\n  //  插入同级节点\r\n  insertNode(\r\n    openEdit = true,\r\n    appointNodes = [],\r\n    appointData = null,\r\n    appointChildren = []\r\n  ) {\r\n    appointNodes = formatDataToArray(appointNodes)\r\n    if (this.activeNodeList.length <= 0 && appointNodes.length <= 0) {\r\n      return\r\n    }\r\n    this.textEdit.hideEditTextBox()\r\n    const {\r\n      defaultInsertSecondLevelNodeText,\r\n      defaultInsertBelowSecondLevelNodeText\r\n    } = this.mindMap.opt\r\n    const list = appointNodes.length > 0 ? appointNodes : this.activeNodeList\r\n    const handleMultiNodes = list.length > 1\r\n    const isRichText = this.hasRichTextPlugin()\r\n    const { focusNewNode, inserting } = this.getNewNodeBehavior(\r\n      openEdit,\r\n      handleMultiNodes\r\n    )\r\n    const params = {\r\n      expand: true,\r\n      richText: isRichText,\r\n      isActive: focusNewNode // 如果同时对多个节点插入子节点，那么需要把新增的节点设为激活状态。如果不进入编辑状态，那么也需要手动设为激活状态\r\n    }\r\n    if (isRichText) params.resetRichText = true\r\n    // 动态指定的子节点数据也需要添加相关属性\r\n    appointChildren = addDataToAppointNodes(appointChildren, params)\r\n    const alreadyIsRichText = appointData && appointData.richText\r\n    let createNewId = false\r\n    list.forEach(node => {\r\n      if (node.isGeneralization || node.isRoot) {\r\n        return\r\n      }\r\n      appointChildren = simpleDeepClone(appointChildren)\r\n      const parent = node.parent\r\n      const isOneLayer = node.layerIndex === 1\r\n      // 新插入节点的默认文本\r\n      const text = isOneLayer\r\n        ? defaultInsertSecondLevelNodeText\r\n        : defaultInsertBelowSecondLevelNodeText\r\n      // 计算插入位置\r\n      const index = getNodeDataIndex(node)\r\n      // 如果指定的数据就是富文本格式，那么不需要重新创建\r\n      if (alreadyIsRichText && params.resetRichText) {\r\n        delete params.resetRichText\r\n      }\r\n      const newNodeData = {\r\n        inserting,\r\n        data: {\r\n          text: text,\r\n          ...params,\r\n          uid: createUid(),\r\n          ...(appointData || {})\r\n        },\r\n        children: [...createUidForAppointNodes(appointChildren, createNewId)]\r\n      }\r\n      createNewId = true\r\n      parent.nodeData.children.splice(index + 1, 0, newNodeData)\r\n    })\r\n    // 如果同时对多个节点插入子节点，需要清除原来激活的节点\r\n    if (focusNewNode) {\r\n      this.clearActiveNodeList()\r\n    }\r\n    this.mindMap.render()\r\n  }\r\n\r\n  // 插入多个同级节点\r\n  insertMultiNode(appointNodes, nodeList) {\r\n    if (!nodeList || nodeList.length <= 0) return\r\n    appointNodes = formatDataToArray(appointNodes)\r\n    if (this.activeNodeList.length <= 0 && appointNodes.length <= 0) {\r\n      return\r\n    }\r\n    this.textEdit.hideEditTextBox()\r\n    const list = appointNodes.length > 0 ? appointNodes : this.activeNodeList\r\n    const isRichText = this.hasRichTextPlugin()\r\n    const { focusNewNode } = this.getNewNodeBehavior(false, true)\r\n    const params = {\r\n      expand: true,\r\n      richText: isRichText,\r\n      isActive: focusNewNode\r\n    }\r\n    if (isRichText) params.resetRichText = true\r\n    nodeList = addDataToAppointNodes(nodeList, params)\r\n    let createNewId = false\r\n    list.forEach(node => {\r\n      if (node.isGeneralization || node.isRoot) {\r\n        return\r\n      }\r\n      nodeList = simpleDeepClone(nodeList)\r\n      const parent = node.parent\r\n      // 计算插入位置\r\n      const index = getNodeDataIndex(node)\r\n      const newNodeList = createUidForAppointNodes(nodeList, createNewId)\r\n      createNewId = true\r\n      parent.nodeData.children.splice(index + 1, 0, ...newNodeList)\r\n    })\r\n    if (focusNewNode) {\r\n      this.clearActiveNodeList()\r\n    }\r\n    this.mindMap.render()\r\n  }\r\n\r\n  //  插入子节点\r\n  insertChildNode(\r\n    openEdit = true,\r\n    appointNodes = [],\r\n    appointData = null,\r\n    appointChildren = []\r\n  ) {\r\n    appointNodes = formatDataToArray(appointNodes)\r\n    if (this.activeNodeList.length <= 0 && appointNodes.length <= 0) {\r\n      return\r\n    }\r\n    this.textEdit.hideEditTextBox()\r\n    const {\r\n      defaultInsertSecondLevelNodeText,\r\n      defaultInsertBelowSecondLevelNodeText\r\n    } = this.mindMap.opt\r\n    const list = appointNodes.length > 0 ? appointNodes : this.activeNodeList\r\n    const handleMultiNodes = list.length > 1\r\n    const isRichText = this.hasRichTextPlugin()\r\n    const { focusNewNode, inserting } = this.getNewNodeBehavior(\r\n      openEdit,\r\n      handleMultiNodes\r\n    )\r\n    const params = {\r\n      expand: true,\r\n      richText: isRichText,\r\n      isActive: focusNewNode\r\n    }\r\n    if (isRichText) params.resetRichText = true\r\n    // 动态指定的子节点数据也需要添加相关属性\r\n    appointChildren = addDataToAppointNodes(appointChildren, params)\r\n    const alreadyIsRichText = appointData && appointData.richText\r\n    let createNewId = false\r\n    list.forEach(node => {\r\n      if (node.isGeneralization) {\r\n        return\r\n      }\r\n      appointChildren = simpleDeepClone(appointChildren)\r\n      if (!node.nodeData.children) {\r\n        node.nodeData.children = []\r\n      }\r\n      const text = node.isRoot\r\n        ? defaultInsertSecondLevelNodeText\r\n        : defaultInsertBelowSecondLevelNodeText\r\n      // 如果指定的数据就是富文本格式，那么不需要重新创建\r\n      if (alreadyIsRichText && params.resetRichText) {\r\n        delete params.resetRichText\r\n      }\r\n      const newNode = {\r\n        inserting,\r\n        data: {\r\n          text: text,\r\n          uid: createUid(),\r\n          ...params,\r\n          ...(appointData || {})\r\n        },\r\n        children: [...createUidForAppointNodes(appointChildren, createNewId)]\r\n      }\r\n      createNewId = true\r\n      node.nodeData.children.push(newNode)\r\n      // 插入子节点时自动展开子节点\r\n      node.setData({\r\n        expand: true\r\n      })\r\n    })\r\n    // 如果同时对多个节点插入子节点，需要清除原来激活的节点\r\n    if (focusNewNode) {\r\n      this.clearActiveNodeList()\r\n    }\r\n    this.mindMap.render()\r\n  }\r\n\r\n  // 插入多个子节点\r\n  insertMultiChildNode(appointNodes, childList) {\r\n    if (!childList || childList.length <= 0) return\r\n    appointNodes = formatDataToArray(appointNodes)\r\n    if (this.activeNodeList.length <= 0 && appointNodes.length <= 0) {\r\n      return\r\n    }\r\n    this.textEdit.hideEditTextBox()\r\n    const list = appointNodes.length > 0 ? appointNodes : this.activeNodeList\r\n    const isRichText = this.hasRichTextPlugin()\r\n    const { focusNewNode } = this.getNewNodeBehavior(false, true)\r\n    const params = {\r\n      expand: true,\r\n      richText: isRichText,\r\n      isActive: focusNewNode\r\n    }\r\n    if (isRichText) params.resetRichText = true\r\n    childList = addDataToAppointNodes(childList, params)\r\n    let createNewId = false\r\n    list.forEach(node => {\r\n      if (node.isGeneralization) {\r\n        return\r\n      }\r\n      childList = simpleDeepClone(childList)\r\n      if (!node.nodeData.children) {\r\n        node.nodeData.children = []\r\n      }\r\n      childList = createUidForAppointNodes(childList, createNewId)\r\n      // 第一个引用不需要重新创建uid，后面的需要重新创建，否则id会重复\r\n      createNewId = true\r\n      node.nodeData.children.push(...childList)\r\n      // 插入子节点时自动展开子节点\r\n      node.setData({\r\n        expand: true\r\n      })\r\n    })\r\n    if (focusNewNode) {\r\n      this.clearActiveNodeList()\r\n    }\r\n    this.mindMap.render()\r\n  }\r\n\r\n  // 插入父节点\r\n  insertParentNode(openEdit = true, appointNodes, appointData) {\r\n    appointNodes = formatDataToArray(appointNodes)\r\n    if (this.activeNodeList.length <= 0 && appointNodes.length <= 0) {\r\n      return\r\n    }\r\n    this.textEdit.hideEditTextBox()\r\n    const {\r\n      defaultInsertSecondLevelNodeText,\r\n      defaultInsertBelowSecondLevelNodeText\r\n    } = this.mindMap.opt\r\n    const list = appointNodes.length > 0 ? appointNodes : this.activeNodeList\r\n    const handleMultiNodes = list.length > 1\r\n    const isRichText = this.hasRichTextPlugin()\r\n    const { focusNewNode, inserting } = this.getNewNodeBehavior(\r\n      openEdit,\r\n      handleMultiNodes\r\n    )\r\n    const params = {\r\n      expand: true,\r\n      richText: isRichText,\r\n      isActive: focusNewNode\r\n    }\r\n    if (isRichText) params.resetRichText = true\r\n    const alreadyIsRichText = appointData && appointData.richText\r\n    list.forEach(node => {\r\n      if (node.isGeneralization || node.isRoot) {\r\n        return\r\n      }\r\n      const text =\r\n        node.layerIndex === 1\r\n          ? defaultInsertSecondLevelNodeText\r\n          : defaultInsertBelowSecondLevelNodeText\r\n      // 如果指定的数据就是富文本格式，那么不需要重新创建\r\n      if (alreadyIsRichText && params.resetRichText) {\r\n        delete params.resetRichText\r\n      }\r\n      const newNode = {\r\n        inserting,\r\n        data: {\r\n          text: text,\r\n          uid: createUid(),\r\n          ...params,\r\n          ...(appointData || {})\r\n        },\r\n        children: [node.nodeData]\r\n      }\r\n      const parent = node.parent\r\n      // 获取当前节点所在位置\r\n      const index = getNodeDataIndex(node)\r\n      parent.nodeData.children.splice(index, 1, newNode)\r\n    })\r\n    // 如果同时对多个节点插入子节点，需要清除原来激活的节点\r\n    if (focusNewNode) {\r\n      this.clearActiveNodeList()\r\n    }\r\n    this.mindMap.render()\r\n  }\r\n\r\n  //  上移节点，多个节点只会操作第一个节点\r\n  upNode(appointNode) {\r\n    if (this.activeNodeList.length <= 0 && !appointNode) {\r\n      return\r\n    }\r\n    const list = appointNode ? [appointNode] : this.activeNodeList\r\n    const node = list[0]\r\n    if (node.isRoot) {\r\n      return\r\n    }\r\n    let parent = node.parent\r\n    let childList = parent.children\r\n    let index = getNodeIndexInNodeList(node, childList)\r\n    if (index === -1 || index === 0) {\r\n      return\r\n    }\r\n    let insertIndex = index - 1\r\n    // 节点实例\r\n    childList.splice(index, 1)\r\n    childList.splice(insertIndex, 0, node)\r\n    // 节点数据\r\n    parent.nodeData.children.splice(index, 1)\r\n    parent.nodeData.children.splice(insertIndex, 0, node.nodeData)\r\n    this.mindMap.render()\r\n  }\r\n\r\n  //  下移节点，多个节点只会操作第一个节点\r\n  downNode(appointNode) {\r\n    if (this.activeNodeList.length <= 0 && !appointNode) {\r\n      return\r\n    }\r\n    const list = appointNode ? [appointNode] : this.activeNodeList\r\n    const node = list[0]\r\n    if (node.isRoot) {\r\n      return\r\n    }\r\n    let parent = node.parent\r\n    let childList = parent.children\r\n    let index = getNodeIndexInNodeList(node, childList)\r\n    if (index === -1 || index === childList.length - 1) {\r\n      return\r\n    }\r\n    let insertIndex = index + 1\r\n    // 节点实例\r\n    childList.splice(index, 1)\r\n    childList.splice(insertIndex, 0, node)\r\n    // 节点数据\r\n    parent.nodeData.children.splice(index, 1)\r\n    parent.nodeData.children.splice(insertIndex, 0, node.nodeData)\r\n    this.mindMap.render()\r\n  }\r\n\r\n  // 将节点上移一个层级，多个节点只会操作第一个节点\r\n  moveUpOneLevel(node) {\r\n    node = node || this.activeNodeList[0]\r\n    if (!node || node.isRoot || node.layerIndex <= 1) {\r\n      return\r\n    }\r\n    const parent = node.parent\r\n    const grandpa = parent.parent\r\n    const index = getNodeIndexInNodeList(node, parent.children)\r\n    const parentIndex = getNodeIndexInNodeList(parent, grandpa.children)\r\n    // 节点数据\r\n    parent.nodeData.children.splice(index, 1)\r\n    grandpa.nodeData.children.splice(parentIndex + 1, 0, node.nodeData)\r\n    this.mindMap.render()\r\n  }\r\n\r\n  // 移除节点数据的自定义样式的内部方法\r\n  _handleRemoveCustomStyles(nodeData) {\r\n    let hasCustomStyles = false\r\n    Object.keys(nodeData).forEach(key => {\r\n      if (checkIsNodeStyleDataKey(key)) {\r\n        hasCustomStyles = true\r\n        delete nodeData[key]\r\n      }\r\n    })\r\n    // 如果是富文本，那么直接全部重新创建，因为有些样式是通过标签来渲染的\r\n    if (this.hasRichTextPlugin()) {\r\n      hasCustomStyles = true\r\n      nodeData.resetRichText = true\r\n    }\r\n    return hasCustomStyles\r\n  }\r\n\r\n  // 一键去除自定义样式\r\n  removeCustomStyles(node) {\r\n    node = node || this.activeNodeList[0]\r\n    if (!node) {\r\n      return\r\n    }\r\n    const hasCustomStyles = this._handleRemoveCustomStyles(node.getData())\r\n    if (hasCustomStyles) {\r\n      this.reRenderNodeCheckChange(node)\r\n    }\r\n  }\r\n\r\n  // 一键去除所有节点自定义样式\r\n  removeAllNodeCustomStyles(appointNodes) {\r\n    appointNodes = formatDataToArray(appointNodes)\r\n    let hasCustomStyles = false\r\n    // 指定了节点列表，那么遍历该节点列表\r\n    if (appointNodes.length > 0) {\r\n      appointNodes.forEach(node => {\r\n        const _hasCustomStyles = this._handleRemoveCustomStyles(node.getData())\r\n        if (_hasCustomStyles) hasCustomStyles = true\r\n      })\r\n    } else {\r\n      // 否则遍历整棵树\r\n      if (!this.renderTree) return\r\n      walk(this.renderTree, null, node => {\r\n        const _hasCustomStyles = this._handleRemoveCustomStyles(node.data)\r\n        if (_hasCustomStyles) hasCustomStyles = true\r\n        // 不要忘记概要节点\r\n        const generalizationList = formatGetNodeGeneralization(node.data)\r\n        if (generalizationList.length > 0) {\r\n          generalizationList.forEach(generalizationData => {\r\n            const _hasCustomStyles =\r\n              this._handleRemoveCustomStyles(generalizationData)\r\n            if (_hasCustomStyles) hasCustomStyles = true\r\n          })\r\n        }\r\n      })\r\n    }\r\n    if (hasCustomStyles) {\r\n      this.mindMap.reRender()\r\n    }\r\n  }\r\n\r\n  // 复制节点\r\n  copy() {\r\n    this.beingCopyData = this.copyNode()\r\n    if (!this.beingCopyData) return\r\n    if (!this.mindMap.opt.disabledClipboard) {\r\n      setDataToClipboard(createSmmFormatData(this.beingCopyData))\r\n    }\r\n  }\r\n\r\n  // 剪切节点\r\n  cut() {\r\n    this.mindMap.execCommand('CUT_NODE', copyData => {\r\n      this.beingCopyData = copyData\r\n      if (!this.mindMap.opt.disabledClipboard) {\r\n        setDataToClipboard(createSmmFormatData(copyData))\r\n      }\r\n    })\r\n  }\r\n\r\n  // 非https下复制黏贴，获取内容方法\r\n  handlePaste(event) {\r\n    const { disabledClipboard } = this.mindMap.opt\r\n    if (disabledClipboard) return\r\n    const clipboardData =\r\n      event.clipboardData || event.originalEvent.clipboardData\r\n    const items = clipboardData.items\r\n    let img = null\r\n    let text = ''\r\n    Array.from(items).forEach(item => {\r\n      if (item.type.indexOf('image') > -1) {\r\n        img = item.getAsFile()\r\n      }\r\n      if (item.type.indexOf('text') > -1) {\r\n        text = clipboardData.getData('text')\r\n      }\r\n    })\r\n    this.paste()\r\n  }\r\n\r\n  // 粘贴\r\n  async paste() {\r\n    const {\r\n      errorHandler,\r\n      handleIsSplitByWrapOnPasteCreateNewNode,\r\n      handleNodePasteImg,\r\n      disabledClipboard,\r\n      onlyPasteTextWhenHasImgAndText\r\n    } = this.mindMap.opt\r\n    // 如果支持剪贴板操作，那么以剪贴板数据为准\r\n    if (!disabledClipboard && checkClipboardReadEnable()) {\r\n      try {\r\n        const res = await getDataFromClipboard()\r\n        let text = res.text || ''\r\n        let img = res.img || null\r\n        // 存在文本，则创建子节点\r\n        if (text) {\r\n          // 判断粘贴的是否是simple-mind-map的数据\r\n          let smmData = null\r\n          let useDefault = true\r\n          // 用户自定义处理\r\n          if (this.mindMap.opt.customHandleClipboardText) {\r\n            try {\r\n              const res = await this.mindMap.opt.customHandleClipboardText(text)\r\n              if (!isUndef(res)) {\r\n                useDefault = false\r\n                const checkRes = checkSmmFormatData(res)\r\n                if (checkRes.isSmm) {\r\n                  smmData = checkRes.data\r\n                } else {\r\n                  text = checkRes.data\r\n                }\r\n              }\r\n            } catch (error) {\r\n              errorHandler(\r\n                ERROR_TYPES.CUSTOM_HANDLE_CLIPBOARD_TEXT_ERROR,\r\n                error\r\n              )\r\n            }\r\n          }\r\n          // 默认处理\r\n          if (useDefault) {\r\n            const checkRes = checkSmmFormatData(text)\r\n            if (checkRes.isSmm) {\r\n              smmData = checkRes.data\r\n            } else {\r\n              text = checkRes.data\r\n            }\r\n          }\r\n          if (smmData) {\r\n            this.mindMap.execCommand(\r\n              'INSERT_MULTI_CHILD_NODE',\r\n              [],\r\n              Array.isArray(smmData) ? smmData : [smmData]\r\n            )\r\n          } else {\r\n            // 如果是富文本模式，那么需要转义特殊字符\r\n            if (this.hasRichTextPlugin()) {\r\n              text = htmlEscape(text)\r\n            }\r\n            const textArr = text\r\n              .split(new RegExp('\\r?\\n|(?<!\\n)\\r', 'g'))\r\n              .filter(item => {\r\n                return !!item\r\n              })\r\n            // 判断是否需要根据换行自动分割节点\r\n            if (textArr.length > 1 && handleIsSplitByWrapOnPasteCreateNewNode) {\r\n              handleIsSplitByWrapOnPasteCreateNewNode()\r\n                .then(() => {\r\n                  this.mindMap.execCommand(\r\n                    'INSERT_MULTI_CHILD_NODE',\r\n                    [],\r\n                    textArr.map(item => {\r\n                      return {\r\n                        data: {\r\n                          text: item\r\n                        },\r\n                        children: []\r\n                      }\r\n                    })\r\n                  )\r\n                })\r\n                .catch(() => {\r\n                  this.mindMap.execCommand('INSERT_CHILD_NODE', false, [], {\r\n                    text\r\n                  })\r\n                })\r\n            } else {\r\n              this.mindMap.execCommand('INSERT_CHILD_NODE', false, [], {\r\n                text\r\n              })\r\n            }\r\n          }\r\n        }\r\n        // 存在图片，则添加到当前激活节点\r\n        if (img && (!text || !onlyPasteTextWhenHasImgAndText)) {\r\n          try {\r\n            let imgData = null\r\n            // 自定义图片处理函数\r\n            if (\r\n              handleNodePasteImg &&\r\n              typeof handleNodePasteImg === 'function'\r\n            ) {\r\n              imgData = await handleNodePasteImg(img)\r\n            } else {\r\n              imgData = await loadImage(img)\r\n            }\r\n            if (this.activeNodeList.length > 0) {\r\n              this.activeNodeList.forEach(node => {\r\n                this.mindMap.execCommand('SET_NODE_IMAGE', node, {\r\n                  url: imgData.url,\r\n                  title: '',\r\n                  width: imgData.size.width,\r\n                  height: imgData.size.height\r\n                })\r\n              })\r\n            }\r\n          } catch (error) {\r\n            errorHandler(ERROR_TYPES.LOAD_CLIPBOARD_IMAGE_ERROR, error)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        errorHandler(ERROR_TYPES.READ_CLIPBOARD_ERROR, error)\r\n      }\r\n    } else {\r\n      // 禁用剪贴板或不支持剪贴板时\r\n      // 粘贴画布内的节点数据\r\n      if (this.beingCopyData) {\r\n        this.mindMap.execCommand('PASTE_NODE', this.beingCopyData)\r\n      }\r\n    }\r\n  }\r\n\r\n  //  将节点移动到另一个节点的前面\r\n  insertBefore(node, exist) {\r\n    this.insertTo(node, exist, 'before')\r\n  }\r\n\r\n  //  将节点移动到另一个节点的后面\r\n  insertAfter(node, exist) {\r\n    this.insertTo(node, exist, 'after')\r\n  }\r\n\r\n  // 将节点移动到另一个节点的前面或后面\r\n  insertTo(node, exist, dir = 'before') {\r\n    let nodeList = formatDataToArray(node)\r\n    nodeList = nodeList.filter(item => {\r\n      return !item.isRoot\r\n    })\r\n    if (dir === 'after') {\r\n      nodeList.reverse()\r\n    }\r\n    nodeList.forEach(item => {\r\n      // 移动节点\r\n      let nodeParent = item.parent\r\n      let nodeBorthers = nodeParent.children\r\n      let nodeIndex = getNodeIndexInNodeList(item, nodeBorthers)\r\n      if (nodeIndex === -1) {\r\n        return\r\n      }\r\n      nodeBorthers.splice(nodeIndex, 1)\r\n      nodeParent.nodeData.children.splice(nodeIndex, 1)\r\n\r\n      // 目标节点\r\n      let existParent = exist.parent\r\n      let existBorthers = existParent.children\r\n      let existIndex = getNodeIndexInNodeList(exist, existBorthers)\r\n      if (existIndex === -1) {\r\n        return\r\n      }\r\n      if (dir === 'after') {\r\n        existIndex++\r\n      }\r\n      existBorthers.splice(existIndex, 0, item)\r\n      existParent.nodeData.children.splice(existIndex, 0, item.nodeData)\r\n    })\r\n    this.mindMap.render()\r\n  }\r\n\r\n  //  移除节点\r\n  removeNode(appointNodes = []) {\r\n    appointNodes = formatDataToArray(appointNodes)\r\n    if (this.activeNodeList.length <= 0 && appointNodes.length <= 0) {\r\n      return\r\n    }\r\n    // 删除节点后需要激活的节点\r\n    let needActiveNode = null\r\n    let isAppointNodes = appointNodes.length > 0\r\n    let list = isAppointNodes ? appointNodes : this.activeNodeList\r\n    let root = list.find(node => {\r\n      return node.isRoot\r\n    })\r\n    if (root) {\r\n      this.clearActiveNodeList()\r\n      root.children = []\r\n      root.nodeData.children = []\r\n    } else {\r\n      // 如果只选中了一个节点，删除后激活其兄弟节点或者父节点\r\n      needActiveNode = this.getNextActiveNode(list)\r\n      for (let i = 0; i < list.length; i++) {\r\n        const node = list[i]\r\n        const currentEditNode = this.textEdit.getCurrentEditNode()\r\n        if (\r\n          currentEditNode &&\r\n          currentEditNode.getData('uid') === node.getData('uid')\r\n        ) {\r\n          // 如果当前节点正在编辑中，那么先完成编辑\r\n          this.textEdit.hideEditTextBox()\r\n        }\r\n        if (isAppointNodes) list.splice(i, 1)\r\n        if (node.isGeneralization) {\r\n          this.deleteNodeGeneralization(node)\r\n          this.removeNodeFromActiveList(node)\r\n          i--\r\n        } else {\r\n          this.removeNodeFromActiveList(node)\r\n          removeFromParentNodeData(node)\r\n          i--\r\n        }\r\n      }\r\n    }\r\n    this.activeNodeList = []\r\n    // 激活被删除节点的兄弟节点或父节点\r\n    if (needActiveNode) {\r\n      this.addNodeToActiveList(needActiveNode)\r\n    }\r\n    this.emitNodeActiveEvent()\r\n    this.mindMap.render()\r\n  }\r\n\r\n  // 删除概要节点，即从所属节点里删除该概要\r\n  deleteNodeGeneralization(node) {\r\n    const targetNode = node.generalizationBelongNode\r\n    const index = targetNode.getGeneralizationNodeIndex(node)\r\n    let generalization = targetNode.getData('generalization')\r\n    if (Array.isArray(generalization)) {\r\n      generalization.splice(index, 1)\r\n    } else {\r\n      generalization = null\r\n    }\r\n    // 删除概要节点\r\n    this.mindMap.execCommand('SET_NODE_DATA', targetNode, {\r\n      generalization\r\n    })\r\n    this.closeHighlightNode()\r\n  }\r\n\r\n  // 仅删除当前节点\r\n  removeCurrentNode(appointNodes = []) {\r\n    appointNodes = formatDataToArray(appointNodes)\r\n    if (this.activeNodeList.length <= 0 && appointNodes.length <= 0) {\r\n      return\r\n    }\r\n    let isAppointNodes = appointNodes.length > 0\r\n    let list = isAppointNodes ? appointNodes : this.activeNodeList\r\n    list = list.filter(node => {\r\n      return !node.isRoot\r\n    })\r\n    // 删除节点后需要激活的节点，如果只选中了一个节点，删除后激活其兄弟节点或者父节点\r\n    let needActiveNode = this.getNextActiveNode(list)\r\n    for (let i = 0; i < list.length; i++) {\r\n      let node = list[i]\r\n      if (node.isGeneralization) {\r\n        // 删除概要节点\r\n        this.deleteNodeGeneralization(node)\r\n      } else {\r\n        const parent = node.parent\r\n        const index = getNodeDataIndex(node)\r\n        parent.nodeData.children.splice(\r\n          index,\r\n          1,\r\n          ...(node.nodeData.children || [])\r\n        )\r\n      }\r\n    }\r\n    this.activeNodeList = []\r\n    // 激活被删除节点的兄弟节点或父节点\r\n    if (needActiveNode) {\r\n      this.addNodeToActiveList(needActiveNode)\r\n    }\r\n    this.emitNodeActiveEvent()\r\n    this.mindMap.render()\r\n  }\r\n\r\n  // 计算下一个可激活的节点\r\n  getNextActiveNode(deleteList) {\r\n    // 删除多个节点不自动激活相邻节点\r\n    if (deleteList.length !== 1) return null\r\n    // 被删除的节点不在当前激活的节点列表里，不激活相邻节点\r\n    if (this.findActiveNodeIndex(deleteList[0]) === -1) return null\r\n    let needActiveNode = null\r\n    if (\r\n      this.activeNodeList.length === 1 &&\r\n      !this.activeNodeList[0].isGeneralization &&\r\n      this.mindMap.opt.deleteNodeActive\r\n    ) {\r\n      const node = this.activeNodeList[0]\r\n      const broList = node.parent.children\r\n      const nodeIndex = getNodeIndexInNodeList(node, broList)\r\n      // 如果后面有兄弟节点\r\n      if (nodeIndex < broList.length - 1) {\r\n        needActiveNode = broList[nodeIndex + 1]\r\n      } else {\r\n        // 如果前面有兄弟节点\r\n        if (nodeIndex > 0) {\r\n          needActiveNode = broList[nodeIndex - 1]\r\n        } else {\r\n          // 没有兄弟节点\r\n          needActiveNode = node.parent\r\n        }\r\n      }\r\n    }\r\n    return needActiveNode\r\n  }\r\n\r\n  //  复制节点\r\n  copyNode() {\r\n    if (this.activeNodeList.length <= 0) {\r\n      return null\r\n    }\r\n    let nodeList = getTopAncestorsFomNodeList(this.activeNodeList)\r\n    nodeList = sortNodeList(nodeList)\r\n    return nodeList.map(node => {\r\n      return copyNodeTree({}, node, true)\r\n    })\r\n  }\r\n\r\n  //  剪切节点\r\n  cutNode(callback) {\r\n    if (this.activeNodeList.length <= 0) {\r\n      return\r\n    }\r\n    // 找出激活节点中的顶层节点列表，并过滤掉根节点\r\n    let nodeList = getTopAncestorsFomNodeList(this.activeNodeList).filter(\r\n      node => {\r\n        return !node.isRoot\r\n      }\r\n    )\r\n    nodeList = sortNodeList(nodeList)\r\n    // 复制数据\r\n    const copyData = nodeList.map(node => {\r\n      return copyNodeTree({}, node, true)\r\n    })\r\n    // 从父节点的数据中移除\r\n    nodeList.forEach(node => {\r\n      removeFromParentNodeData(node)\r\n    })\r\n    // 清空激活节点列表\r\n    this.clearActiveNodeList()\r\n    this.mindMap.render()\r\n    if (callback && typeof callback === 'function') {\r\n      callback(copyData)\r\n    }\r\n  }\r\n\r\n  //  移动节点作为另一个节点的子节点\r\n  moveNodeTo(node, toNode) {\r\n    let nodeList = formatDataToArray(node)\r\n    nodeList = nodeList.filter(item => {\r\n      return !item.isRoot\r\n    })\r\n    nodeList.forEach(item => {\r\n      this.removeNodeFromActiveList(item)\r\n      removeFromParentNodeData(item)\r\n      toNode.setData({\r\n        expand: true\r\n      })\r\n      toNode.nodeData.children.push(item.nodeData)\r\n    })\r\n    this.emitNodeActiveEvent()\r\n    this.mindMap.render()\r\n  }\r\n\r\n  //   粘贴节点到节点\r\n  pasteNode(data) {\r\n    data = formatDataToArray(data)\r\n    this.mindMap.execCommand('INSERT_MULTI_CHILD_NODE', [], data)\r\n  }\r\n\r\n  //  设置节点样式\r\n  setNodeStyle(node, prop, value) {\r\n    const data = {\r\n      [prop]: value\r\n    }\r\n    this.setNodeDataRender(node, data)\r\n    // 更新了连线的样式\r\n    if (lineStyleProps.includes(prop)) {\r\n      (node.parent || node).renderLine(true)\r\n    }\r\n  }\r\n\r\n  //  设置节点多个样式\r\n  setNodeStyles(node, style) {\r\n    const data = { ...style }\r\n    this.setNodeDataRender(node, data)\r\n    // 更新了连线的样式\r\n    let props = Object.keys(style)\r\n    let hasLineStyleProps = false\r\n    props.forEach(key => {\r\n      if (lineStyleProps.includes(key)) {\r\n        hasLineStyleProps = true\r\n      }\r\n    })\r\n    if (hasLineStyleProps) {\r\n      (node.parent || node).renderLine(true)\r\n    }\r\n  }\r\n\r\n  //  设置节点是否激活\r\n  setNodeActive(node, active) {\r\n    this.mindMap.execCommand('SET_NODE_DATA', node, {\r\n      isActive: active\r\n    })\r\n    node.updateNodeByActive(active)\r\n  }\r\n\r\n  //  设置节点是否展开\r\n  setNodeExpand(node, expand) {\r\n    this.mindMap.execCommand('SET_NODE_DATA', node, {\r\n      expand\r\n    })\r\n    this.mindMap.render()\r\n  }\r\n\r\n  //  展开所有\r\n  expandAllNode(uid = '') {\r\n    if (!this.renderTree) return\r\n\r\n    const _walk = (node, enableExpand) => {\r\n      // 如果该节点为目标节点，那么修改允许展开的标志\r\n      if (!enableExpand && node.data.uid === uid) {\r\n        enableExpand = true\r\n      }\r\n      if (enableExpand && !node.data.expand) {\r\n        node.data.expand = true\r\n      }\r\n      if (node.children && node.children.length > 0) {\r\n        node.children.forEach(child => {\r\n          _walk(child, enableExpand)\r\n        })\r\n      }\r\n    }\r\n    _walk(this.renderTree, !uid)\r\n\r\n    this.mindMap.render()\r\n  }\r\n\r\n  //  收起所有\r\n  unexpandAllNode(isSetRootNodeCenter = true, uid = '') {\r\n    if (!this.renderTree) return\r\n\r\n    const _walk = (node, isRoot, enableUnExpand) => {\r\n      // 如果该节点为目标节点，那么修改允许展开的标志\r\n      if (!enableUnExpand && node.data.uid === uid) {\r\n        enableUnExpand = true\r\n      }\r\n      if (\r\n        enableUnExpand &&\r\n        !isRoot &&\r\n        node.children &&\r\n        node.children.length > 0\r\n      ) {\r\n        node.data.expand = false\r\n      }\r\n      if (node.children && node.children.length > 0) {\r\n        node.children.forEach(child => {\r\n          _walk(child, false, enableUnExpand)\r\n        })\r\n      }\r\n    }\r\n    _walk(this.renderTree, true, !uid)\r\n\r\n    this.mindMap.render(() => {\r\n      if (isSetRootNodeCenter) {\r\n        this.setRootNodeCenter()\r\n      }\r\n    })\r\n  }\r\n\r\n  //  展开到指定层级\r\n  expandToLevel(level) {\r\n    if (!this.renderTree) return\r\n    walk(\r\n      this.renderTree,\r\n      null,\r\n      (node, parent, isRoot, layerIndex) => {\r\n        const expand = layerIndex < level\r\n        if (expand) {\r\n          node.data.expand = true\r\n        } else if (!isRoot && node.children && node.children.length > 0) {\r\n          node.data.expand = false\r\n        }\r\n      },\r\n      null,\r\n      true,\r\n      0,\r\n      0\r\n    )\r\n    this.mindMap.render()\r\n  }\r\n\r\n  //  切换激活节点的展开状态\r\n  toggleActiveExpand() {\r\n    this.activeNodeList.forEach(node => {\r\n      if (node.nodeData.children.length <= 0 || node.isRoot) {\r\n        return\r\n      }\r\n      this.toggleNodeExpand(node)\r\n    })\r\n  }\r\n\r\n  //  切换节点展开状态\r\n  toggleNodeExpand(node) {\r\n    this.mindMap.execCommand('SET_NODE_EXPAND', node, !node.getData('expand'))\r\n  }\r\n\r\n  //  设置节点文本\r\n  setNodeText(node, text, richText, resetRichText) {\r\n    richText = richText === undefined ? node.getData('richText') : richText\r\n    this.setNodeDataRender(node, {\r\n      text,\r\n      richText,\r\n      resetRichText\r\n    })\r\n  }\r\n\r\n  //  设置节点图片\r\n  setNodeImage(node, data) {\r\n    const {\r\n      url,\r\n      title,\r\n      width,\r\n      height,\r\n      custom = false\r\n    } = data || { url: '', title: '', width: 0, height: 0, custom: false }\r\n    this.setNodeDataRender(node, {\r\n      image: url,\r\n      imageTitle: title || '',\r\n      imageSize: {\r\n        width,\r\n        height,\r\n        custom\r\n      }\r\n    })\r\n  }\r\n\r\n  //  设置节点图标\r\n  setNodeIcon(node, icons) {\r\n    this.setNodeDataRender(node, {\r\n      icon: icons\r\n    })\r\n  }\r\n\r\n  //  设置节点超链接\r\n  setNodeHyperlink(node, link, title = '') {\r\n    this.setNodeDataRender(node, {\r\n      hyperlink: link,\r\n      hyperlinkTitle: title\r\n    })\r\n  }\r\n\r\n  //  设置节点备注\r\n  setNodeNote(node, note) {\r\n    this.setNodeDataRender(node, {\r\n      note\r\n    })\r\n  }\r\n\r\n  //  设置节点附件\r\n  setNodeAttachment(node, url, name = '') {\r\n    this.setNodeDataRender(node, {\r\n      attachmentUrl: url,\r\n      attachmentName: name\r\n    })\r\n  }\r\n\r\n  //  设置节点标签\r\n  setNodeTag(node, tag) {\r\n    this.setNodeDataRender(node, {\r\n      tag\r\n    })\r\n  }\r\n\r\n  // 设置节点公式\r\n  insertFormula(formula, appointNodes = []) {\r\n    // 只在富文本模式下可用，并且需要注册Formula插件\r\n    if (!this.hasRichTextPlugin() || !this.mindMap.formula) return\r\n    appointNodes = formatDataToArray(appointNodes)\r\n    const list = appointNodes.length > 0 ? appointNodes : this.activeNodeList\r\n    list.forEach(node => {\r\n      this.mindMap.formula.insertFormulaToNode(node, formula)\r\n    })\r\n  }\r\n\r\n  //  添加节点概要\r\n  addGeneralization(data, openEdit = true) {\r\n    if (this.activeNodeList.length <= 0) {\r\n      return\r\n    }\r\n    const nodeList = this.activeNodeList.filter(node => {\r\n      return (\r\n        !node.isRoot &&\r\n        !node.isGeneralization &&\r\n        !node.checkHasSelfGeneralization()\r\n      )\r\n    })\r\n    const list = parseAddGeneralizationNodeList(nodeList)\r\n    if (list.length <= 0) return\r\n    const isRichText = this.hasRichTextPlugin()\r\n    const { focusNewNode, inserting } = this.getNewNodeBehavior(\r\n      openEdit,\r\n      list.length > 1\r\n    )\r\n    let needRender = false\r\n    const alreadyIsRichText = data && data.richText\r\n    list.forEach(item => {\r\n      const newData = {\r\n        inserting,\r\n        ...(data || {\r\n          text: this.mindMap.opt.defaultGeneralizationText\r\n        }),\r\n        range: item.range || null,\r\n        uid: createUid(),\r\n        richText: isRichText,\r\n        isActive: focusNewNode\r\n      }\r\n      if (isRichText && !alreadyIsRichText) newData.resetRichText = isRichText\r\n      let generalization = item.node.getData('generalization')\r\n      generalization = generalization\r\n        ? Array.isArray(generalization)\r\n          ? generalization\r\n          : [generalization]\r\n        : []\r\n      // 如果是范围概要，那么检查该范围是否存在\r\n      if (item.range) {\r\n        const isExist = !!generalization.find(item2 => {\r\n          return (\r\n            item2.range &&\r\n            item2.range[0] === item.range[0] &&\r\n            item2.range[1] === item.range[1]\r\n          )\r\n        })\r\n        if (isExist) {\r\n          return\r\n        }\r\n        // 不存在则添加\r\n        generalization.push(newData)\r\n      } else {\r\n        // 不是范围概要直接添加，因为前面已经判断过是否存在\r\n        generalization.push(newData)\r\n      }\r\n      needRender = true\r\n      this.mindMap.execCommand('SET_NODE_DATA', item.node, {\r\n        generalization\r\n      })\r\n      // 插入子节点时自动展开子节点\r\n      item.node.setData({\r\n        expand: true\r\n      })\r\n    })\r\n    if (!needRender) return\r\n    // 需要清除原来激活的节点\r\n    if (focusNewNode) {\r\n      this.clearActiveNodeList()\r\n    }\r\n    this.mindMap.render(() => {\r\n      // 修复祖先节点存在概要时位置未更新的问题\r\n      // 修复同时给存在上下级关系的节点添加概要时重叠的问题\r\n      this.mindMap.render()\r\n    })\r\n  }\r\n\r\n  //  删除节点概要\r\n  removeGeneralization() {\r\n    if (this.activeNodeList.length <= 0) {\r\n      return\r\n    }\r\n    this.activeNodeList.forEach(node => {\r\n      if (!node.checkHasGeneralization()) {\r\n        return\r\n      }\r\n      this.mindMap.execCommand('SET_NODE_DATA', node, {\r\n        generalization: null\r\n      })\r\n    })\r\n    this.mindMap.render()\r\n    this.closeHighlightNode()\r\n  }\r\n\r\n  //  设置节点自定义位置\r\n  setNodeCustomPosition(node, left = undefined, top = undefined) {\r\n    let nodeList = [node] || this.activeNodeList\r\n    nodeList.forEach(item => {\r\n      this.mindMap.execCommand('SET_NODE_DATA', item, {\r\n        customLeft: left,\r\n        customTop: top\r\n      })\r\n    })\r\n  }\r\n\r\n  //  一键整理布局，即去除自定义位置\r\n  resetLayout() {\r\n    walk(\r\n      this.root,\r\n      null,\r\n      node => {\r\n        node.customLeft = undefined\r\n        node.customTop = undefined\r\n        this.mindMap.execCommand('SET_NODE_DATA', node, {\r\n          customLeft: undefined,\r\n          customTop: undefined\r\n        })\r\n        this.mindMap.render()\r\n      },\r\n      null,\r\n      true,\r\n      0,\r\n      0\r\n    )\r\n  }\r\n\r\n  //  设置节点形状\r\n  setNodeShape(node, shape) {\r\n    if (!shape || !shapeList.includes(shape)) {\r\n      return\r\n    }\r\n    let nodeList = [node] || this.activeNodeList\r\n    nodeList.forEach(item => {\r\n      this.setNodeStyle(item, 'shape', shape)\r\n    })\r\n  }\r\n\r\n  // 定位到指定节点\r\n  goTargetNode(node, callback = () => {}) {\r\n    let uid = typeof node === 'string' ? node : node.getData('uid')\r\n    if (!uid) return\r\n    this.expandToNodeUid(uid, () => {\r\n      let targetNode = this.findNodeByUid(uid)\r\n      if (targetNode) {\r\n        targetNode.active()\r\n        this.moveNodeToCenter(targetNode)\r\n        callback(targetNode)\r\n      }\r\n    })\r\n  }\r\n\r\n  //  更新节点数据\r\n  setNodeData(node, data) {\r\n    Object.keys(data).forEach(key => {\r\n      node.nodeData.data[key] = data[key]\r\n    })\r\n  }\r\n\r\n  //  设置节点数据，并判断是否渲染\r\n  setNodeDataRender(node, data, notRender = false) {\r\n    this.mindMap.execCommand('SET_NODE_DATA', node, data)\r\n    if (isNodeNotNeedRenderData(data)) {\r\n      this.mindMap.emit('node_tree_render_end')\r\n      return\r\n    }\r\n    this.reRenderNodeCheckChange(node, notRender)\r\n  }\r\n\r\n  // 重新节点某个节点，判断节点大小是否发生了改变，是的话触发重绘\r\n  reRenderNodeCheckChange(node, notRender) {\r\n    let changed = node.reRender()\r\n    if (changed) {\r\n      if (!notRender) this.mindMap.render()\r\n    } else {\r\n      this.mindMap.emit('node_tree_render_end')\r\n    }\r\n  }\r\n\r\n  // 移动节点到画布中心\r\n  // resetScale参数指定是否要将画布缩放值复位为100%，当你没有显式传递时，默认值为undefined，因为实例化选项的resetScaleOnMoveNodeToCenter配置也会决定是否复位缩放，所以当你没有显式传递时使用resetScaleOnMoveNodeToCenter配置，否则使用resetScale配置\r\n  moveNodeToCenter(node, resetScale) {\r\n    let { resetScaleOnMoveNodeToCenter } = this.mindMap.opt\r\n    if (resetScale !== undefined) {\r\n      resetScaleOnMoveNodeToCenter = resetScale\r\n    }\r\n    let { transform, state } = this.mindMap.view.getTransformData()\r\n    let { left, top, width, height } = node\r\n    if (!resetScaleOnMoveNodeToCenter) {\r\n      left *= transform.scaleX\r\n      top *= transform.scaleY\r\n      width *= transform.scaleX\r\n      height *= transform.scaleY\r\n    }\r\n    let halfWidth = this.mindMap.width / 2\r\n    let halfHeight = this.mindMap.height / 2\r\n    let nodeCenterX = left + width / 2\r\n    let nodeCenterY = top + height / 2\r\n    let targetX = halfWidth - state.x\r\n    let targetY = halfHeight - state.y\r\n    let offsetX = targetX - nodeCenterX\r\n    let offsetY = targetY - nodeCenterY\r\n    this.mindMap.view.translateX(offsetX)\r\n    this.mindMap.view.translateY(offsetY)\r\n    if (resetScaleOnMoveNodeToCenter) {\r\n      this.mindMap.view.setScale(1)\r\n    }\r\n  }\r\n\r\n  // 回到中心主题，即设置根节点到画布中心\r\n  setRootNodeCenter() {\r\n    this.moveNodeToCenter(this.root)\r\n  }\r\n\r\n  // 展开到指定uid的节点\r\n  expandToNodeUid(uid, callback = () => {}) {\r\n    if (!this.renderTree) {\r\n      callback()\r\n      return\r\n    }\r\n    let parentsList = []\r\n    let isGeneralization = false\r\n    const cache = {}\r\n    bfsWalk(this.renderTree, (node, parent) => {\r\n      if (node.data.uid === uid) {\r\n        parentsList = parent ? [...cache[parent.data.uid], parent] : []\r\n        return 'stop'\r\n      }\r\n      const generalizationList = formatGetNodeGeneralization(node.data)\r\n      generalizationList.forEach(item => {\r\n        if (item.uid === uid) {\r\n          parentsList = parent ? [...cache[parent.data.uid], parent, node] : []\r\n          isGeneralization = true\r\n        }\r\n      })\r\n      if (isGeneralization) {\r\n        return 'stop'\r\n      }\r\n      cache[node.data.uid] = parent ? [...cache[parent.data.uid], parent] : []\r\n    })\r\n    let needRender = false\r\n    parentsList.forEach(node => {\r\n      if (!node.data.expand) {\r\n        needRender = true\r\n        node.data.expand = true\r\n      }\r\n    })\r\n    // 如果是展开到概要节点，那么父节点下的所有节点都需要开\r\n    if (isGeneralization) {\r\n      const lastNode = parentsList[parentsList.length - 1]\r\n      if (lastNode) {\r\n        walk(lastNode, null, node => {\r\n          if (!node.data.expand) {\r\n            needRender = true\r\n            node.data.expand = true\r\n          }\r\n        })\r\n      }\r\n    }\r\n    if (needRender) {\r\n      this.mindMap.render(callback)\r\n    } else {\r\n      callback()\r\n    }\r\n  }\r\n\r\n  // 根据uid找到对应的节点实例\r\n  findNodeByUid(uid) {\r\n    if (!this.root) return\r\n    let res = null\r\n    walk(this.root, null, node => {\r\n      if (node.getData('uid') === uid) {\r\n        res = node\r\n        return true\r\n      }\r\n      // 概要节点\r\n      let isGeneralization = false\r\n      ;(node._generalizationList || []).forEach(item => {\r\n        if (item.generalizationNode.getData('uid') === uid) {\r\n          res = item.generalizationNode\r\n          isGeneralization = true\r\n        }\r\n      })\r\n      if (isGeneralization) {\r\n        return true\r\n      }\r\n    })\r\n    return res\r\n  }\r\n\r\n  // 高亮节点或子节点\r\n  highlightNode(node, range, style) {\r\n    // 如果当前正在渲染，那么不进行高亮，因为节点位置可能不正确\r\n    if (this.isRendering) return\r\n    style = {\r\n      stroke: 'rgb(94, 200, 248)',\r\n      fill: 'transparent',\r\n      ...(style || {})\r\n    }\r\n    // 尚未创建\r\n    if (!this.highlightBoxNode) {\r\n      this.highlightBoxNode = new Polygon()\r\n        .stroke({\r\n          color: style.stroke || 'transparent'\r\n        })\r\n        .fill({\r\n          color: style.fill || 'transparent'\r\n        })\r\n    } else if (this.highlightBoxNodeStyle) {\r\n      // 样式更新了\r\n      if (\r\n        this.highlightBoxNodeStyle.stroke !== style.stroke ||\r\n        this.highlightBoxNodeStyle.fill !== style.fill\r\n      ) {\r\n        this.highlightBoxNode\r\n          .stroke({\r\n            color: style.stroke || 'transparent'\r\n          })\r\n          .fill({\r\n            color: style.fill || 'transparent'\r\n          })\r\n      }\r\n    }\r\n    this.highlightBoxNodeStyle = { ...style }\r\n    let minx = Infinity,\r\n      miny = Infinity,\r\n      maxx = -Infinity,\r\n      maxy = -Infinity\r\n    if (range) {\r\n      const children = node.children.slice(range[0], range[1] + 1)\r\n      children.forEach(child => {\r\n        if (child.left < minx) {\r\n          minx = child.left\r\n        }\r\n        if (child.top < miny) {\r\n          miny = child.top\r\n        }\r\n        const right = child.left + child.width\r\n        const bottom = child.top + child.height\r\n        if (right > maxx) {\r\n          maxx = right\r\n        }\r\n        if (bottom > maxy) {\r\n          maxy = bottom\r\n        }\r\n      })\r\n    } else {\r\n      minx = node.left\r\n      miny = node.top\r\n      maxx = node.left + node.width\r\n      maxy = node.top + node.height\r\n    }\r\n    this.highlightBoxNode.plot([\r\n      [minx, miny],\r\n      [maxx, miny],\r\n      [maxx, maxy],\r\n      [minx, maxy]\r\n    ])\r\n    this.mindMap.otherDraw.add(this.highlightBoxNode)\r\n  }\r\n\r\n  // 关闭高亮\r\n  closeHighlightNode() {\r\n    if (!this.highlightBoxNode) return\r\n    this.highlightBoxNode.remove()\r\n  }\r\n\r\n  // 是否存在富文本插件\r\n  hasRichTextPlugin() {\r\n    return !!this.mindMap.richText\r\n  }\r\n}\r\n\r\nexport default Render\r\n", "import defaultTheme from './default'\r\n\r\nexport default {\r\n  default: defaultTheme\r\n}\r\n", "const map = {\r\n  Backspace: 8,\r\n  Tab: 9,\r\n  Enter: 13,\r\n\r\n  Shift: 16,\r\n  Control: 17,\r\n  Alt: 18,\r\n  CapsLock: 20,\r\n\r\n  Esc: 27,\r\n\r\n  Spacebar: 32,\r\n\r\n  PageUp: 33,\r\n  PageDown: 34,\r\n  End: 35,\r\n  Home: 36,\r\n\r\n  Insert: 45,\r\n\r\n  Left: 37,\r\n  Up: 38,\r\n  Right: 39,\r\n  Down: 40,\r\n\r\n  Del: 46,\r\n\r\n  NumLock: 144,\r\n\r\n  Cmd: 91,\r\n  CmdFF: 224,\r\n  F1: 112,\r\n  F2: 113,\r\n  F3: 114,\r\n  F4: 115,\r\n  F5: 116,\r\n  F6: 117,\r\n  F7: 118,\r\n  F8: 119,\r\n  F9: 120,\r\n  F10: 121,\r\n  F11: 122,\r\n  F12: 123,\r\n\r\n  '`': 192,\r\n  '=': 187,\r\n  '-': 189,\r\n\r\n  '/': 191,\r\n  '.': 190\r\n}\r\n\r\n// 数字\r\nfor (let i = 0; i <= 9; i++) {\r\n  map[i] = i + 48\r\n}\r\n\r\n// 字母\r\n'abcdefghijklmnopqrstuvwxyz'.split('').forEach((n, index) => {\r\n  map[n] = index + 65\r\n})\r\n\r\nexport const keyMap = map\r\n\r\nexport const isKey = (e, key) => {\r\n  let code = typeof e === 'object' ? e.keyCode : e\r\n  return map[key] === code\r\n}\r\n", "import { keyMap } from './keyMap'\r\nimport { CONSTANTS } from '../../constants/constant'\r\n\r\n//  快捷按键、命令处理类\r\nexport default class KeyCommand {\r\n  //  构造函数\r\n  constructor(opt) {\r\n    this.opt = opt\r\n    this.mindMap = opt.mindMap\r\n    this.shortcutMap = {\r\n      //Enter: [fn]\r\n    }\r\n    this.shortcutMapCache = {}\r\n    this.isPause = false\r\n    this.isInSvg = false\r\n    this.bindEvent()\r\n  }\r\n\r\n  // 扩展按键映射\r\n  extendKeyMap(key, code) {\r\n    keyMap[key] = code\r\n  }\r\n\r\n  // 从按键映射中删除某个键\r\n  removeKeyMap(key) {\r\n    if (typeof keyMap[key] !== 'undefined') {\r\n      delete keyMap[key]\r\n    }\r\n  }\r\n\r\n  //  暂停快捷键响应\r\n  pause() {\r\n    this.isPause = true\r\n  }\r\n\r\n  //  恢复快捷键响应\r\n  recovery() {\r\n    this.isPause = false\r\n  }\r\n\r\n  //  保存当前注册的快捷键数据，然后清空快捷键数据\r\n  save() {\r\n    // 当前已经存在缓存数据了，那么直接返回\r\n    if (Object.keys(this.shortcutMapCache).length > 0) {\r\n      return\r\n    }\r\n    this.shortcutMapCache = this.shortcutMap\r\n    this.shortcutMap = {}\r\n  }\r\n\r\n  //  恢复保存的快捷键数据，然后清空缓存数据\r\n  restore() {\r\n    // 当前不存在缓存数据，那么直接返回\r\n    if (Object.keys(this.shortcutMapCache).length <= 0) {\r\n      return\r\n    }\r\n    this.shortcutMap = this.shortcutMapCache\r\n    this.shortcutMapCache = {}\r\n  }\r\n\r\n  //  绑定事件\r\n  bindEvent() {\r\n    this.onKeydown = this.onKeydown.bind(this)\r\n    // 只有当鼠标在画布内才响应快捷键\r\n    this.mindMap.on('svg_mouseenter', () => {\r\n      this.isInSvg = true\r\n    })\r\n    this.mindMap.on('svg_mouseleave', () => {\r\n      if (this.mindMap.renderer.textEdit.isShowTextEdit()) return\r\n      if (\r\n        this.mindMap.associativeLine &&\r\n        this.mindMap.associativeLine.showTextEdit\r\n      ) {\r\n        return\r\n      }\r\n      this.isInSvg = false\r\n    })\r\n    window.addEventListener('keydown', this.onKeydown)\r\n    this.mindMap.on('beforeDestroy', () => {\r\n      this.unBindEvent()\r\n    })\r\n  }\r\n\r\n  // 解绑事件\r\n  unBindEvent() {\r\n    window.removeEventListener('keydown', this.onKeydown)\r\n  }\r\n\r\n  // 根据事件目标判断是否响应快捷键事件\r\n  defaultEnableCheck(e) {\r\n    const target = e.target\r\n    return (\r\n      target === document.body ||\r\n      target.classList.contains(CONSTANTS.EDIT_NODE_CLASS.SMM_NODE_EDIT_WRAP) ||\r\n      target.classList.contains(CONSTANTS.EDIT_NODE_CLASS.RICH_TEXT_EDIT_WRAP) || \r\n      target.classList.contains(CONSTANTS.EDIT_NODE_CLASS.ASSOCIATIVE_LINE_TEXT_EDIT_WRAP)\r\n    )\r\n  }\r\n\r\n  // 按键事件\r\n  onKeydown(e) {\r\n    const {\r\n      enableShortcutOnlyWhenMouseInSvg,\r\n      beforeShortcutRun,\r\n      customCheckEnableShortcut\r\n    } = this.mindMap.opt\r\n    const checkFn =\r\n      typeof customCheckEnableShortcut === 'function'\r\n        ? customCheckEnableShortcut\r\n        : this.defaultEnableCheck\r\n    if (!checkFn(e)) return\r\n    if (this.isPause || (enableShortcutOnlyWhenMouseInSvg && !this.isInSvg)) {\r\n      return\r\n    }\r\n    Object.keys(this.shortcutMap).forEach(key => {\r\n      if (this.checkKey(e, key)) {\r\n        // 粘贴事件不组织，因为要监听paste事件\r\n        if (!this.checkKey(e, 'Control+v')) {\r\n          e.stopPropagation()\r\n          e.preventDefault()\r\n        }\r\n        if (typeof beforeShortcutRun === 'function') {\r\n          const isStop = beforeShortcutRun(key, [\r\n            ...this.mindMap.renderer.activeNodeList\r\n          ])\r\n          if (isStop) return\r\n        }\r\n        this.shortcutMap[key].forEach(fn => {\r\n          fn()\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  //  检查键值是否符合\r\n  checkKey(e, key) {\r\n    let o = this.getOriginEventCodeArr(e)\r\n    let k = this.getKeyCodeArr(key)\r\n    if (o.length !== k.length) {\r\n      return false\r\n    }\r\n    for (let i = 0; i < o.length; i++) {\r\n      let index = k.findIndex(item => {\r\n        return item === o[i]\r\n      })\r\n      if (index === -1) {\r\n        return false\r\n      } else {\r\n        k.splice(index, 1)\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  //  获取事件对象里的键值数组\r\n  getOriginEventCodeArr(e) {\r\n    let arr = []\r\n    if (e.ctrlKey || e.metaKey) {\r\n      arr.push(keyMap['Control'])\r\n    }\r\n    if (e.altKey) {\r\n      arr.push(keyMap['Alt'])\r\n    }\r\n    if (e.shiftKey) {\r\n      arr.push(keyMap['Shift'])\r\n    }\r\n    if (!arr.includes(e.keyCode)) {\r\n      arr.push(e.keyCode)\r\n    }\r\n    return arr\r\n  }\r\n\r\n  // 判断是否按下了组合键\r\n  hasCombinationKey(e) {\r\n    return e.ctrlKey || e.metaKey || e.altKey || e.shiftKey\r\n  }\r\n\r\n  //  获取快捷键对应的键值数组\r\n  getKeyCodeArr(key) {\r\n    let keyArr = key.split(/\\s*\\+\\s*/)\r\n    let arr = []\r\n    keyArr.forEach(item => {\r\n      arr.push(keyMap[item])\r\n    })\r\n    return arr\r\n  }\r\n\r\n  //  添加快捷键命令\r\n  /**\r\n   * Enter\r\n   * Tab | Insert\r\n   * Shift + a\r\n   */\r\n  addShortcut(key, fn) {\r\n    key.split(/\\s*\\|\\s*/).forEach(item => {\r\n      if (this.shortcutMap[item]) {\r\n        this.shortcutMap[item].push(fn)\r\n      } else {\r\n        this.shortcutMap[item] = [fn]\r\n      }\r\n    })\r\n  }\r\n\r\n  //  移除快捷键命令\r\n  removeShortcut(key, fn) {\r\n    key.split(/\\s*\\|\\s*/).forEach(item => {\r\n      if (this.shortcutMap[item]) {\r\n        if (fn) {\r\n          let index = this.shortcutMap[item].findIndex(f => {\r\n            return f === fn\r\n          })\r\n          if (index !== -1) {\r\n            this.shortcutMap[item].splice(index, 1)\r\n          }\r\n        } else {\r\n          this.shortcutMap[item] = []\r\n          delete this.shortcutMap[item]\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  //  获取指定快捷键的处理函数\r\n  getShortcutFn(key) {\r\n    let res = []\r\n    key.split(/\\s*\\|\\s*/).forEach(item => {\r\n      res = this.shortcutMap[item] || []\r\n    })\r\n    return res\r\n  }\r\n}\r\n", "{\r\n  \"name\": \"simple-mind-map\",\r\n  \"version\": \"0.13.1-fix.2\",\r\n  \"description\": \"一个简单的web在线思维导图\",\r\n  \"authors\": [\r\n    {\r\n      \"name\": \"街角小林\",\r\n      \"email\": \"1013335014@qq.com\"\r\n    },\r\n    {\r\n      \"name\": \"理想青年实验室\",\r\n      \"url\": \"http://lxqnsys.com/\"\r\n    }\r\n  ],\r\n  \"types\": \"./types/index.d.ts\",\r\n  \"typings\": \"./types/index.d.ts\",\r\n  \"license\": \"MIT\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/wanglin2/mind-map\"\r\n  },\r\n  \"scripts\": {\r\n    \"lint\": \"eslint src/\",\r\n    \"format\": \"prettier --write .\",\r\n    \"types\": \"npx -p typescript tsc index.js --declaration --allowJs --emitDeclarationOnly --outDir types --target es2017 --skipLibCheck & node ./bin/createPluginsTypeFiles.js\",\r\n    \"wsServe\": \"node ./bin/wsServer.mjs\"\r\n  },\r\n  \"module\": \"index.js\",\r\n  \"main\": \"./dist/simpleMindMap.umd.min.js\",\r\n  \"dependencies\": {\r\n    \"@svgdotjs/svg.js\": \"3.2.0\",\r\n    \"deepmerge\": \"^1.5.2\",\r\n    \"eventemitter3\": \"^4.0.7\",\r\n    \"jszip\": \"^3.10.1\",\r\n    \"katex\": \"^0.16.8\",\r\n    \"mdast-util-from-markdown\": \"^1.3.0\",\r\n    \"pdf-lib\": \"^1.17.1\",\r\n    \"quill\": \"^2.0.3\",\r\n    \"tern\": \"^0.24.3\",\r\n    \"uuid\": \"^9.0.0\",\r\n    \"ws\": \"^7.5.9\",\r\n    \"xml-js\": \"^1.6.11\",\r\n    \"y-webrtc\": \"^10.2.5\",\r\n    \"yjs\": \"^13.6.8\"\r\n  },\r\n  \"keywords\": [\r\n    \"javascript\",\r\n    \"svg\",\r\n    \"mind-map\",\r\n    \"mindMap\",\r\n    \"MindMap\"\r\n  ],\r\n  \"devDependencies\": {\r\n    \"eslint\": \"^8.25.0\",\r\n    \"prettier\": \"^2.7.1\"\r\n  }\r\n}\r\n", "import {\r\n  copyRenderTree,\r\n  simpleDeepClone,\r\n  throttle,\r\n  isSameObject,\r\n  transformTreeDataToObject\r\n} from '../../utils'\r\nimport { ERROR_TYPES } from '../../constants/constant'\r\nimport pkg from '../../../package.json'\r\n\r\n//  命令类\r\nclass Command {\r\n  //  构造函数\r\n  constructor(opt = {}) {\r\n    this.opt = opt\r\n    this.mindMap = opt.mindMap\r\n    this.commands = {}\r\n    this.history = []\r\n    this.activeHistoryIndex = 0\r\n    // 注册快捷键\r\n    this.registerShortcutKeys()\r\n    this.originAddHistory = this.addHistory.bind(this)\r\n    this.addHistory = throttle(\r\n      this.addHistory,\r\n      this.mindMap.opt.addHistoryTime,\r\n      this\r\n    )\r\n    // 是否暂停收集历史数据\r\n    this.isPause = false\r\n  }\r\n\r\n  // 暂停收集历史数据\r\n  pause() {\r\n    this.isPause = true\r\n  }\r\n\r\n  // 恢复收集历史数据\r\n  recovery() {\r\n    this.isPause = false\r\n  }\r\n\r\n  //  清空历史数据\r\n  clearHistory() {\r\n    this.history = []\r\n    this.activeHistoryIndex = 0\r\n    this.mindMap.emit('back_forward', 0, 0)\r\n  }\r\n\r\n  //  注册快捷键\r\n  registerShortcutKeys() {\r\n    this.mindMap.keyCommand.addShortcut('Control+z', () => {\r\n      this.mindMap.execCommand('BACK')\r\n    })\r\n    this.mindMap.keyCommand.addShortcut('Control+y', () => {\r\n      this.mindMap.execCommand('FORWARD')\r\n    })\r\n  }\r\n\r\n  //  执行命令\r\n  exec(name, ...args) {\r\n    if (this.commands[name]) {\r\n      this.commands[name].forEach(fn => {\r\n        fn(...args)\r\n      })\r\n      this.mindMap.emit('afterExecCommand', name, ...args)\r\n      if (\r\n        ['BACK', 'FORWARD', 'SET_NODE_ACTIVE', 'CLEAR_ACTIVE_NODE'].includes(\r\n          name\r\n        )\r\n      ) {\r\n        return\r\n      }\r\n      this.addHistory()\r\n    }\r\n  }\r\n\r\n  //  添加命令\r\n  add(name, fn) {\r\n    if (this.commands[name]) {\r\n      this.commands[name].push(fn)\r\n    } else {\r\n      this.commands[name] = [fn]\r\n    }\r\n  }\r\n\r\n  //  移除命令\r\n  remove(name, fn) {\r\n    if (!this.commands[name]) {\r\n      return\r\n    }\r\n    if (!fn) {\r\n      this.commands[name] = []\r\n      delete this.commands[name]\r\n    } else {\r\n      let index = this.commands[name].find(item => {\r\n        return item === fn\r\n      })\r\n      if (index !== -1) {\r\n        this.commands[name].splice(index, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  //  添加回退数据\r\n  addHistory() {\r\n    if (this.mindMap.opt.readonly || this.isPause) {\r\n      return\r\n    }\r\n    const lastData =\r\n      this.history.length > 0 ? this.history[this.activeHistoryIndex] : null\r\n    const data = this.getCopyData()\r\n    // 此次数据和上次一样则不重复添加\r\n    if (lastData === data) return\r\n    if (lastData && JSON.stringify(lastData) === JSON.stringify(data)) {\r\n      return\r\n    }\r\n    this.emitDataUpdatesEvent(lastData, data)\r\n    // 删除当前历史指针后面的数据\r\n    this.history = this.history.slice(0, this.activeHistoryIndex + 1)\r\n    this.history.push(simpleDeepClone(data))\r\n    // 历史记录数超过最大数量\r\n    if (this.history.length > this.mindMap.opt.maxHistoryCount) {\r\n      this.history.shift()\r\n    }\r\n    this.activeHistoryIndex = this.history.length - 1\r\n    this.mindMap.emit('data_change', data)\r\n    this.mindMap.emit(\r\n      'back_forward',\r\n      this.activeHistoryIndex,\r\n      this.history.length\r\n    )\r\n  }\r\n\r\n  //  回退\r\n  back(step = 1) {\r\n    if (this.mindMap.opt.readonly) {\r\n      return\r\n    }\r\n    if (this.activeHistoryIndex - step >= 0) {\r\n      const lastData = this.history[this.activeHistoryIndex]\r\n      this.activeHistoryIndex -= step\r\n      this.mindMap.emit(\r\n        'back_forward',\r\n        this.activeHistoryIndex,\r\n        this.history.length\r\n      )\r\n      const data = simpleDeepClone(this.history[this.activeHistoryIndex])\r\n      this.emitDataUpdatesEvent(lastData, data)\r\n      return data\r\n    }\r\n  }\r\n\r\n  //  前进\r\n  forward(step = 1) {\r\n    if (this.mindMap.opt.readonly) {\r\n      return\r\n    }\r\n    let len = this.history.length\r\n    if (this.activeHistoryIndex + step <= len - 1) {\r\n      const lastData = this.history[this.activeHistoryIndex]\r\n      this.activeHistoryIndex += step\r\n      this.mindMap.emit(\r\n        'back_forward',\r\n        this.activeHistoryIndex,\r\n        this.history.length\r\n      )\r\n      const data = simpleDeepClone(this.history[this.activeHistoryIndex])\r\n      this.emitDataUpdatesEvent(lastData, data)\r\n      return data\r\n    }\r\n  }\r\n\r\n  //  获取渲染树数据副本\r\n  getCopyData() {\r\n    if (!this.mindMap.renderer.renderTree) return null\r\n    const res = copyRenderTree({}, this.mindMap.renderer.renderTree, true)\r\n    res.smmVersion = pkg.version\r\n    return res\r\n  }\r\n\r\n  // 移除节点数据中的uid\r\n  removeDataUid(data) {\r\n    data = simpleDeepClone(data)\r\n    let walk = root => {\r\n      delete root.data.uid\r\n      if (root.children && root.children.length > 0) {\r\n        root.children.forEach(item => {\r\n          walk(item)\r\n        })\r\n      }\r\n    }\r\n    walk(data)\r\n    return data\r\n  }\r\n\r\n  // 派发思维导图更新明细事件\r\n  emitDataUpdatesEvent(lastData, data) {\r\n    try {\r\n      // 如果data_change_detail没有监听者，那么不进行计算，节省性能\r\n      const eventName = 'data_change_detail'\r\n      const count = this.mindMap.event.listenerCount(eventName)\r\n      if (count > 0 && lastData && data) {\r\n        const lastDataObj = simpleDeepClone(transformTreeDataToObject(lastData))\r\n        const dataObj = simpleDeepClone(transformTreeDataToObject(data))\r\n        const res = []\r\n        const walkReplace = (root, obj) => {\r\n          if (root.children && root.children.length > 0) {\r\n            root.children.forEach((childUid, index) => {\r\n              root.children[index] =\r\n                typeof childUid === 'string'\r\n                  ? obj[childUid]\r\n                  : obj[childUid.data.uid]\r\n              walkReplace(root.children[index], obj)\r\n            })\r\n          }\r\n          return root\r\n        }\r\n        // 找出新增的或修改的\r\n        Object.keys(dataObj).forEach(uid => {\r\n          // 新增的或已经存在的，如果数据发生了改变\r\n          if (!lastDataObj[uid]) {\r\n            res.push({\r\n              action: 'create',\r\n              data: walkReplace(dataObj[uid], dataObj)\r\n            })\r\n          } else if (!isSameObject(lastDataObj[uid], dataObj[uid])) {\r\n            res.push({\r\n              action: 'update',\r\n              oldData: walkReplace(lastDataObj[uid], lastDataObj),\r\n              data: walkReplace(dataObj[uid], dataObj)\r\n            })\r\n          }\r\n        })\r\n        // 找出删除的\r\n        Object.keys(lastDataObj).forEach(uid => {\r\n          if (!dataObj[uid]) {\r\n            res.push({\r\n              action: 'delete',\r\n              data: walkReplace(lastDataObj[uid], lastDataObj)\r\n            })\r\n          }\r\n        })\r\n        this.mindMap.emit(eventName, res)\r\n      }\r\n    } catch (error) {\r\n      this.mindMap.opt.errorHandler(\r\n        ERROR_TYPES.DATA_CHANGE_DETAIL_EVENT_ERROR,\r\n        error\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Command\r\n", "import { nextTick } from '.'\r\n\r\n//  批量执行\r\nclass BatchExecution {\r\n  //  构造函数\r\n  constructor() {\r\n    this.has = {}\r\n    this.queue = []\r\n    this.nextTick = nextTick(this.flush, this)\r\n  }\r\n\r\n  //  添加任务\r\n  push(name, fn) {\r\n    if (this.has[name]) {\r\n      this.replaceTask(name, fn)\r\n      return\r\n    }\r\n    this.has[name] = true\r\n    this.queue.push({\r\n      name,\r\n      fn\r\n    })\r\n    this.nextTick()\r\n  }\r\n\r\n  // 替换任务\r\n  replaceTask(name, fn) {\r\n    const index = this.queue.findIndex(item => {\r\n      return item.name === name\r\n    })\r\n    if (index !== -1) {\r\n      this.queue[index] = {\r\n        name,\r\n        fn\r\n      }\r\n    }\r\n  }\r\n\r\n  //   执行队列\r\n  flush() {\r\n    let fns = this.queue.slice(0)\r\n    this.queue = []\r\n    fns.forEach(({ name, fn }) => {\r\n      this.has[name] = false\r\n      fn()\r\n    })\r\n  }\r\n}\r\n\r\nexport default BatchExecution\r\n", "import { CONSTANTS } from './constant'\r\n\r\n// 默认选项配置\r\nexport const defaultOpt = {\r\n  // 【基本】\r\n  // 容器元素，必传，必须为DOM元素\r\n  el: null,\r\n  // 思维导图回显数据\r\n  data: null,\r\n  // 要恢复的视图数据，一般通过mindMap.view.getTransformData()方法获取\r\n  viewData: null,\r\n  // 是否只读\r\n  readonly: false,\r\n  // 布局\r\n  layout: CONSTANTS.LAYOUT.LOGICAL_STRUCTURE,\r\n  // 如果结构为鱼骨图，那么可以通过该选项控制倾斜角度\r\n  fishboneDeg: 45,\r\n  // 主题\r\n  theme: 'default', // 内置主题：default（默认主题）\r\n  // 主题配置，会和所选择的主题进行合并\r\n  themeConfig: {},\r\n  // 放大缩小的增量比例\r\n  scaleRatio: 0.2,\r\n  // 平移的步长比例，只在鼠标滚轮和触控板触发的平移中应用\r\n  translateRatio: 1,\r\n  // 最小缩小值，百分数，最小为0，该选项只会影响view.narrow方法（影响的行为为Ctrl+-快捷键、鼠标滚轮及触控板），不会影响其他方法，比如view.setScale，所以需要你自行限制大小\r\n  minZoomRatio: 20,\r\n  // 最大放大值，百分数，传-1代表不限制，否则传0以上数字，，该选项只会影响view.enlarge方法\r\n  maxZoomRatio: 400,\r\n  // 自定义判断wheel事件是否来自电脑的触控板\r\n  // 默认是通过判断e.deltaY的值是否小于10，显然这种方法是不准确的，当鼠标滚动的很慢，或者触摸移动的很快时判断就失效了，如果你有更好的方法，欢迎提交issue\r\n  // 如果你希望自己来判断，那么传递一个函数，接收一个参数e（事件对象），需要返回true或false，代表是否是来自触控板\r\n  customCheckIsTouchPad: null,\r\n  // 鼠标缩放是否以鼠标当前位置为中心点，否则以画布中心点\r\n  mouseScaleCenterUseMousePosition: true,\r\n  // 最多显示几个标签\r\n  maxTag: 5,\r\n  // 展开收缩按钮尺寸\r\n  expandBtnSize: 20,\r\n  // 节点里图片和文字的间距\r\n  imgTextMargin: 5,\r\n  // 节点里各种文字信息的间距，如图标和文字的间距\r\n  textContentMargin: 2,\r\n  // 自定义节点备注内容显示\r\n  customNoteContentShow: null,\r\n  /*\r\n          {\r\n              show(){},\r\n              hide(){}\r\n          }\r\n      */\r\n  // 达到该宽度文本自动换行\r\n  textAutoWrapWidth: 500,\r\n  // 自定义鼠标滚轮事件处理\r\n  // 可以传一个函数，回调参数为事件对象\r\n  customHandleMousewheel: null,\r\n  // 鼠标滚动的行为，如果customHandleMousewheel传了自定义函数，这个属性不生效\r\n  mousewheelAction: CONSTANTS.MOUSE_WHEEL_ACTION.MOVE, // zoom（放大缩小）、move（上下移动）\r\n  // 当mousewheelAction设为move时，可以通过该属性控制鼠标滚动一下视图移动的步长，单位px\r\n  mousewheelMoveStep: 100,\r\n  // 当mousewheelAction设为zoom时，或者按住Ctrl键时，默认向前滚动是缩小，向后滚动是放大，如果该属性设为true，那么会反过来\r\n  mousewheelZoomActionReverse: true,\r\n  // 默认插入的二级节点的文字\r\n  defaultInsertSecondLevelNodeText: '二级节点',\r\n  // 默认插入的二级以下节点的文字\r\n  defaultInsertBelowSecondLevelNodeText: '分支主题',\r\n  // 展开收起按钮的颜色\r\n  expandBtnStyle: {\r\n    color: '#808080',\r\n    fill: '#fff',\r\n    fontSize: 13,\r\n    strokeColor: '#333333'\r\n  },\r\n  // 自定义展开收起按钮的图标\r\n  expandBtnIcon: {\r\n    open: '', // svg字符串\r\n    close: ''\r\n  },\r\n  // 处理收起节点数量\r\n  expandBtnNumHandler: null,\r\n  // 是否显示带数量的收起按钮\r\n  isShowExpandNum: true,\r\n  // 是否只有当鼠标在画布内才响应快捷键事件\r\n  enableShortcutOnlyWhenMouseInSvg: true,\r\n  // 自定义判断是否响应快捷键事件，优先级比enableShortcutOnlyWhenMouseInSvg选项高\r\n  // 可以传递一个函数，接收事件对象e为参数，需要返回true或false，返回true代表允许响应快捷键事件，反之不允许，库默认当事件目标为body，或为文本编辑框元素（普通文本编辑框、富文本编辑框、关联线文本编辑框）时响应快捷键，其他不响应\r\n  customCheckEnableShortcut: null,\r\n  // 初始根节点的位置\r\n  initRootNodePosition: null,\r\n  // 节点文本编辑框的z-index\r\n  nodeTextEditZIndex: 3000,\r\n  // 节点备注浮层的z-index\r\n  nodeNoteTooltipZIndex: 3000,\r\n  // 是否在点击了画布外的区域时结束节点文本的编辑状态\r\n  isEndNodeTextEditOnClickOuter: true,\r\n  // 最大历史记录数\r\n  maxHistoryCount: 500,\r\n  // 是否一直显示节点的展开收起按钮，默认为鼠标移上去和激活时才显示\r\n  alwaysShowExpandBtn: false,\r\n  // 不显示展开收起按钮，优先级比alwaysShowExpandBtn配置高\r\n  notShowExpandBtn: false,\r\n  // 扩展节点可插入的图标\r\n  iconList: [\r\n    // {\r\n    //   name: '',// 分组名称\r\n    //   type: '',// 分组的值\r\n    //   list: [// 分组下的图标列表\r\n    //     {\r\n    //       name: '',// 图标名称\r\n    //       icon:''// 图标，可以传svg或图片\r\n    //     }\r\n    //   ]\r\n    // }\r\n  ],\r\n  // 节点最大缓存数量\r\n  maxNodeCacheCount: 1000,\r\n  // 思维导图适应画布大小时的内边距\r\n  fitPadding: 50,\r\n  // 是否开启按住ctrl键多选节点功能\r\n  enableCtrlKeyNodeSelection: true,\r\n  // 设置为左键多选节点，右键拖动画布\r\n  useLeftKeySelectionRightKeyDrag: false,\r\n  // 节点即将进入编辑前的回调方法，如果该方法返回true以外的值，那么将取消编辑，函数可以返回一个值，或一个Promise，回调参数为节点实例\r\n  beforeTextEdit: null,\r\n  // 是否开启自定义节点内容\r\n  isUseCustomNodeContent: false,\r\n  // 自定义返回节点内容的方法\r\n  customCreateNodeContent: null,\r\n  // 指定内部一些元素（节点文本编辑元素、节点备注显示元素、关联线文本编辑元素、节点图片调整按钮元素）添加到的位置，默认添加到document.body下\r\n  customInnerElsAppendTo: null,\r\n  // 是否在存在一个激活节点时，当按下中文、英文、数字按键时自动进入文本编辑模式\r\n  // 开启该特性后，需要给你的输入框绑定keydown事件，并禁止冒泡\r\n  enableAutoEnterTextEditWhenKeydown: false,\r\n  // 当enableAutoEnterTextEditWhenKeydown选项开启时生效，当通过按键进入文本编辑时是否自动清空原有文本\r\n  autoEmptyTextWhenKeydownEnterEdit: false,\r\n  // 自定义对剪贴板文本的处理。当按ctrl+v粘贴时会读取用户剪贴板中的文本和图片，默认只会判断文本是否是普通文本和simple-mind-map格式的节点数据，如果你想处理其他思维导图的数据，比如processon、zhixi等，那么可以传递一个函数，接受当前剪贴板中的文本为参数，返回处理后的数据，可以返回两种类型：\r\n  /*\r\n    1.返回一个纯文本，那么会直接以该文本创建一个子节点\r\n\r\n    2.返回一个节点对象，格式如下：\r\n      {\r\n        // 代表是simple-mind-map格式的数据\r\n        simpleMindMap: true,\r\n        // 节点数据，同simple-mind-map节点数据格式\r\n        data: {\r\n          data: {\r\n            text: ''\r\n          },\r\n          children: []\r\n        }\r\n      }\r\n  */\r\n  // 如果你的处理逻辑存在异步逻辑，也可以返回一个promise\r\n  customHandleClipboardText: null,\r\n  // 禁止鼠标滚轮缩放，你仍旧可以使用api进行缩放\r\n  disableMouseWheelZoom: false,\r\n  // 错误处理函数\r\n  errorHandler: (code, error) => {\r\n    console.error(code, error)\r\n  },\r\n  // 是否在鼠标双击时回到根节点，也就是让根节点居中显示\r\n  enableDblclickBackToRootNode: false,\r\n  // 节点鼠标hover和激活时显示的矩形边框的颜色\r\n  hoverRectColor: 'rgb(94, 200, 248)',\r\n  // 节点鼠标hover和激活时显示的矩形边框距节点内容的距离\r\n  hoverRectPadding: 2,\r\n  // 双击节点进入节点文本编辑时是否默认选中文本，默认只在创建新节点时会选中\r\n  selectTextOnEnterEditText: false,\r\n  // 删除节点后激活相邻节点\r\n  deleteNodeActive: true,\r\n  // 是否首次加载fit view\r\n  fit: false,\r\n  // 自定义标签的颜色\r\n  // {pass: 'green, unpass: 'red'}\r\n  tagsColorMap: {},\r\n  // 节点协作样式配置\r\n  cooperateStyle: {\r\n    avatarSize: 22, // 头像大小\r\n    fontSize: 12 // 如果是文字头像，那么文字的大小\r\n  },\r\n  // 协同编辑时，同一个节点不能同时被多人选中\r\n  onlyOneEnableActiveNodeOnCooperate: false,\r\n  // 插入概要的默认文本\r\n  defaultGeneralizationText: '概要',\r\n  // 粘贴文本的方式创建新节点时，控制是否按换行自动分割节点，即如果存在换行，那么会根据换行创建多个节点，否则只会创建一个节点\r\n  // 可以传递一个函数，返回promise，resolve代表根据换行分割，reject代表忽略换行\r\n  handleIsSplitByWrapOnPasteCreateNewNode: null,\r\n  // 多少时间内只允许添加一次历史记录，避免添加没有必要的中间状态，单位：ms\r\n  addHistoryTime: 100,\r\n  // 是否禁止拖动画布\r\n  isDisableDrag: false,\r\n  // 创建新节点时的行为\r\n  /*\r\n    DEFAULT  ：默认会激活新创建的节点，并且进入编辑模式。如果同时创建了多个新节点，那么只会激活而不会进入编辑模式\r\n    NOT_ACTIVE  : 不激活新创建的节点\r\n    ACTIVE_ONLY  : 只激活新创建的节点，不进入编辑模式\r\n  */\r\n  createNewNodeBehavior: CONSTANTS.CREATE_NEW_NODE_BEHAVIOR.DEFAULT,\r\n  // 当节点图片加载失败时显示的默认图片\r\n  defaultNodeImage: '',\r\n  // 是否将思维导图限制在画布内\r\n  // 比如向右拖动时，思维导图图形的最左侧到达画布中心时将无法继续向右拖动，其他同理\r\n  isLimitMindMapInCanvas: false,\r\n  // 在节点上粘贴剪贴板中的图片的处理方法，默认是转换为data:url数据插入到节点中，你可以通过该方法来将图片数据上传到服务器，实现保存图片的url\r\n  // 可以传递一个异步方法，接收Blob类型的图片数据，需要返回如下结构：\r\n  /*\r\n    {\r\n      url,    // 图片url\r\n      size: {\r\n        width,  // 图片的宽度\r\n        height  //图片的高度\r\n      }\r\n    }\r\n  */\r\n  handleNodePasteImg: null,\r\n  // 自定义创建节点形状的方法，可以传一个函数，均接收一个参数\r\n  // 矩形、圆角矩形、椭圆、圆等形状会调用该方法\r\n  // 接收svg path字符串，返回svg节点\r\n  customCreateNodePath: null,\r\n  // 菱形、平行四边形、八角矩形、外三角矩形、内三角矩形等形状会调用该方法\r\n  // 接收points数组点位，返回svg节点\r\n  customCreateNodePolygon: null,\r\n  // 自定义转换节点连线路径的方法\r\n  // 接收svg path字符串，返回转换后的svg path字符串\r\n  customTransformNodeLinePath: null,\r\n  // 快捷键操作即将执行前的生命周期函数，返回true可以阻止操作执行\r\n  // 函数接收两个参数：key（快捷键）、activeNodeList（当前激活的节点列表）\r\n  beforeShortcutRun: null,\r\n  // 移动节点到画布中心、回到根节点等操作时是否将缩放层级复位为100%\r\n  // 该选项实际影响的是render.moveNodeToCenter方法，moveNodeToCenter方法本身也存在第二个参数resetScale来设置是否复位，如果resetScale参数没有传递，那么使用resetScaleOnMoveNodeToCenter配置，否则使用resetScale配置\r\n  resetScaleOnMoveNodeToCenter: false,\r\n  // 添加附加的节点前置内容，前置内容指和文本同一行的区域中的前置内容，不包括节点图片部分。如果存在编号、任务勾选框内容，这里添加的前置内容会在这两者之后\r\n  createNodePrefixContent: null,\r\n  // 添加附加的节点后置内容，后置内容指和文本同一行的区域中的后置内容，不包括节点图片部分\r\n  createNodePostfixContent: null,\r\n  // 禁止粘贴用户剪贴板中的数据，禁止将复制的数据写入用户的剪贴板中\r\n  disabledClipboard: false,\r\n  // 自定义超链接的跳转\r\n  // 如果不传，默认会以新窗口的方式打开超链接，可以传递一个函数，函数接收两个参数：link（超链接的url）、node（所属节点实例），只要传递了函数，就会阻止默认的跳转\r\n  customHyperlinkJump: null,\r\n  // 是否开启性能模式，默认情况下所有节点都会直接渲染，无论是否处于画布可视区域，这样当节点数量比较多时（1000+）会比较卡，如果你的数据量比较大，那么可以通过该配置开启性能模式，即只渲染画布可视区域内的节点，超出的节点不渲染，这样会大幅提高渲染速度，当然同时也会带来一些其他问题，比如：1.当拖动或是缩放画布时会实时计算并渲染未节点的节点，所以会带来一定卡顿；2.导出图片、svg、pdf时需要先渲染全部节点，所以会比较慢；3.其他目前未发现的问题\r\n  openPerformance: false,\r\n  // 性能优化模式配置\r\n  performanceConfig: {\r\n    time: 250, // 当视图改变后多久刷新一次节点，单位：ms，\r\n    padding: 100, // 超出画布四周指定范围内依旧渲染节点\r\n    removeNodeWhenOutCanvas: true // 节点移除画布可视区域后从画布删除\r\n  },\r\n  // 如果节点文本为空，那么为了避免空白节点高度塌陷，会用该字段指定的文本测量一个高度\r\n  emptyTextMeasureHeightText: 'abc123我和你',\r\n  // 是否在进行节点文本编辑时实时更新节点大小和节点位置，开启后当节点数量比较多时可能会造成卡顿\r\n  openRealtimeRenderOnNodeTextEdit: false,\r\n  // 默认会给容器元素el绑定mousedown事件，可通过该选项设置是否阻止其默认事件\r\n  // 如果设置为true，会带来一定问题，比如你聚焦在思维导图外的其他输入框，点击画布就不会触发其失焦\r\n  mousedownEventPreventDefault: false,\r\n  // 在激活上粘贴用户剪贴板中的数据时，如果同时存在文本和图片，那么只粘贴文本，忽略图片\r\n  onlyPasteTextWhenHasImgAndText: true,\r\n  // 是否允许拖拽调整节点的宽度，实际上压缩的是节点里面文本内容的宽度，当节点文本内容宽度压缩到最小时无法继续压缩。如果节点存在图片，那么最小值以图片宽度和文本内容最小宽度的最大值为准（目前该特性仅在两种情况下可用：1.开启了富文本模式，即注册了RichText插件；2.自定义节点内容）\r\n  enableDragModifyNodeWidth: true,\r\n  // 当允许拖拽调整节点的宽度时，可以通过该选项设置节点文本内容允许压缩的最小宽度\r\n  minNodeTextModifyWidth: 20,\r\n  // 同minNodeTextModifyWidth，最大值，传-1代表不限制\r\n  maxNodeTextModifyWidth: -1,\r\n  // 自定义处理节点的连线方法，可以传递一个函数，函数接收三个参数：node（节点实例）、line（节点的某条连线，@svgjs库的path对象）, { width, color, dasharray }，dasharray（该条连线的虚线样式，为none代表实线），你可以修改line对象来达到修改节点连线样式的效果，比如增加流动效果\r\n  customHandleLine: null,\r\n  // 实例化完后是否立刻进行一次历史数据入栈操作\r\n  // 即调用mindMap.command.addHistory方法\r\n  addHistoryOnInit: true,\r\n  // 自定义节点备注图标\r\n  noteIcon: {\r\n    icon: '', // svg字符串，如果不是确定要使用svg自带的样式，否则请去除其中的fill等样式属性\r\n    style: {\r\n      // size: 20,// 图标大小，不手动设置则会使用主题的iconSize配置\r\n      // color: '',// 图标颜色，不手动设置则会使用节点文本的颜色\r\n    }\r\n  },\r\n  // 自定义节点超链接图标\r\n  hyperlinkIcon: {\r\n    icon: '', // svg字符串，如果不是确定要使用svg自带的样式，否则请去除其中的fill等样式属性\r\n    style: {\r\n      // size: 20,// 图标大小，不手动设置则会使用主题的iconSize配置\r\n      // color: '',// 图标颜色，不手动设置则会使用节点文本的颜色\r\n    }\r\n  },\r\n  // 自定义节点附件图标\r\n  attachmentIcon: {\r\n    icon: '', // svg字符串，如果不是确定要使用svg自带的样式，否则请去除其中的fill等样式属性\r\n    style: {\r\n      // size: 20,// 图标大小，不手动设置则会使用主题的iconSize配置\r\n      // color: '',// 图标颜色，不手动设置则会使用节点文本的颜色\r\n    }\r\n  },\r\n  // 是否显示快捷创建子节点按钮\r\n  isShowCreateChildBtnIcon: true,\r\n  // 自定义快捷创建子节点按钮图标\r\n  quickCreateChildBtnIcon: {\r\n    icon: '', // svg字符串，如果不是确定要使用svg自带的样式，否则请去除其中的fill等样式属性\r\n    style: {\r\n      // 图标大小使用的是expandBtnSize选项\r\n      // color: '',// 图标颜色，不手动设置则会使用expandBtnStyle选项的color字段\r\n    }\r\n  },\r\n  // 自定义快捷创建子节点按钮的点击操作，\r\n  customQuickCreateChildBtnClick: null,\r\n  // 添加自定义的节点内容\r\n  // 可传递一个对象，格式如下：\r\n  /*\r\n    {\r\n      // 返回要添加的DOM元素详细\r\n      create: (node) => { \r\n        return {\r\n          el, // DOM节点\r\n          width: 20, // 宽高\r\n          height: 20\r\n        }\r\n      },\r\n      // 处理生成的@svgdotjs/svg.js库的ForeignObject节点实例，可以设置其在节点内的位置\r\n      handle: ({ content, element, node }) => {\r\n        \r\n      }\r\n    }\r\n  */\r\n  addCustomContentToNode: null,\r\n  // 节点连线样式是否允许继承祖先的连线样式\r\n  enableInheritAncestorLineStyle: true,\r\n\r\n  // 【Select插件】\r\n  // 多选节点时鼠标移动到边缘时的画布移动偏移量\r\n  selectTranslateStep: 3,\r\n  // 多选节点时鼠标移动距边缘多少距离时开始偏移\r\n  selectTranslateLimit: 20,\r\n\r\n  // 【Drag插件】\r\n  // 是否开启节点自由拖拽\r\n  enableFreeDrag: false,\r\n  // 拖拽节点时鼠标移动到画布边缘是否开启画布自动移动\r\n  autoMoveWhenMouseInEdgeOnDrag: true,\r\n  // 拖拽多个节点时随鼠标移动的示意矩形的样式配置\r\n  dragMultiNodeRectConfig: {\r\n    width: 40,\r\n    height: 20,\r\n    fill: 'rgb(94, 200, 248)' // 填充颜色\r\n  },\r\n  // 节点拖拽时新位置的示意矩形的填充颜色\r\n  dragPlaceholderRectFill: 'rgb(94, 200, 248)',\r\n  // 节点拖拽时新位置的示意连线的样式配置\r\n  dragPlaceholderLineConfig: {\r\n    color: 'rgb(94, 200, 248)',\r\n    width: 2\r\n  },\r\n  // 节点拖拽时的透明度配置\r\n  dragOpacityConfig: {\r\n    cloneNodeOpacity: 0.5, // 跟随鼠标移动的克隆节点或矩形的透明度\r\n    beingDragNodeOpacity: 0.3 // 被拖拽节点的透明度\r\n  },\r\n  // 拖拽单个节点时会克隆被拖拽节点，如果想修改该克隆节点，那么可以通过该选项提供一个处理函数，函数接收克隆节点对象\r\n  // 需要注意的是节点对象指的是@svgdotjs/svg.js库的元素对象，所以你需要阅读该库的文档来操作该对象\r\n  handleDragCloneNode: null,\r\n  // 即将拖拽完成前调用该函数，函数接收一个对象作为参数：{overlapNodeUid,prevNodeUid,nextNodeUid}，代表拖拽信息，如果要阻止本次拖拽，那么可以返回true，此时node_dragend事件不会再触发。函数可以是异步函数，返回Promise实例\r\n  beforeDragEnd: null,\r\n  // 即将开始调整节点前调用该函数，函数接收当前即将被拖拽的节点实例列表作为参数，如果要阻止本次拖拽，那么可以返回true\r\n  beforeDragStart: null,\r\n\r\n  // 【Watermark插件】\r\n  // 水印配置\r\n  watermarkConfig: {\r\n    onlyExport: false, // 是否仅在导出时添加水印\r\n    text: '',\r\n    lineSpacing: 100,\r\n    textSpacing: 100,\r\n    angle: 30,\r\n    textStyle: {\r\n      color: '#999',\r\n      opacity: 0.5,\r\n      fontSize: 14\r\n    },\r\n    belowNode: false\r\n  },\r\n\r\n  // 【Export插件】\r\n  // 导出png、svg、pdf时的图形内边距，注意是单侧内边距\r\n  exportPaddingX: 10,\r\n  exportPaddingY: 10,\r\n  // 设置导出图片和svg时，针对富文本节点内容，也就是嵌入到svg中的html节点的默认样式覆盖\r\n  // 如果不覆盖，会发生偏移问题\r\n  resetCss: `\r\n    * {\r\n      margin: 0;\r\n      padding: 0;\r\n      box-sizing: border-box;\r\n    }\r\n  `,\r\n  // 导出图片时canvas的缩放倍数，该配置会和window.devicePixelRatio值取最大值\r\n  minExportImgCanvasScale: 2,\r\n  // 导出png、svg、pdf时在头部和尾部添加自定义内容\r\n  // 可传递一个函数，这个函数可以返回null代表不添加内容，也可以返回如下数据：\r\n  /*\r\n    {\r\n      el,// 要追加的自定义DOM节点，样式可内联\r\n      cssText,// 可选，如果样式不想内联，可以传递该值，一个css字符串\r\n      height: 50// 返回的DOM节点的高度，必须传递\r\n    }\r\n  */\r\n  addContentToHeader: null,\r\n  addContentToFooter: null,\r\n  // 导出png、svg、pdf时会获取画布上的svg数据进行克隆，然后通过该克隆的元素进行导出，如果你想对该克隆元素做一些处理，比如新增、替换、修改其中的一些元素，那么可以通过该参数传递一个处理函数，接收svg元素对象，处理后，需要返回原svg元素对象。\r\n  // 需要注意的是svg对象指的是@svgdotjs/svg.js库的元素对象，所以你需要阅读该库的文档来操作该对象\r\n  handleBeingExportSvg: null,\r\n  // 导出图片或pdf都是通过canvas将svg绘制出来，再导出，所以如果思维导图特别大，宽高可能会超出canvas支持的上限，所以会进行缩放，这个上限可以通过该参数设置，代表canvas宽和高的最大宽度\r\n  maxCanvasSize: 16384,\r\n\r\n  // 【AssociativeLine插件】\r\n  // 关联线默认文字\r\n  defaultAssociativeLineText: '关联',\r\n  // 关联线是否始终显示在节点上层\r\n  // false：即创建关联线和激活关联线时处于最顶层，其他情况下处于节点下方\r\n  associativeLineIsAlwaysAboveNode: true,\r\n  // 默认情况下，新创建的关联线两个端点的位置是根据两个节点中心点的相对位置来计算的，如果你想固定位置，可以通过这个属性来配置\r\n  // from和to都不传，则都自动计算，如果只传一个，另一个则会自动计算\r\n  associativeLineInitPointsPosition: {\r\n    // from和to可选值：left、top、bottom、right\r\n    from: '', // 关联线起始节点上端点的位置\r\n    to: '' // 关联线目标节点上端点的位置\r\n  },\r\n  // 是否允许调整关联线两个端点的位置\r\n  enableAdjustAssociativeLinePoints: true,\r\n  // 关联线连接即将完成时执行，如果要阻止本次连接可以返回true，函数接收一个参数：node（目标节点实例）\r\n  beforeAssociativeLineConnection: null,\r\n\r\n  // 【TouchEvent插件】\r\n  // 禁止双指缩放，你仍旧可以使用api进行缩放\r\n  // 需要注册TouchEvent插件后生效\r\n  disableTouchZoom: false,\r\n  // 允许最大和最小的缩放值，百分数\r\n  // 传-1代表不限制\r\n  minTouchZoomScale: 20,\r\n  maxTouchZoomScale: -1,\r\n\r\n  // 【Scrollbar插件】\r\n  // 当注册了滚动条插件（Scrollbar）时，是否将思维导图限制在画布内，isLimitMindMapInCanvas不再起作用\r\n  isLimitMindMapInCanvasWhenHasScrollbar: true,\r\n\r\n  // 【Search插件】\r\n  // 是否仅搜索当前渲染的节点，被收起的节点不会被搜索到\r\n  isOnlySearchCurrentRenderNodes: false,\r\n\r\n  // 【Cooperate插件】\r\n  // 协同编辑时，节点操作即将更新到其他客户端前的生命周期函数\r\n  // 函数接收一个对象作为参数：\r\n  /*\r\n    {\r\n      type: createOrUpdate（创建节点或更新节点）、delete（删除节点）\r\n      data: 1.当type=createOrUpdate时，代表被创建或被更新的节点数据，即将同步到其他客户端，所以你可以修改该数据；2.当type=delete时，代表被删除的节点数据\r\n    }\r\n  */\r\n  beforeCooperateUpdate: null,\r\n\r\n  // 【RainbowLines插件】\r\n  // 彩虹线条配置，需要先注册RainbowLines插件\r\n  rainbowLinesConfig: {\r\n    open: false, // 是否开启彩虹线条\r\n    colorsList: [] // 自定义彩虹线条的颜色列表，如果不设置，会使用默认颜色列表\r\n    /*\r\n    [\r\n      'rgb(255, 213, 73)',\r\n      'rgb(255, 136, 126)',\r\n      'rgb(107, 225, 141)',\r\n      'rgb(151, 171, 255)',\r\n      'rgb(129, 220, 242)',\r\n      'rgb(255, 163, 125)',\r\n      'rgb(152, 132, 234)'\r\n    ]\r\n    */\r\n  },\r\n\r\n  // 【Demonstrate插件】\r\n  // 演示插件配置\r\n  demonstrateConfig: null,\r\n\r\n  // 【Formula插件】\r\n  // 是否开启在富文本编辑框中直接编辑数学公式\r\n  enableEditFormulaInRichTextEdit: true,\r\n  // katex库的字体文件的请求路径。仅当katex的output配置为html时才会请求字体文件。可以通过mindMap.formula.getKatexConfig()方法来获取当前的配置\r\n  // 字体文件可以从node_modules中找到：katex/dist/fonts/。可以上传到你的服务器或cdn\r\n  // 最终的字体请求路径为`${katexFontPath}fonts/KaTeX_AMS-Regular.woff2`，可以自行拼接进行测试是否可以访问\r\n  katexFontPath: 'https://unpkg.com/katex@0.16.11/dist/',\r\n  // 自定义katex库的输出模式。默认当Chrome内核100以下会使用html方式，否则使用mathml方式，如果你有自己的规则，那么可以传递一个函数，函数返回值为：mathml或html\r\n  getKatexOutputType: null,\r\n\r\n  // 【RichText插件】\r\n  // 转换富文本内容，当进入富文本编辑时，可以通过该参数传递一个函数，函数接收文本内容，需要返回你处理后的文本内容\r\n  transformRichTextOnEnterEdit: null,\r\n  // 可以传递一个函数，即将结束富文本编辑前会执行该函数，函数接收richText实例，所以你可以在此时机更新quill文档数据\r\n  beforeHideRichTextEdit: null,\r\n\r\n  // 【OuterFrame】插件\r\n  outerFramePaddingX: 10,\r\n  outerFramePaddingY: 10,\r\n\r\n  // 【Painter】插件\r\n  // 是否只格式刷节点手动设置的样式，不考虑节点通过主题的应用的样式\r\n  onlyPainterNodeCustomStyles: false,\r\n\r\n  // 【NodeImgAdjust】插件\r\n  // 拦截节点图片的删除，点击节点图片上的删除按钮删除图片前会调用该函数，如果函数返回true则取消删除\r\n  beforeDeleteNodeImg: null,\r\n  // 删除和调整两个按钮的大小\r\n  imgResizeBtnSize: 25,\r\n  // 最小允许缩放的尺寸，请传入>=0的数字\r\n  minImgResizeWidth: 50,\r\n  minImgResizeHeight: 50,\r\n  // 最大允许缩放的尺寸依据主题的配置，即主题的imgMaxWidth和imgMaxHeight配置，如果设置为false，那么使用maxImgResizeWidth和maxImgResizeHeight选项\r\n  maxImgResizeWidthInheritTheme: false,\r\n  // 最大允许缩放的尺寸，maxImgResizeWidthInheritTheme选项设置为false时生效，不限制最大值可传递Infinity\r\n  maxImgResizeWidth: Infinity,\r\n  maxImgResizeHeight: Infinity,\r\n  // 自定义删除按钮和尺寸调整按钮的内容\r\n  // 默认为内置图标，你可以传递一个svg字符串，或者其他的html字符串\r\n  // 整体大小请使用上面的minImgResizeWidth和minImgResizeHeight选项设置\r\n  customDeleteBtnInnerHTML: '',\r\n  customResizeBtnInnerHTML: ''\r\n}\r\n", "import View from './src/core/view/View'\r\nimport Event from './src/core/event/Event'\r\nimport Render from './src/core/render/Render'\r\nimport merge from 'deepmerge'\r\nimport theme from './src/theme'\r\nimport Style from './src/core/render/node/Style'\r\nimport KeyCommand from './src/core/command/KeyCommand'\r\nimport Command from './src/core/command/Command'\r\nimport BatchExecution from './src/utils/BatchExecution'\r\nimport {\r\n  layoutValueList,\r\n  CONSTANTS,\r\n  ERROR_TYPES,\r\n  cssContent\r\n} from './src/constants/constant'\r\nimport { SVG } from '@svgdotjs/svg.js'\r\nimport {\r\n  simpleDeepClone,\r\n  getObjectChangedProps,\r\n  isUndef,\r\n  handleGetSvgDataExtraContent,\r\n  getNodeTreeBoundingRect,\r\n  mergeTheme,\r\n  createUidForAppointNodes\r\n} from './src/utils'\r\nimport defaultTheme, {\r\n  checkIsNodeSizeIndependenceConfig\r\n} from './src/theme/default'\r\nimport { defaultOpt } from './src/constants/defaultOptions'\r\n\r\n//  思维导图\r\nclass MindMap {\r\n  //  构造函数\r\n  /**\r\n   *\r\n   * @param {defaultOpt} opt\r\n   */\r\n  constructor(opt = {}) {\r\n    MindMap.instanceCount++\r\n    // 合并选项\r\n    this.opt = this.handleOpt(merge(defaultOpt, opt))\r\n    // 预处理节点数据\r\n    this.opt.data = this.handleData(this.opt.data)\r\n\r\n    // 容器元素\r\n    this.el = this.opt.el\r\n    if (!this.el) throw new Error('缺少容器元素el')\r\n\r\n    // 获取容器尺寸位置信息\r\n    this.getElRectInfo()\r\n\r\n    // 画布初始大小\r\n    this.initWidth = this.width\r\n    this.initHeight = this.height\r\n\r\n    // 必要的css样式\r\n    this.cssEl = null\r\n    this.cssTextMap = {} // 该样式在实例化时会动态添加到页面，同时导出为svg时也会添加到svg源码中\r\n\r\n    // 节点前置内容列表\r\n    /*\r\n      {\r\n        name: '',// 一个唯一的类型标识\r\n        // 创建节点的显示内容：节点元素、宽高\r\n        createContent: (node) => {\r\n          return {\r\n            node: null,\r\n            width: 0,\r\n            height: 0\r\n          }\r\n        },\r\n        // 创建保存到节点实例的opt对象中的数据\r\n        createNodeData: () => {},\r\n        // 更新节点实例的opt数据，返回数据是否改变了\r\n        updateNodeData: () => {},\r\n      }\r\n    */\r\n    this.nodeInnerPrefixList = []\r\n\r\n    // 画布\r\n    this.initContainer()\r\n\r\n    // 初始化主题\r\n    this.initTheme()\r\n\r\n    // 初始化缓存数据\r\n    this.initCache()\r\n\r\n    // 事件类\r\n    this.event = new Event({\r\n      mindMap: this\r\n    })\r\n\r\n    // 按键类\r\n    this.keyCommand = new KeyCommand({\r\n      mindMap: this\r\n    })\r\n\r\n    // 命令类\r\n    this.command = new Command({\r\n      mindMap: this\r\n    })\r\n\r\n    // 渲染类\r\n    this.renderer = new Render({\r\n      mindMap: this\r\n    })\r\n\r\n    // 视图操作类\r\n    this.view = new View({\r\n      mindMap: this\r\n    })\r\n\r\n    // 批量执行类\r\n    this.batchExecution = new BatchExecution()\r\n\r\n    // 注册插件\r\n    MindMap.pluginList.forEach(plugin => {\r\n      this.initPlugin(plugin)\r\n    })\r\n\r\n    // 添加必要的css样式\r\n    this.addCss()\r\n\r\n    // 初始渲染\r\n    this.render(this.opt.fit ? () => this.view.fit() : () => {})\r\n\r\n    // 将初始数据添加到历史记录堆栈中\r\n    if (this.opt.addHistoryOnInit && this.opt.data) {\r\n      this.command.addHistory()\r\n    }\r\n  }\r\n\r\n  //  配置参数处理\r\n  handleOpt(opt) {\r\n    // 检查布局配置\r\n    if (!layoutValueList.includes(opt.layout)) {\r\n      opt.layout = CONSTANTS.LAYOUT.LOGICAL_STRUCTURE\r\n    }\r\n    // 检查主题配置\r\n    opt.theme = opt.theme && theme[opt.theme] ? opt.theme : 'default'\r\n    return opt\r\n  }\r\n\r\n  // 预处理节点数据\r\n  handleData(data) {\r\n    if (isUndef(data) || Object.keys(data).length <= 0) return null\r\n    data = simpleDeepClone(data || {})\r\n    // 根节点不能收起\r\n    if (data.data && !data.data.expand) {\r\n      data.data.expand = true\r\n    }\r\n    // 给没有uid的节点添加uid\r\n    createUidForAppointNodes([data], false, null, true)\r\n    return data\r\n  }\r\n\r\n  // 创建容器元素\r\n  initContainer() {\r\n    const { associativeLineIsAlwaysAboveNode } = this.opt\r\n    // 给容器元素添加一个类名\r\n    this.el.classList.add('smm-mind-map-container')\r\n    // 节点关联线容器\r\n    const createAssociativeLineDraw = () => {\r\n      this.associativeLineDraw = this.draw.group()\r\n      this.associativeLineDraw.addClass('smm-associative-line-container')\r\n    }\r\n    // 画布\r\n    this.svg = SVG().addTo(this.el).size(this.width, this.height)\r\n\r\n    // 容器\r\n    this.draw = this.svg.group()\r\n    this.draw.addClass('smm-container')\r\n    // 节点连线容器\r\n    this.lineDraw = this.draw.group()\r\n    this.lineDraw.addClass('smm-line-container')\r\n    // 默认处于节点下方\r\n    if (!associativeLineIsAlwaysAboveNode) {\r\n      createAssociativeLineDraw()\r\n    }\r\n    // 节点容器\r\n    this.nodeDraw = this.draw.group()\r\n    this.nodeDraw.addClass('smm-node-container')\r\n    // 关联线始终处于节点上方\r\n    if (associativeLineIsAlwaysAboveNode) {\r\n      createAssociativeLineDraw()\r\n    }\r\n    // 其他内容的容器\r\n    this.otherDraw = this.draw.group()\r\n    this.otherDraw.addClass('smm-other-container')\r\n  }\r\n\r\n  // 清空各容器\r\n  clearDraw() {\r\n    this.lineDraw.clear()\r\n    this.associativeLineDraw.clear()\r\n    this.nodeDraw.clear()\r\n    this.otherDraw.clear()\r\n  }\r\n\r\n  // 追加必要的css样式\r\n  // 该样式在实例化时会动态添加到页面，同时导出为svg时也会添加到svg源码中\r\n  appendCss(key, str) {\r\n    this.cssTextMap[key] = str\r\n    this.removeCss()\r\n    this.addCss()\r\n  }\r\n\r\n  // 移除追加的css样式\r\n  removeAppendCss(key) {\r\n    if (this.cssTextMap[key]) {\r\n      delete this.cssTextMap[key]\r\n      this.removeCss()\r\n      this.addCss()\r\n    }\r\n  }\r\n\r\n  // 拼接必要的css样式\r\n  joinCss() {\r\n    return (\r\n      cssContent +\r\n      Object.keys(this.cssTextMap)\r\n        .map(key => {\r\n          return this.cssTextMap[key]\r\n        })\r\n        .join('\\n')\r\n    )\r\n  }\r\n\r\n  // 添加必要的css样式到页面\r\n  addCss() {\r\n    this.cssEl = document.createElement('style')\r\n    this.cssEl.type = 'text/css'\r\n    this.cssEl.innerHTML = this.joinCss()\r\n    document.head.appendChild(this.cssEl)\r\n  }\r\n\r\n  // 移除css\r\n  removeCss() {\r\n    if (this.cssEl) document.head.removeChild(this.cssEl)\r\n  }\r\n\r\n  //  渲染，部分渲染\r\n  render(callback, source = '') {\r\n    this.batchExecution.push('render', () => {\r\n      this.initTheme()\r\n      this.renderer.render(callback, source)\r\n    })\r\n  }\r\n\r\n  //  重新渲染\r\n  reRender(callback, source = '') {\r\n    this.renderer.reRender = true // 标记为重新渲染\r\n    this.renderer.clearCache() // 清空节点缓存池\r\n    this.clearDraw() // 清空画布\r\n    this.render(callback, source)\r\n  }\r\n\r\n  // 获取或更新容器尺寸位置信息\r\n  getElRectInfo() {\r\n    this.elRect = this.el.getBoundingClientRect()\r\n    this.width = this.elRect.width\r\n    this.height = this.elRect.height\r\n    if (this.width <= 0 || this.height <= 0)\r\n      throw new Error('容器元素el的宽高不能为0')\r\n  }\r\n\r\n  //  容器尺寸变化，调整尺寸\r\n  resize() {\r\n    const oldWidth = this.width\r\n    const oldHeight = this.height\r\n    this.getElRectInfo()\r\n    this.svg.size(this.width, this.height)\r\n    if (oldWidth !== this.width || oldHeight !== this.height) {\r\n      // 如果画布宽高改变了需要触发一次渲染\r\n      if (this.demonstrate) {\r\n        // 如果存在演示插件，并且正在演示中，那么不需要触发重新渲染，否则会冲突\r\n        if (!this.demonstrate.isInDemonstrate) {\r\n          this.render()\r\n        }\r\n      } else {\r\n        this.render()\r\n      }\r\n    }\r\n    this.emit('resize')\r\n  }\r\n\r\n  //  监听事件\r\n  on(event, fn) {\r\n    this.event.on(event, fn)\r\n  }\r\n\r\n  //  触发事件\r\n  emit(event, ...args) {\r\n    this.event.emit(event, ...args)\r\n  }\r\n\r\n  //  解绑事件\r\n  off(event, fn) {\r\n    this.event.off(event, fn)\r\n  }\r\n\r\n  // 初始化缓存数据\r\n  initCache() {\r\n    this.commonCaches = {\r\n      measureCustomNodeContentSizeEl: null,\r\n      measureRichtextNodeTextSizeEl: null\r\n    }\r\n  }\r\n\r\n  //  设置主题\r\n  initTheme() {\r\n    // 合并主题配置\r\n    this.themeConfig = mergeTheme(\r\n      theme[this.opt.theme] || theme.default,\r\n      this.opt.themeConfig\r\n    )\r\n    // 设置背景样式\r\n    Style.setBackgroundStyle(this.el, this.themeConfig)\r\n  }\r\n\r\n  //  设置主题\r\n  setTheme(theme, notRender = false) {\r\n    this.execCommand('CLEAR_ACTIVE_NODE')\r\n    this.opt.theme = theme\r\n    if (!notRender) {\r\n      this.render(null, CONSTANTS.CHANGE_THEME)\r\n    }\r\n    this.emit('view_theme_change', theme)\r\n  }\r\n\r\n  //  获取当前主题\r\n  getTheme() {\r\n    return this.opt.theme\r\n  }\r\n\r\n  //  设置主题配置\r\n  setThemeConfig(config, notRender = false) {\r\n    // 计算改变了的配置\r\n    const changedConfig = getObjectChangedProps(this.themeConfig, config)\r\n    this.opt.themeConfig = config\r\n    if (!notRender) {\r\n      // 检查改变的是否是节点大小无关的主题属性\r\n      const res = checkIsNodeSizeIndependenceConfig(changedConfig)\r\n      this.render(null, res ? '' : CONSTANTS.CHANGE_THEME)\r\n    }\r\n  }\r\n\r\n  //  获取自定义主题配置\r\n  getCustomThemeConfig() {\r\n    return this.opt.themeConfig\r\n  }\r\n\r\n  //  获取某个主题配置值\r\n  getThemeConfig(prop) {\r\n    return prop === undefined ? this.themeConfig : this.themeConfig[prop]\r\n  }\r\n\r\n  // 获取配置\r\n  getConfig(prop) {\r\n    return prop === undefined ? this.opt : this.opt[prop]\r\n  }\r\n\r\n  // 更新配置\r\n  updateConfig(opt = {}) {\r\n    this.emit('before_update_config', this.opt)\r\n    const lastOpt = {\r\n      ...this.opt\r\n    }\r\n    this.opt = this.handleOpt(merge.all([defaultOpt, this.opt, opt]))\r\n    this.emit('after_update_config', this.opt, lastOpt)\r\n  }\r\n\r\n  //  获取当前布局结构\r\n  getLayout() {\r\n    return this.opt.layout\r\n  }\r\n\r\n  //  设置布局结构\r\n  setLayout(layout, notRender = false) {\r\n    // 检查布局配置\r\n    if (!layoutValueList.includes(layout)) {\r\n      layout = CONSTANTS.LAYOUT.LOGICAL_STRUCTURE\r\n    }\r\n    this.opt.layout = layout\r\n    this.view.reset()\r\n    this.renderer.setLayout()\r\n    if (!notRender) {\r\n      this.render(null, CONSTANTS.CHANGE_LAYOUT)\r\n    }\r\n    this.emit('layout_change', layout)\r\n  }\r\n\r\n  //  执行命令\r\n  execCommand(...args) {\r\n    this.command.exec(...args)\r\n  }\r\n\r\n  // 更新画布数据，如果新的数据是在当前画布节点数据基础上增删改查后形成的，那么可以使用该方法来更新画布数据\r\n  updateData(data) {\r\n    data = this.handleData(data)\r\n    this.emit('before_update_data', data)\r\n    this.renderer.setData(data)\r\n    this.render()\r\n    this.command.addHistory()\r\n    this.emit('update_data', data)\r\n  }\r\n\r\n  //  动态设置思维导图数据，纯节点数据\r\n  setData(data) {\r\n    data = this.handleData(data)\r\n    this.emit('before_set_data', data)\r\n    this.opt.data = data\r\n    this.execCommand('CLEAR_ACTIVE_NODE')\r\n    this.command.clearHistory()\r\n    this.command.addHistory()\r\n    this.renderer.setData(data)\r\n    this.reRender(() => {}, CONSTANTS.SET_DATA)\r\n    this.emit('set_data', data)\r\n  }\r\n\r\n  //  动态设置思维导图数据，包括节点数据、布局、主题、视图\r\n  setFullData(data) {\r\n    if (data.root) {\r\n      this.setData(data.root)\r\n    }\r\n    if (data.layout) {\r\n      this.setLayout(data.layout)\r\n    }\r\n    if (data.theme) {\r\n      if (data.theme.template) {\r\n        this.setTheme(data.theme.template)\r\n      }\r\n      if (data.theme.config) {\r\n        this.setThemeConfig(data.theme.config)\r\n      }\r\n    }\r\n    if (data.view) {\r\n      this.view.setTransformData(data.view)\r\n    }\r\n  }\r\n\r\n  //  获取思维导图数据，节点树、主题、布局等\r\n  getData(withConfig) {\r\n    let nodeData = this.command.getCopyData()\r\n    let data = {}\r\n    if (withConfig) {\r\n      data = {\r\n        layout: this.getLayout(),\r\n        root: nodeData,\r\n        theme: {\r\n          template: this.getTheme(),\r\n          config: this.getCustomThemeConfig()\r\n        },\r\n        view: this.view.getTransformData()\r\n      }\r\n    } else {\r\n      data = nodeData\r\n    }\r\n    return simpleDeepClone(data)\r\n  }\r\n\r\n  //  导出\r\n  async export(...args) {\r\n    try {\r\n      if (!this.doExport) {\r\n        throw new Error('请注册Export插件！')\r\n      }\r\n      let result = await this.doExport.export(...args)\r\n      return result\r\n    } catch (error) {\r\n      this.opt.errorHandler(ERROR_TYPES.EXPORT_ERROR, error)\r\n    }\r\n  }\r\n\r\n  //  转换位置\r\n  toPos(x, y) {\r\n    return {\r\n      x: x - this.elRect.left,\r\n      y: y - this.elRect.top\r\n    }\r\n  }\r\n\r\n  //  设置只读模式、编辑模式\r\n  setMode(mode) {\r\n    if (![CONSTANTS.MODE.READONLY, CONSTANTS.MODE.EDIT].includes(mode)) {\r\n      return\r\n    }\r\n    const isReadonly = mode === CONSTANTS.MODE.READONLY\r\n    if (isReadonly === this.opt.readonly) return\r\n    if (isReadonly) {\r\n      // 如果处于编辑态，要隐藏所有的编辑框\r\n      if (this.renderer.textEdit.isShowTextEdit()) {\r\n        this.renderer.textEdit.hideEditTextBox()\r\n        this.command.originAddHistory()\r\n      }\r\n      // 取消当前激活的元素\r\n      this.execCommand('CLEAR_ACTIVE_NODE')\r\n    }\r\n    this.opt.readonly = isReadonly\r\n    // 切换为编辑模式时，如果历史记录堆栈是空的，那么进行一次入栈操作\r\n    if (!isReadonly && this.command.history.length <= 0) {\r\n      this.command.originAddHistory()\r\n    }\r\n    this.emit('mode_change', mode)\r\n  }\r\n\r\n  // 获取svg数据\r\n  getSvgData({\r\n    paddingX = 0,\r\n    paddingY = 0,\r\n    ignoreWatermark = false,\r\n    addContentToHeader,\r\n    addContentToFooter,\r\n    node\r\n  } = {}) {\r\n    const { watermarkConfig, openPerformance } = this.opt\r\n    // 如果开启了性能模式，那么需要先渲染所有节点\r\n    if (openPerformance) {\r\n      this.renderer.forceLoadNode(node)\r\n    }\r\n    const { cssTextList, header, headerHeight, footer, footerHeight } =\r\n      handleGetSvgDataExtraContent({\r\n        addContentToHeader,\r\n        addContentToFooter\r\n      })\r\n    const svg = this.svg\r\n    const draw = this.draw\r\n    // 保存原始信息\r\n    const origWidth = svg.width()\r\n    const origHeight = svg.height()\r\n    const origTransform = draw.transform()\r\n    const elRect = this.elRect\r\n    // 去除放大缩小的变换效果\r\n    draw.scale(1 / origTransform.scaleX, 1 / origTransform.scaleY)\r\n    // 获取变换后的位置尺寸信息，其实是getBoundingClientRect方法的包装方法\r\n    const rect = draw.rbox()\r\n    // 需要裁减的区域\r\n    let clipData = null\r\n    if (node) {\r\n      clipData = getNodeTreeBoundingRect(\r\n        node,\r\n        rect.x,\r\n        rect.y,\r\n        paddingX,\r\n        paddingY\r\n      )\r\n    }\r\n    // 内边距\r\n    const fixHeight = 0\r\n    rect.width += paddingX * 2\r\n    rect.height += paddingY * 2 + fixHeight + headerHeight + footerHeight\r\n    draw.translate(paddingX, paddingY)\r\n    // 将svg设置为实际内容的宽高\r\n    svg.size(rect.width, rect.height)\r\n    // 把实际内容变换\r\n    draw.translate(-rect.x + elRect.left, -rect.y + elRect.top)\r\n    // 克隆一份数据\r\n    let clone = svg.clone()\r\n    // 是否存在水印\r\n    const hasWatermark = this.watermark && this.watermark.hasWatermark()\r\n    if (!ignoreWatermark && hasWatermark) {\r\n      this.watermark.isInExport = true\r\n      // 是否是仅导出时需要水印\r\n      const { onlyExport } = watermarkConfig\r\n      // 是否需要重新绘制水印\r\n      const needReDrawWatermark =\r\n        rect.width > origWidth || rect.height > origHeight\r\n      // 如果实际图形宽高超出了屏幕宽高，且存在水印的话需要重新绘制水印，否则会出现超出部分没有水印的问题\r\n      if (needReDrawWatermark) {\r\n        this.width = rect.width\r\n        this.height = rect.height\r\n        this.watermark.onResize()\r\n        clone = svg.clone()\r\n        this.width = origWidth\r\n        this.height = origHeight\r\n        this.watermark.onResize()\r\n      } else if (onlyExport) {\r\n        // 如果是仅导出时需要水印，那么需要进行绘制\r\n        this.watermark.onResize()\r\n        clone = svg.clone()\r\n      }\r\n      // 如果是仅导出时需要水印，需要清除\r\n      if (onlyExport) {\r\n        this.watermark.clear()\r\n      }\r\n      this.watermark.isInExport = false\r\n    }\r\n    // 添加必要的样式\r\n    ;[this.joinCss(), ...cssTextList].forEach(s => {\r\n      clone.add(SVG(`<style>${s}</style>`))\r\n    })\r\n    // 附加内容\r\n    if (header && headerHeight > 0) {\r\n      clone.findOne('.smm-container').translate(0, headerHeight)\r\n      header.width(rect.width)\r\n      header.y(paddingY)\r\n      clone.add(header, 0)\r\n    }\r\n    if (footer && footerHeight > 0) {\r\n      footer.width(rect.width)\r\n      footer.y(rect.height - paddingY - footerHeight)\r\n      clone.add(footer)\r\n    }\r\n    // 修正defs里定义的元素的id，因为clone时defs里的元素的id会继续递增，导致和内容中引用的id对不上\r\n    const defs = svg.find('defs')\r\n    const defs2 = clone.find('defs')\r\n    defs.forEach((def, defIndex) => {\r\n      const def2 = defs2[defIndex]\r\n      if (!def2) return\r\n      const children = def.children()\r\n      const children2 = def2.children()\r\n      for (let i = 0; i < children.length; i++) {\r\n        const child = children[i]\r\n        const child2 = children2[i]\r\n        if (child && child2) {\r\n          child2.attr('id', child.attr('id'))\r\n        }\r\n      }\r\n    })\r\n    // 恢复原先的大小和变换信息\r\n    svg.size(origWidth, origHeight)\r\n    draw.transform(origTransform)\r\n    return {\r\n      svg: clone, // 思维导图图形的整体svg元素，包括：svg（画布容器）、g（实际的思维导图组）\r\n      svgHTML: clone.svg(), // svg字符串\r\n      clipData,\r\n      rect: {\r\n        ...rect, // 思维导图图形未缩放时的位置尺寸等信息\r\n        ratio: rect.width / rect.height // 思维导图图形的宽高比\r\n      },\r\n      origWidth, // 画布宽度\r\n      origHeight, // 画布高度\r\n      scaleX: origTransform.scaleX, // 思维导图图形的水平缩放值\r\n      scaleY: origTransform.scaleY // 思维导图图形的垂直缩放值\r\n    }\r\n  }\r\n\r\n  // 添加插件\r\n  addPlugin(plugin, opt) {\r\n    let index = MindMap.hasPlugin(plugin)\r\n    if (index === -1) {\r\n      MindMap.usePlugin(plugin, opt)\r\n    }\r\n    this.initPlugin(plugin)\r\n  }\r\n\r\n  // 移除插件\r\n  removePlugin(plugin) {\r\n    let index = MindMap.hasPlugin(plugin)\r\n    if (index !== -1) {\r\n      MindMap.pluginList.splice(index, 1)\r\n      if (this[plugin.instanceName]) {\r\n        if (this[plugin.instanceName].beforePluginRemove) {\r\n          this[plugin.instanceName].beforePluginRemove()\r\n        }\r\n        delete this[plugin.instanceName]\r\n      }\r\n    }\r\n  }\r\n\r\n  // 实例化插件\r\n  initPlugin(plugin) {\r\n    if (this[plugin.instanceName]) return\r\n    this[plugin.instanceName] = new plugin({\r\n      mindMap: this,\r\n      pluginOpt: plugin.pluginOpt\r\n    })\r\n  }\r\n\r\n  // 销毁\r\n  destroy() {\r\n    this.emit('beforeDestroy')\r\n    // 清除节点编辑框\r\n    this.renderer.textEdit.hideEditTextBox()\r\n    this.renderer.textEdit.removeTextEditEl()\r\n    // 移除插件\r\n    ;[...MindMap.pluginList].forEach(plugin => {\r\n      if (\r\n        this[plugin.instanceName] &&\r\n        this[plugin.instanceName].beforePluginDestroy\r\n      ) {\r\n        this[plugin.instanceName].beforePluginDestroy()\r\n      }\r\n      this[plugin.instanceName] = null\r\n    })\r\n    // 解绑事件\r\n    this.event.unbind()\r\n    // 移除画布节点\r\n    this.svg.remove()\r\n    // 去除给容器元素设置的背景样式\r\n    Style.removeBackgroundStyle(this.el)\r\n    // 移除给容器元素添加的类名\r\n    this.el.classList.remove('smm-mind-map-container')\r\n    this.el.innerHTML = ''\r\n    this.el = null\r\n    this.removeCss()\r\n    MindMap.instanceCount--\r\n  }\r\n}\r\n\r\n// 插件列表\r\nMindMap.pluginList = []\r\nMindMap.usePlugin = (plugin, opt = {}) => {\r\n  if (MindMap.hasPlugin(plugin) !== -1) return MindMap\r\n  plugin.pluginOpt = opt\r\n  MindMap.pluginList.push(plugin)\r\n  return MindMap\r\n}\r\nMindMap.hasPlugin = plugin => {\r\n  return MindMap.pluginList.findIndex(item => {\r\n    return item === plugin\r\n  })\r\n}\r\nMindMap.instanceCount = 0\r\n\r\n// 定义新主题\r\nMindMap.defineTheme = (name, config = {}) => {\r\n  if (theme[name]) {\r\n    return new Error('该主题名称已存在')\r\n  }\r\n  theme[name] = mergeTheme(defaultTheme, config)\r\n}\r\n// 移除主题\r\nMindMap.removeTheme = name => {\r\n  if (theme[name]) {\r\n    theme[name] = null\r\n  }\r\n}\r\n\r\nexport default MindMap\r\n"],
  "mappings": "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",
  "names": ["EventEmitter", "names", "length", "on", "cx", "cy", "x", "y", "dx", "dy", "EventEmitter", "isMergeableObject", "array", "prev", "next", "x", "hex", "y", "x", "y", "y", "methods", "names", "registerMethods", "name", "m", "Array", "isArray", "_name", "addMethodNames", "Object", "getOwnPropertyNames", "assign", "getMethodsFor", "getMethodNames", "Set", "_names", "push", "map", "array", "block", "i", "il", "length", "result", "filter", "radians", "d", "Math", "PI", "camelCase", "s", "toLowerCase", "replace", "m", "g", "toUpperCase", "unCamelCase", "capitalize", "charAt", "slice", "proportionalSize", "element", "width", "height", "box", "bbox", "getOrigin", "o", "origin", "ox", "originX", "oy", "originY", "Array", "isArray", "x", "y", "condX", "condY", "includes", "svg", "html", "xmlns", "xlink", "svgjs", "globals", "window", "document", "Base", "elements", "root", "create", "name", "ns", "svg", "globals", "document", "createElementNS", "makeInstance", "element", "isHTML", "adopter", "charAt", "querySelector", "wrapper", "createElement", "innerHTML", "firstChild", "removeChild", "nodeOrNew", "node", "ownerDocument", "defaultView", "Node", "adopt", "instance", "nodeName", "Fragment", "className", "capitalize", "register", "element", "name", "asRoot", "elements", "root", "addMethodNames", "Object", "getOwnPropertyNames", "prototype", "getClass", "did", "eid", "capitalize", "assignNewId", "node", "i", "children", "length", "id", "nodeName", "extend", "modules", "methods", "key", "Array", "isArray", "wrapWithAttrCheck", "fn", "args", "o", "constructor", "apply", "slice", "attr", "siblings", "parent", "position", "index", "next", "prev", "forward", "p", "add", "remove", "backward", "front", "back", "before", "makeInstance", "after", "insertBefore", "insertAfter", "registerMethods", "numberAndUnit", "hex", "rgb", "reference", "transforms", "whitespace", "isHex", "isRgb", "isBlank", "isNumber", "isImage", "delimiter", "isPathLetter", "classes", "attr", "trim", "split", "delimiter", "hasClass", "name", "indexOf", "addClass", "array", "push", "join", "removeClass", "filter", "c", "toggleClass", "registerMethods", "css", "style", "val", "ret", "arguments", "length", "node", "cssText", "el", "forEach", "t", "Array", "isArray", "cased", "camelCase", "isBlank", "test", "show", "hide", "visible", "data", "a", "v", "r", "map", "attributes", "nodeName", "slice", "key", "JSON", "parse", "e", "stringify", "remember", "k", "memory", "forget", "_memory", "i", "sixDigitHex", "hex", "substring", "componentHex", "component", "integer", "Math", "round", "bounded", "max", "min", "toString", "is", "object", "space", "getParameters", "b", "params", "_a", "_b", "g", "_c", "_d", "x", "y", "z", "h", "s", "l", "m", "cieSpace", "hueToRgb", "p", "q", "Color", "constructor", "inputs", "init", "isColor", "color", "isRgb", "random", "mode", "u", "sin", "PI", "pi", "grey", "Error", "isHex", "cmyk", "rgb", "hsl", "isGrey", "delta", "d", "Object", "assign", "values", "noWhitespace", "replace", "whitespace", "exec", "parseInt", "hexParse", "components", "lab", "xyz", "lch", "sqrt", "atan2", "dToR", "cos", "yL", "xL", "zL", "ct", "mx", "nm", "rU", "gU", "bU", "pow", "bd", "toArray", "toHex", "_clamped", "toRgb", "rV", "gV", "bV", "string", "r255", "g255", "b255", "rL", "gL", "bL", "xU", "yU", "zU", "format", "Point", "args", "clone", "base", "source", "transform", "transformO", "Matrix", "isMatrixLike", "f", "point", "screenCTM", "inverseO", "closeEnough", "threshold", "abs", "formatTransforms", "o", "flipBoth", "flip", "flipX", "flipY", "skewX", "skew", "isFinite", "skewY", "scaleX", "scale", "scaleY", "shear", "theta", "rotate", "origin", "around", "ox", "originX", "oy", "originY", "position", "px", "positionX", "NaN", "py", "positionY", "translate", "tx", "translateX", "ty", "translateY", "relative", "rx", "relativeX", "ry", "relativeY", "fromArray", "matrixMultiply", "cx", "cy", "matrix", "aroundO", "dx", "dy", "translateO", "lmultiplyO", "decompose", "determinant", "ccw", "sx", "thetaRad", "st", "lam", "sy", "equals", "other", "comp", "axis", "flipO", "scaleO", "Element", "matrixify", "parseFloat", "call", "inverse", "det", "na", "nb", "nc", "nd", "ne", "nf", "lmultiply", "multiply", "multiplyO", "rotateO", "radians", "shearO", "lx", "skewO", "tan", "ly", "current", "transformer", "valueOf", "ctm", "getCTM", "isRoot", "rect", "getScreenCTM", "remove", "register", "parser", "nodes", "svg", "makeInstance", "size", "path", "parentNode", "globals", "document", "body", "documentElement", "addTo", "isNulledBox", "box", "width", "height", "domContains", "contains", "Box", "addOffset", "window", "pageXOffset", "pageYOffset", "left", "top", "w", "x2", "y2", "isNulled", "merge", "xMin", "Infinity", "xMax", "yMin", "yMax", "pts", "getBox", "getBBoxFn", "retry", "bbox", "getBBox", "rbox", "getRBox", "getBoundingClientRect", "inside", "viewbox", "zoom", "level", "clientWidth", "clientHeight", "zoomX", "zoomY", "zoomAmount", "Number", "MAX_SAFE_INTEGER", "List", "arr", "extend", "each", "fnOrMethodName", "prototype", "concat", "apply", "reserved", "methods", "reduce", "obj", "includes", "attrs", "baseFind", "query", "parent", "querySelectorAll", "adopt", "find", "findOne", "querySelector", "listenerId", "windowEvents", "getEvents", "instance", "n", "getEventHolder", "events", "getEventTarget", "clearEvents", "on", "listener", "binding", "options", "bind", "bag", "_svgjsListenerId", "event", "ev", "ns", "addEventListener", "off", "namespace", "removeEventListener", "dispatch", "Event", "dispatchEvent", "CustomEvent", "detail", "cancelable", "EventTarget", "Base", "type", "j", "defaultPrevented", "fire", "noop", "timeline", "duration", "ease", "delay", "fill", "stroke", "opacity", "offset", "SVGArray", "Array", "constructor", "args", "init", "clone", "arr", "length", "push", "parse", "array", "trim", "split", "delimiter", "map", "parseFloat", "toArray", "prototype", "concat", "apply", "toSet", "Set", "toString", "join", "valueOf", "ret", "SVGNumber", "convert", "unit", "value", "divide", "number", "isArray", "isNaN", "isFinite", "match", "numberAndUnit", "minus", "plus", "times", "toJSON", "hooks", "registerAttrHook", "fn", "attr", "val", "ns", "node", "attributes", "nodeName", "isNumber", "test", "nodeValue", "reduce", "last", "curr", "Object", "removeAttribute", "getAttribute", "defaults", "_val", "hook", "Color", "isColor", "leading", "setAttributeNS", "setAttribute", "rebuild", "Dom", "EventTarget", "attrs", "type", "add", "element", "i", "makeInstance", "removeNamespace", "globals", "window", "SVGElement", "appendChild", "childNodes", "insertBefore", "addTo", "parent", "put", "children", "List", "adopt", "clear", "hasChildNodes", "removeChild", "lastChild", "deep", "assignNewIds", "writeDataToDom", "nodeClone", "cloneNode", "assignNewId", "each", "block", "il", "create", "first", "firstChild", "get", "getEventHolder", "getEventTarget", "has", "index", "html", "htmlOrFn", "outerHTML", "xml", "id", "eid", "slice", "call", "indexOf", "matches", "selector", "el", "matcher", "matchesSelector", "msMatchesSelector", "mozMatchesSelector", "webkitMatchesSelector", "oMatchesSelector", "parentNode", "putIn", "remove", "removeElement", "replace", "replaceChild", "round", "precision", "factor", "Math", "svg", "svgOrFn", "outerSVG", "words", "text", "textContent", "wrap", "position", "xmlOrFn", "outerXML", "current", "result", "_this", "innerHTML", "well", "fragment", "document", "createDocumentFragment", "len", "firstElementChild", "extend", "find", "findOne", "register", "Element", "dom", "instance", "hasAttribute", "setData", "JSON", "center", "x", "y", "cx", "cy", "width", "height", "defs", "root", "dmove", "dx", "dy", "move", "parents", "until", "isSelector", "reference", "m", "p", "getClass", "o", "size", "proportionalSize", "keys", "stringify", "bbox", "rbox", "inside", "point", "ctm", "screenCTM", "sugar", "stroke", "fill", "prefix", "t", "a", "forEach", "extension", "isRgb", "registerMethods", "matrix", "mat", "b", "c", "d", "e", "f", "Matrix", "rotate", "angle", "transform", "ox", "oy", "skew", "arguments", "shear", "lam", "scale", "translate", "relative", "flip", "direction", "origin", "opacity", "radius", "_element", "rx", "ry", "getTotalLength", "pointAt", "Point", "getPointAtLength", "font", "v", "methods", "event", "off", "on", "untransform", "matrixify", "transforms", "str", "kv", "reverse", "lmultiply", "fromArray", "toParent", "pCtm", "inverse", "multiply", "toRoot", "decomposed", "decompose", "isMatrixLike", "getOrigin", "cleanRelative", "Container", "flatten", "ungroup", "Defs", "nodeOrNew", "Shape", "Ellipse", "circled", "ellipse", "wrapWithAttrCheck", "Fragment", "wrapper", "from", "fx", "fy", "x1", "y1", "to", "x2", "y2", "Gradient", "Box", "targets", "baseFind", "url", "update", "gradiented", "gradient", "Pattern", "pattern", "patternUnits", "Image", "load", "callback", "img", "src", "xlink", "isImage", "image", "source", "PointArray", "maxX", "maxY", "minX", "Infinity", "minY", "max", "min", "box", "points", "pop", "toLine", "transformO", "MorphArray", "Line", "plot", "pointed", "line", "Marker", "orient", "ref", "marker", "viewbox", "makeSetterGetter", "k", "easing", "pos", "cos", "PI", "sin", "bezier", "steps", "stepPosition", "jumps", "beforeFlag", "step", "floor", "jumping", "Stepper", "done", "Ease", "timeline", "ease", "Controller", "stepper", "target", "dt", "recalculate", "duration", "_duration", "overshoot", "_overshoot", "eps", "pi", "os", "log", "zeta", "sqrt", "wn", "Spring", "velocity", "acceleration", "newPosition", "abs", "PID", "windup", "integral", "error", "_windup", "P", "I", "D", "segmentParameters", "M", "L", "H", "V", "C", "S", "Q", "T", "A", "Z", "pathHandlers", "p0", "mlhvqtcsaz", "j", "jl", "toUpperCase", "makeAbsolut", "parser", "command", "segment", "segmentComplete", "startNewSegment", "token", "inNumber", "finalizeNumber", "pathLetter", "isPathLetter", "lastCommand", "small", "toLowerCase", "isSmall", "inSegment", "Error", "pointSeen", "hasExponent", "finalizeSegment", "absolute", "segments", "isArcFlag", "isArc", "isExponential", "lastToken", "pathParser", "toAbsolute", "charAt", "parseInt", "arrayToString", "s", "PathArray", "path", "nodes", "getBBox", "l", "getClassForType", "NonMorphable", "morphableTypes", "ObjectBag", "Morphable", "_stepper", "_from", "_to", "_type", "_context", "_morphObj", "at", "morph", "complete", "_set", "align", "toConsumable", "TransformBag", "obj", "scaleX", "scaleY", "translateX", "translateY", "originX", "originY", "assign", "sortByKey", "other", "values", "space", "color", "splice", "defaultObject", "toDelete", "objOrArr", "entries", "Type", "sort", "key", "shift", "num", "registerMorphableType", "makeMorphable", "context", "mapper", "Path", "_array", "Polygon", "polygon", "poly", "Polyline", "polyline", "Rect", "rect", "Queue", "_first", "_last", "item", "next", "prev", "Animator", "nextDraw", "frames", "timeouts", "immediates", "timer", "performance", "Date", "frame", "run", "requestAnimationFrame", "_draw", "timeout", "delay", "time", "now", "immediate", "cancelFrame", "clearTimeout", "cancelImmediate", "nextTimeout", "lastTimeout", "nextFrame", "lastFrame", "nextImmediate", "makeSchedule", "runnerInfo", "start", "runner", "end", "defaultSource", "w", "Timeline", "timeSource", "_timeSource", "_startTime", "_speed", "_persist", "_nextFrame", "_paused", "_runners", "_runnerIds", "_lastRunnerId", "_time", "_lastSourceTime", "_lastStepTime", "_step", "_stepFn", "bind", "_stepImmediate", "active", "finish", "getEndTimeOfTimeline", "pause", "getEndTime", "lastRunnerInfo", "getLastRunnerInfo", "lastDuration", "lastStartTime", "endTimes", "getRunnerInfoById", "_continue", "persist", "dtOrForever", "play", "updateTime", "yes", "currentSpeed", "speed", "positive", "schedule", "when", "absoluteStartTime", "endTime", "unschedule", "info", "seek", "stop", "immediateStep", "dtSource", "dtTime", "fire", "dtToStart", "reset", "runnersLeft", "finished", "_timeline", "Runner", "options", "_queue", "_isDeclarative", "_history", "enabled", "_lastTime", "_reseted", "transformId", "_haveReversed", "_reverse", "_loopsDone", "_swing", "_wait", "_times", "_frameId", "sanitise", "swing", "wait", "addTransform", "lmultiplyO", "after", "animate", "loop", "clearTransform", "clearTransformsFromQueue", "includes", "filter", "isTransform", "during", "queue", "_prepareRunner", "loops", "loopDuration", "loopsDone", "relativeTime", "whole", "partial", "r", "swinging", "backwards", "uncliped", "pow", "clipped", "swingForward", "forwards", "progress", "initFn", "runFn", "retargetFn", "initialiser", "noop", "retarget", "initialised", "running", "_lastPosition", "justStarted", "justFinished", "declarative", "converged", "_initialise", "_run", "needsIt", "_rememberMorpher", "method", "morpher", "caller", "positionOrDt", "allfinished", "_tryRetarget", "extra", "FakeRunner", "mergeWith", "getRunnerTransform", "mergeTransforms", "runners", "_transformationRunners", "netTransform", "merge", "RunnerArray", "ids", "clearBefore", "deleteCnt", "edit", "newRunner", "getByID", "lastRunner", "condition", "by", "_clearTransformRunnersBefore", "currentRunner", "_currentTransform", "_addRunner", "difference", "styleAttr", "css", "nameOrAttrs", "newToAttrs", "newKeys", "differences", "addedFromAttrs", "oldFromAttrs", "oldToAttrs", "zoom", "level", "newLevel", "newPoint", "affine", "isMatrix", "currentAngle", "startTransform", "setup", "undefined", "rTarget", "rCurrent", "possibilities", "distances", "shortest", "affineParameters", "newTransforms", "_queueNumber", "_queueNumberDelta", "newTo", "_queueObject", "offset", "Svg", "namespace", "isRoot", "querySelector", "xmlns", "version", "svgjs", "nested", "Symbol", "symbol", "plain", "_build", "createTextNode", "getComputedTextLength", "ax", "ay", "amove", "build", "Text", "_rebuild", "self", "blankLineOffset", "fontSize", "getComputedStyle", "getPropertyValue", "newLined", "firstLine", "nodeType", "newLine", "textable", "Tspan", "tspan", "Circle", "circle", "ClipPath", "unclip", "clip", "clipper", "clipWith", "ForeignObject", "foreignObject", "child", "G", "containerGeometry", "group", "link", "unlink", "linker", "linkTo", "Mask", "unmask", "mask", "masker", "maskWith", "Stop", "cssRule", "rule", "unCamelCase", "Style", "addText", "name", "params", "fontFamily", "style", "fontface", "TextPath", "track", "pathArray", "textPath", "importNodes", "Use", "use", "file", "SVG", "getMethodsFor", "getMethodNames", "root", "width", "height", "data", "root", "width", "height", "html", "size", "data", "root", "html", "x", "data", "data", "walk", "rng", "data", "walk", "root", "height", "x", "y", "walk", "root", "width", "width", "height", "data", "Style", "root", "width", "Shape", "width", "height", "data", "close", "open", "data", "data", "note", "Image", "width", "height", "html", "text", "hyperlink", "width", "height", "isUseCustomNodeContent", "Image", "length", "width", "height", "Shape", "data", "isUseCustomNodeContent", "width", "height", "root", "Base", "data", "size", "position", "width", "height", "node", "cx", "cy", "center", "x", "y", "walk", "root", "left", "right", "top", "bottom", "layout", "difference", "width", "height", "x", "x2", "cx", "cy", "width", "height", "x", "y", "x2", "cx", "cy", "difference", "width", "height", "cx", "cy", "difference", "width", "height", "cx", "cy", "Timeline", "layout", "node", "difference", "width", "height", "y", "x", "cx", "cy", "layout", "marginY", "difference", "x", "width", "height", "item", "index", "x2", "cx", "cy", "width", "height", "x", "node", "difference", "height", "offset", "line", "x", "y", "width", "cx", "cy", "data", "layout", "data", "width", "height", "root", "_hasCustomStyles", "res", "note", "transform", "map", "f", "data", "walk", "root", "MindMap", "data", "layout", "x", "y", "svg"]
}
